{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"PEI \u6f14\u7b97\u6cd5\u7b46\u8a18","text":"<p>\u76e1\u529b\u800c\u70ba</p>"},{"location":"APCS/","title":"APCS","text":"\u79d1\u76ee \u7bc0\u6b21 \u5165\u5834 \u6aa2\u6e2c\u958b\u59cb \u63d0\u524d\u4ea4\u5377\u958b\u59cb\u6642\u9593 \u63d0\u524d\u4ea4\u5377\u622a\u6b62\u6642\u9593 \u6aa2\u6e2c\u7d50\u675f \u89c0\u5ff5\u984c \u7b2c\u4e00\u7bc0 09:30 09:40 10:10 10:30 10:40 \u7b2c\u4e8c\u7bc0 11:00 11:10 11:40 12:00 12:10 \u5be6\u4f5c\u984c \u7b2c\u4e09\u7bc0 13:30 13:40 14:10 16:00 16:10"},{"location":"hackmd%E7%89%B9%E6%AE%8A%E4%BD%BF%E7%94%A8/","title":"\u66f8\u672c\u6a21\u5f0f\u8d85\u9023\u7d50\u67d0\u6a19\u984c","text":"<p>\u6309\u53f3\u9375\u8907\u88fd\u7db2\u5740</p> <p></p>"},{"location":"hackmd%E7%89%B9%E6%AE%8A%E4%BD%BF%E7%94%A8/#_2","title":"\u6a19\u984c\u9023\u7d50\u4f7f\u7528","text":"<p>\u8907\u88fd\u9023\u7d50\u4e95\u5b57\u865f</p> <p></p>"},{"location":"hackmd%E7%89%B9%E6%AE%8A%E4%BD%BF%E7%94%A8/#_3","title":"\u653e\u5f71\u7247","text":"<ol> <li>\u6253\uff1a {}</li> </ol> <ol> <li>youtubeid \u63db\u6210\u5f71\u7247\u9023\u7d50\"=\"\u5f8c\u65b9\u6587\u5b57</li> </ol>"},{"location":"hackmd%E7%89%B9%E6%AE%8A%E4%BD%BF%E7%94%A8/#_4","title":"\u5716\u7247\u653e\u5927\u7e2e\u5c0f","text":""},{"location":"hackmd%E7%89%B9%E6%AE%8A%E4%BD%BF%E7%94%A8/#pdf","title":"\u5d4c\u5165PDF","text":""},{"location":"hackmd%E7%89%B9%E6%AE%8A%E4%BD%BF%E7%94%A8/#google","title":"GOOGLE\u96f2\u7aef","text":"\u9810\u89bd"},{"location":"hackmd%E7%89%B9%E6%AE%8A%E4%BD%BF%E7%94%A8/#_5","title":"\u4ee3\u78bc\uff1a","text":"<pre><code>&lt;iframe src=\"https://drive.google.com/file/d/1KLN8uow9WGAGrZwYADxiWyUsJ8w6_2VV/preview\" width=\"100%\" height=\"1000px\"&gt;&lt;/iframe&gt;\n</code></pre> <p>\u82e5\u7db2\u5740\u70ba <code>https://drive.google.com/file/d/1KLN8uow9WGAGrZwYADxiWyUsJ8w6_2VV/view?usp=drive_link</code> \u5c07\u6700\u5f8c\u4e00\u500b\u659c\u7dda\u5f8c\u9762\u300c<code>view?usp=drive_link</code>\u300d\u6539\u70ba\u300c<code>preview</code>\u300d\uff0c\u5982\u4e0b\uff1a <code>https://drive.google.com/file/d/1KLN8uow9WGAGrZwYADxiWyUsJ8w6_2VV/preview</code></p>"},{"location":"hackmd%E7%89%B9%E6%AE%8A%E4%BD%BF%E7%94%A8/#_6","title":"\u683c\u5f0f","text":"<pre><code>&lt;iframe src=\"\u7db2\u5740\" width=\"100%\" height=\"1000px\"&gt;&lt;/iframe&gt;\n</code></pre>"},{"location":"%E5%84%AA%E8%B3%AA%E7%B6%B2%E7%AB%99/","title":"\u512a\u8cea\u7db2\u7ad9","text":"<p>\u4fbf\u5b9c\u7684\u6f14\u7b97\u6cd5\u6bd4\u8cfd\u7db2\u8def\u8cc7\u6e90\u6574\u7406</p> <p>\u65b0\u7af9\u5be6\u9a57\u4e2d\u5b78C++\u7a0b\u5f0f\u8a9e\u8a00\u6559\u5b78\u8b1b\u7fa9</p> <p>\u7af6\u7a0b&amp;\u5b78\u7fd2&amp;\u5237\u984c\u8cc7\u8a0a\u5206\u4eab</p> <p>\u7af6\u7a0b\u8cc7\u6e90\u6574\u7406</p>"},{"location":"%E5%A5%BD%E7%9C%8B%20copy/","title":"\u597d\u770b copy","text":"2019 \u81fa\u5317\u5e02\u8cc7\u8a0a\u5b78\u79d1\u80fd\u529b\u7af6\u8cfd | \u5c71\u59c6\u7684\u7af6\u7a0b\u65e5\u8a18 \u5c71\u59c6\u7684\u7af6\u7a0b\u65e5\u8a18 <p>\u5f9e\u7da0\u724c\u958b\u59cb\u7684\u65c5\u9014</p> <ul> <li> \u9996\u9801 </li> <li> \u95dc\u65bc </li> <li> \u6a19\u7c64 </li> <li> \u6b78\u6a94 </li> <li> \u641c\u5c0b          </li> </ul> 0%            2019 \u81fa\u5317\u5e02\u8cc7\u8a0a\u5b78\u79d1\u80fd\u529b\u7af6\u8cfd          \u767c\u8868\u65bc 2020-09-30 \u66f4\u65b0\u65bc 2020-11-01 Disqus\uff1a 0 Comments # \u5317\u5e02\u8cfd # TIOJ # \u7d04\u745f\u592b\u65af\u554f\u984c # \u5716\u8ad6 # \u9ad8\u65af\u6d88\u53bb\u6cd5 # LCA  Codeforces Round #673 (Div.2)             Grakn Forces 2020 (Codeforces 1408)  <ul> <li>           \u6587\u7ae0\u76ee\u9304         </li> <li>           \u672c\u7ad9\u6982\u8981         </li> </ul> <ol><li>1. \u5fc3\u5f97</li><li>2. \u7b2c\u4e00\u984c\uff1a \u51fa\u6230\u9806\u5e8f (Arrangement)</li><li>3. \u7b2c\u4e8c\u984c\uff1a\u5730\u5716\u7de8\u4fee (Map)</li><li>4. \u7b2c\u4e09\u984c\uff1a\u6253\u5361\u904a\u6232 (Checkin)</li><li>5. \u7b2c\u56db\u984c\uff1a\u7269\u7a2e\u6f14\u5316 (Evolution)</li><li>6. \u7b2c\u4e94\u984c\uff1a\u641c\u96c6\u5bf6\u85cf\uff08Treasure\uff09</li></ol> <p>\u8def\u904e\u7684\u4e00\u96bb\u5c71\u59c6</p> \u9019\u88e1\u6703\u7d00\u9304\u4e00\u4e9b\u6253\u904e\u7684Contest\uff0c\u984c\u76ee\uff0c\u6216\u8005\u662f\u4e00\u4e9b\u525b\u5b78\u5230\u7684\u6f14\u7b97\u6cd5 39 \u6587\u7ae0 64 \u6a19\u7c64 GitHub Discord        Links      <ul> <li> Codeforces </li> <li> AtCoder </li> <li> Code Community (Xuan) </li> </ul>     \u00a9    2022 \u8def\u904e\u7684\u4e00\u96bb\u5c71\u59c6"},{"location":"%E5%A5%BD%E7%9C%8B%20copy/#\u5fc3\u5f97","title":"\u5fc3\u5f97","text":"<p>\u56e0\u70ba11\u6708\u8981\u53bb\u6bd4\u5317\u5e02\u8cfd\u4eca\u5929\u89e3\u4e86\u53bb\u5e74\u5317\u5e02\u8cfd\u7684\u984c\u76ee \uff08\u65e9\u81ea\u7fd230\u5206\u9418+\u5348\u4f1130\u5206\u9418+\u56db\u7bc0\u4e0b\u8ab210\u5206\u9418+\u7121\u6578\u7684\u4e0a\u8ab2\u601d\u8003\uff09\u4e0d\u904e\u4e94\u984c\u53ea\u89e3\u4e86\u56db\u984c \u7b2c\u4e94\u984c\u9084\u6c92\u770b\uff0811/1\u5df2\u88dc\uff09 \u8ddd\u96e2\u5317\u5e02\u8cfd \u9084\u670937\u5929\uff01 \u5e0c\u671b\u6709\u6a5f\u6703\u9032\u5168\u570b\u8cfd</p> <p>\u984c\u76ee:https://docs.google.com/viewer?a=v&amp;pid=sites&amp;srcid=ZGVmYXVsdGRvbWFpbnxobGZnb25nenVvc2hpfGd4OjRjMTVmYmY2NzcwY2VlODM</p>"},{"location":"%E5%A5%BD%E7%9C%8B%20copy/#\u7b2c\u4e00\u984c\uff1a-\u51fa\u6230\u9806\u5e8f-Arrangement","title":"\u7b2c\u4e00\u984c\uff1a \u51fa\u6230\u9806\u5e8f (Arrangement)","text":"<p>TIOJ 2169:https://tioj.ck.tp.edu.tw/problems/2169</p> <p></p> <p>\u6709\u7df4\u904e\u4e0d\u5c11\u984c\u76ee\u7684\u4eba\u61c9\u8a72\u90fd\u77e5\u9053\u6709\u500b\u554f\u984c\u53eb\u505a\u300c\u7d04\u745f\u592b\u65af\u554f\u984c\u300d</p> <p>\u9019\u500b\u554f\u984c\u6709\u5f88\u591a\u4e0d\u540c\u7684\u89e3\u6cd5 \u6709\u7684\u4eba\u53ef\u80fd\u7528Treap\u4e4b\u985e\u7684\u8cc7\u6599\u7d50\u69cb\u4f86\u9054\u5230 O(nlogn)\u7684\u89e3 \u4e0d\u904e\u9019\u500b\u554f\u984c\u6709\u7dda\u6027\u7684 O(n) \u89e3</p><pre>1234</pre><pre>int tmp = 0;for(int i = 2;i &lt;= n;i++){    tmp = (tmp+t)%i;}</pre><p></p> <p>\u984c\u76ee\u7684\u8981\u6c42\u70ba \u7d66\u4e88\u4e00\u500b\u6700\u5f8c\u7684\u6578\u5b57 \u554f m \u61c9\u70ba\u591a\u5c11 \u9019\u984c\u7684\u7bc4\u570d\u662f 1\u2264n,k\u2264104 \u800c m \u5247\u70ba 2\u2264m\u22643\u00d7104 \u56e0\u6b64\u6211\u5011\u53ef\u4ee5\u66b4\u641c\u627e\u51fa m \u503c</p> <p>\u8907\u96dc\u5ea6: O(30000\u00d7k)</p> <p>\u7a0b\u5f0f\u78bc</p><pre>123456789101112131415161718192021222324</pre><pre>#include &lt;bits/stdc++.h&gt;#define int long long#define fastio ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);using namespace std;signed main(){    fastio    int n,k; cin &gt;&gt; n &gt;&gt; k;  for(int t = 2;t &lt;= 30000;t++){       int tmp = 0;     for(int i = 2;i &lt;= n;i++){           tmp = (tmp+t)%i;      }     tmp++;        if(tmp==k){          cout &lt;&lt; t &lt;&lt; \"\\n\";          return 0;        } } cout &lt;&lt; 0 &lt;&lt; \"\\n\";}</pre><p></p>"},{"location":"%E5%A5%BD%E7%9C%8B%20copy/#\u7b2c\u4e8c\u984c\uff1a\u5730\u5716\u7de8\u4fee-Map","title":"\u7b2c\u4e8c\u984c\uff1a\u5730\u5716\u7de8\u4fee (Map)","text":"<p>TIOJ 2170:https://tioj.ck.tp.edu.tw/problems/2170</p> <p></p> <p>\u9019\u4e00\u984c\u7b2c\u4e00\u773c\u770b\u4e0a\u53bb\uff0c\u4ee5\u70ba\u662f\u5411\u91cf\u6295\u5f71 \u4e0d\u904e\u4ed4\u7d30\u60f3\u4e00\u60f3\uff0c\u9019\u984c\u5f9e\u984c\u76ee\u7684\u8aaa\u660e\u4e0a\u770b\u4f86 \u5176\u5be6\u53ea\u8981\u89e3\u6a21\u65b9\u7a0b \u984c\u76ee\u7d66\u4e86 n \u500b\u65b9\u7a0b\u5f0f </p> <pre>1234</pre><pre>2 101     2 1015 3    =&gt; 5 33 1       3x 1x2 2       2y 2y</pre> <p>\u56e0\u6b64\u6211\u5011\u6709\u4e86\u4e00\u500b\u4e00\u5143\u6a21\u65b9\u7a0b\u7d44</p> {3x+2y=5\u00a0(mod 101)1x+2y=3\u00a0(mod 101)<p>\u8981\u7528\u96fb\u8166\u89e3\u65b9\u7a0b\u5f0f\u6709\u5f88\u591a\u4f5c\u6cd5</p> <p>\u7528\u77e9\u9663\u7684\u89e3\u6cd5</p> <p>[3212][xy]=[53]</p> <p>\u6216\u8005\u514b\u62c9\u746a\u516c\u5f0f</p> <p>\u4ee5\u53ca\u9019\u984c\u9700\u8981\u4f7f\u7528\u7684\u9ad8\u65af\u6d88\u53bb\u6cd5\u9ad8\u65af\u6d88\u53bb\u6cd5\u662f\u57fa\u65bc\u52a0\u6e1b\u6d88\u53bb\u6cd5 \u904b\u7528\u77e9\u9663\u7684\u5217\u904b\u7b97\u4f86\u6c42\u89e3</p> <p>[3(x)2(y)51(x)2(y)3]</p> <p>\u53ea\u8981\u6211\u5011\u80fd\u5920\u7528\u5217\u904b\u7b97\u5c07\u539f\u672c\u7684\u77e9\u9663\u5316\u70ba</p> <p>[1(x)0(y)x0(x)1(y)y]</p> <p>\u6700\u5f8c\u4e00\u884c\u5c31\u6703\u662f\u6240\u6709\u6211\u5011\u8981\u6c42\u89e3\u7684\u8b8a\u6578\u4e86\u800c\u4f7f\u7528\u9ad8\u65af\u6d88\u53bb\u6cd5\u89e3\u6a21\u65b9\u7a0b\u5c31\u53ea\u662f\u5728\u904b\u7b97\u6642\u53bb\u57f7\u884c\u6a21\u904b\u7b97\u800c\u5df2 \u81f3\u65bc\u5982\u4f55\u9032\u884c\u5217\u904b\u7b97\u4f86\u8f49\u5316\u77e9\u9663 \u5c31\u662f\u7559\u7d66\u8b80\u8005\u7684\u7df4\u7fd2\u4e86</p> <p>\u8907\u96dc\u5ea6\uff1a O(n3logm) \uff08\u5099\u8a3b\uff1alogm\u662f\u56e0\u70ba\u6c42\u6a21\u9006\u5143\uff09</p> <p>\u7a0b\u5f0f\u78bc</p><pre>123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263</pre><pre>#include &lt;bits/stdc++.h&gt;#define int long long#define fastio ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);using namespace std;const int N = 105;int MOD;int fastpow(int n, int p){ int res = 1; while(p){        if(p&amp;1) res = (res * n)%MOD;     n = (n*n)%MOD;        p&gt;&gt;=1;  } return res;}int arr[N][N];signed main(){  fastio    int n;   cin &gt;&gt; n &gt;&gt; MOD;    for(int i = 1;i &lt;= n+1;i++){     for(int j = 1;j &lt;= n;j++){           cin &gt;&gt; arr[j][n-i+2];         } } for(int i = 1;i &lt;= n;i++){       if(!arr[i][i]){          //\u82e5arr[i][i]\u70ba0 \u8207\u5176\u4ed6\u884c\u4ea4\u63db \u5c07arr[i][i]\u8b8a\u70ba\u5176\u4ed6\u6578\u5b57           bool ok = true;         int row = 0;         for(int j = i+1;j &lt;= n+1;j++){               if(arr[j][i]){                   ok = false;                  row = j;                  break;               }         }         if(ok) continue;            for(int j = 1;j &lt;= n+1;j++){             swap(arr[i][j],arr[row][j]);          }     }     int tmp = arr[i][i];        //\u5c07\u9019\u4e00\u884c\u540c\u9664arr[i][i] \u4f7farr[i][i]\u8b8a\u70ba1       for(int j = i;j &lt;= n+1;j++){         arr[i][j] = arr[i][j] * fastpow(tmp,MOD-2)%MOD;       }     for(int j = 1;j &lt;= n;j++){           if(i==j) continue;          tmp = arr[j][i];          for(int k = 1;k &lt;= n+1;k++){             arr[j][k] = ((arr[j][k]%MOD - arr[i][k]%MOD*tmp%MOD)%MOD+MOD)%MOD;            }     } } for(int i = n;i;i--) cout &lt;&lt; (arr[i][n+1]+MOD)%MOD &lt;&lt; \" \";}</pre><p></p>"},{"location":"%E5%A5%BD%E7%9C%8B%20copy/#\u7b2c\u4e09\u984c\uff1a\u6253\u5361\u904a\u6232-Checkin","title":"\u7b2c\u4e09\u984c\uff1a\u6253\u5361\u904a\u6232 (Checkin)","text":"<p>TIOJ 2171:https://tioj.ck.tp.edu.tw/problems/2171</p> <p></p> <p>\u5716\u8ad6\u984c\u9019\u984c\u76ee\u5176\u5be6\u6211\u770b\u4e86\u4e00\u9663\u5b50\u624d\u7406\u89e3\u984c\u76ee\u7d66\u7684\u662f\u4e00\u5f35\u6709A+B \u500b\u7bc0\u9ede\u8207 k \u689d\u908a\u7684\u5716\uff08\u4e0d\u4e00\u5b9a\u5b8c\u5168\u9023\u901a\uff09\u800c S,M \u7684\u6578\u503c\u5c0d\u65bc\u9019\u984c\u4f86\u8aaa\u5176\u5be6\u5b8c\u5168\u7528\u4e0d\u5230\u8981\u7528\u6700\u5c11\u8eca\u8cc7\u5b8c\u6210\u904a\u6232 \u6211\u5011\u53ef\u4ee5\u63a8\u5f97 </p> \u8eca\u8cc7\u642d\u4e58\u8eca\u6578\u91cf\u8ddd\u96e2\u548c\u8eca\u8cc7=\u642d\u4e58\u8eca\u6578\u91cf\u00d7S+M\u00d7\u8ddd\u96e2\u548c<p>\u8ddd\u96e2\u548c\u4e0d\u8ad6\u600e\u9ebc\u505a\u90fd\u4e0d\u6703\u6539\u8b8a \u56e0\u6b64\u6211\u5011\u53ef\u4ee5\u5c07\u984c\u76ee\u7684\u300c\u6700\u5c11\u8eca\u8cc7\u300d\u6539\u70ba\u300c\u642d\u4e58\u6700\u5c11\u6578\u91cf\u300d</p> <p>\u800c\u6211\u5011\u8981\u627e\u5c0b\u642d\u4e58\u7684\u6700\u5c11\u6578\u91cf \u6211\u5011\u53ef\u4ee5\u5f88\u8f15\u6613\u7684\u77e5\u9053 \u5982\u679c\u6709 n \u500b\u9023\u901a\u584a \u6211\u5011\u81f3\u5c11\u8981\u505a n \u6b21\u624d\u80fd\u8d70\u5b8c\u6240\u6709\u908a \u800c\u6bcf\u500b\u9023\u901a\u584a\u9700\u8981\u7684\u6b21\u6578 \u6211\u5011\u53ef\u4ee5\u7531\u300c\u4e00\u7b46\u756b\u5b9a\u7406\u300d\u5f97\u77e5</p> <p></p> <p>\u56e0\u6b64\u672c\u984c\u7684\u7b54\u6848\u5c31\u662f</p> \u6bcf\u500b\u9023\u901a\u584a\u5947\u6578\u7bc0\u9ede\u03a3\u6bcf\u500b\u9023\u901a\u584a min(\u5947\u6578\u7bc0\u9ede/2,1)<p>\u8907\u96dc\u5ea6 O(A+B+K) \u7a0b\u5f0f\u78bc</p><pre>12345678910111213141516171819202122232425262728293031323334353637</pre><pre>#include &lt;bits/stdc++.h&gt;#define fastio ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);using namespace std;const int N = 1005;vector&lt;int&gt; adj[N];int ans = 0, visited[N];int odd = 0;void dfs(int u){    visited[u] = 1;   if(adj[u].size()&amp;1) odd++;   for(auto v : adj[u]){       if(!visited[v]) dfs(v);  }}signed main(){  fastio    int a,b,s,m,k;   cin &gt;&gt; a &gt;&gt; b &gt;&gt; s &gt;&gt; m &gt;&gt; k; for(int i = 0;i &lt; k;i++){        int u,v,w;       cin &gt;&gt; u &gt;&gt; v &gt;&gt; w;       //v starts from a+1      adj[u].push_back(a+v);        adj[a+v].push_back(u);    } for(int i = 1;i &lt;= a+b;i++){     if(visited[i]||adj[i].size()==0) continue;      odd = 0;      dfs(i);       ans += max(odd/2,1);  } cout &lt;&lt; ans &lt;&lt; \"\\n\";}</pre><p></p>"},{"location":"%E5%A5%BD%E7%9C%8B%20copy/#\u7b2c\u56db\u984c\uff1a\u7269\u7a2e\u6f14\u5316-Evolution","title":"\u7b2c\u56db\u984c\uff1a\u7269\u7a2e\u6f14\u5316 (Evolution)","text":"<p>TIOJ 2172:https://tioj.ck.tp.edu.tw/problems/2172</p> <p></p> <p>\u9019\u984c\u662f\u975e\u5e38\u88f8\u7684\u6a39\u4e0a\u5169\u9ede\u6700\u77ed\u8ddd\u96e2</p> <p>\u5c31\u7528\u500d\u589e\u6cd5\u6216\u6a39\u58d3\u5e73\u627eLCA\u4e4b\u5f8c\u7528 d=dep[u]\u22122\u2217dep[lca(u,v)]+dep[v]\u5c31\u662f\u7b54\u6848</p> <p>\u7a0b\u5f0f\u78bc</p><pre>123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566</pre><pre>#include &lt;bits/stdc++.h&gt;#define int long long#define fastio ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);using namespace std;const int N = 1e5+5;vector&lt;int&gt; adj[N];int dep[N], fa[N][25];void dfs(int u, int par){  for(int v : adj[u]){        if(v==par) continue;        dep[v] = dep[u]+1;        fa[v][0] = u;     dfs(v,u); }}int lca(int x, int y){    if(dep[x] &lt; dep[y]) swap(x,y);    int diff = dep[x]-dep[y];    for(int i = 20;~i;i--){     if((1&lt;&lt;i)&amp;diff){           x = fa[x][i];     } } if(x==y){        return x;    } for(int i = 20;~i;i--){     if(fa[x][i]!=fa[y][i]){          x = fa[x][i];         y = fa[y][i];     } } x = fa[x][0]; return x;}signed main(){ fastio    int n,m; cin &gt;&gt; n &gt;&gt; m;  for(int i = 1;i &lt; n;i++){        int u,v;     cin &gt;&gt; u &gt;&gt; v;      u++,v++;      adj[u].push_back(v);      adj[v].push_back(u);  } dep[1] = 0;   dfs(1,1); for(int i = 1;i &lt;= 20;i++){      for(int j = 1;j &lt;= n;j++){           fa[j][i] = fa[fa[j][i-1]][i-1];       } } while(m--){      int x,y;     cin &gt;&gt; x &gt;&gt; y;      x++,y++;      cout &lt;&lt; dep[x]+dep[y]-2*dep[lca(x,y)] &lt;&lt; \"\\n\";  }}</pre><p></p>"},{"location":"%E5%A5%BD%E7%9C%8B%20copy/#\u7b2c\u4e94\u984c\uff1a\u641c\u96c6\u5bf6\u85cf\uff08Treasure\uff09","title":"\u7b2c\u4e94\u984c\uff1a\u641c\u96c6\u5bf6\u85cf\uff08Treasure\uff09","text":"<p>TIOJ 2173:https://tioj.ck.tp.edu.tw/problems/2173</p> <p>(11/1 \u88dc)</p> <p>\u9019\u984c\u662f\u4e00\u500b\u5169\u689d\u8def\u5f91\u7684DP\u554f\u984c\uff0c\u56e0\u6b64\uff0c\u6211\u5011\u8981\u601d\u8003\u5982\u4f55\u53bb\u7d00\u9304\u5169\u689d\u8def\u7dda\u62ff\u5230\u5bf6\u85cf\u7684\u6700\u5927\u503c\uff0c\u6211\u5011\u53ef\u4ee5\u8a2d dp[t][i][j] \u70ba\u5728\u6642\u9593 t \u7684\u6642\u5019\uff0c\u7b2c\u4e00\u500b\u4eba\u7684\u7e31\u5ea7\u6a19\u5728 i\uff0c\u7b2c\u4e8c\u500b\u4eba\u7684\u7e31\u5ea7\u6a19\u5728 j\uff0c\u7136\u5f8c\u6211\u5011\u5c31\u53ef\u4ee5\u5f9e\u524d\u4e00\u500b\u6642\u9593\u8f49\u79fb\u5230\u73fe\u5728\u9019\u500b\u6642\u9593\uff08\u9019\u500b\u689d\u4ef6\u4f7f\u5f97\u6211\u5011\u53ef\u4ee5\u7528\u6efe\u52d5DP\u4f86\u52a0\u901f\uff0c\u662f\u8aaa\u6c92\u6709\u90a3\u500b\u5fc5\u8981\u5c31\u662f\u4e86\uff09</p> <pre>1234567891011121314151617181920212223242526272829303132333435</pre><pre>#include &lt;bits/stdc++.h&gt;#define fastio ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);using namespace std;const int N = 105;int grid[N][N];int dp[2][N][N];signed main(){    fastio    memset(dp,-0x3f3f3f,sizeof dp);    int n,m; cin &gt;&gt; n &gt;&gt; m;  for(int i = 1;i &lt;= n;i++)        for(int j = 1;j &lt;= m;j++)            cin &gt;&gt; grid[i][j];    dp[1][1][1] = grid[1][1]; for(int k = 1;k &lt;= n+m-1;k++){       for(int i = 1;i &lt;= min(k,n);i++){            for(int j = 1;j &lt;= min(k,n);j++){                if(k==1&amp;&amp;i==1&amp;&amp;j==1) continue;              if(grid[i][k+1-i]==-1||grid[j][k+1-j]==-1){                  dp[k&amp;1][i][j] = -1e9;                 continue;                }             dp[k&amp;1][i][j] = max({dp[(k-1)&amp;1][i][j],dp[(k-1)&amp;1][i-1][j],dp[(k-1)&amp;1][i][j-1],dp[(k-1)&amp;1][i-1][j-1]});               if(i==j) dp[k&amp;1][i][j] += grid[i][k+1-i];                else dp[k&amp;1][i][j] += grid[i][k+1-i] + grid[j][k+1-j];           }     } } cout &lt;&lt; max(0,dp[(n+m-1)&amp;1][n][n]) &lt;&lt; \"\\n\";}</pre>"},{"location":"%E5%A5%BD%E7%9C%8B/","title":"\u597d\u770b","text":"2019 \u81fa\u5317\u5e02\u8cc7\u8a0a\u5b78\u79d1\u80fd\u529b\u7af6\u8cfd | \u5c71\u59c6\u7684\u7af6\u7a0b\u65e5\u8a18 \u5c71\u59c6\u7684\u7af6\u7a0b\u65e5\u8a18 <p>\u5f9e\u7da0\u724c\u958b\u59cb\u7684\u65c5\u9014</p> <ul> <li> \u9996\u9801 </li> <li> \u95dc\u65bc </li> <li> \u6a19\u7c64 </li> <li> \u6b78\u6a94 </li> <li> \u641c\u5c0b          </li> </ul> 0%            2019 \u81fa\u5317\u5e02\u8cc7\u8a0a\u5b78\u79d1\u80fd\u529b\u7af6\u8cfd          \u767c\u8868\u65bc 2020-09-30 \u66f4\u65b0\u65bc 2020-11-01 Disqus\uff1a 0 Comments # \u5317\u5e02\u8cfd # TIOJ # \u7d04\u745f\u592b\u65af\u554f\u984c # \u5716\u8ad6 # \u9ad8\u65af\u6d88\u53bb\u6cd5 # LCA  Codeforces Round #673 (Div.2)             Grakn Forces 2020 (Codeforces 1408)  <ul> <li>           \u6587\u7ae0\u76ee\u9304         </li> <li>           \u672c\u7ad9\u6982\u8981         </li> </ul> <ol><li>1. \u5fc3\u5f97</li><li>2. \u7b2c\u4e00\u984c\uff1a \u51fa\u6230\u9806\u5e8f (Arrangement)</li><li>3. \u7b2c\u4e8c\u984c\uff1a\u5730\u5716\u7de8\u4fee (Map)</li><li>4. \u7b2c\u4e09\u984c\uff1a\u6253\u5361\u904a\u6232 (Checkin)</li><li>5. \u7b2c\u56db\u984c\uff1a\u7269\u7a2e\u6f14\u5316 (Evolution)</li><li>6. \u7b2c\u4e94\u984c\uff1a\u641c\u96c6\u5bf6\u85cf\uff08Treasure\uff09</li></ol> <p>\u8def\u904e\u7684\u4e00\u96bb\u5c71\u59c6</p> \u9019\u88e1\u6703\u7d00\u9304\u4e00\u4e9b\u6253\u904e\u7684Contest\uff0c\u984c\u76ee\uff0c\u6216\u8005\u662f\u4e00\u4e9b\u525b\u5b78\u5230\u7684\u6f14\u7b97\u6cd5 39 \u6587\u7ae0 64 \u6a19\u7c64 GitHub Discord        Links      <ul> <li> Codeforces </li> <li> AtCoder </li> <li> Code Community (Xuan) </li> </ul>     \u00a9    2022 \u8def\u904e\u7684\u4e00\u96bb\u5c71\u59c6"},{"location":"%E5%A5%BD%E7%9C%8B/#\u5fc3\u5f97","title":"\u5fc3\u5f97","text":"<p>\u56e0\u70ba11\u6708\u8981\u53bb\u6bd4\u5317\u5e02\u8cfd\u4eca\u5929\u89e3\u4e86\u53bb\u5e74\u5317\u5e02\u8cfd\u7684\u984c\u76ee \uff08\u65e9\u81ea\u7fd230\u5206\u9418+\u5348\u4f1130\u5206\u9418+\u56db\u7bc0\u4e0b\u8ab210\u5206\u9418+\u7121\u6578\u7684\u4e0a\u8ab2\u601d\u8003\uff09\u4e0d\u904e\u4e94\u984c\u53ea\u89e3\u4e86\u56db\u984c \u7b2c\u4e94\u984c\u9084\u6c92\u770b\uff0811/1\u5df2\u88dc\uff09 \u8ddd\u96e2\u5317\u5e02\u8cfd \u9084\u670937\u5929\uff01 \u5e0c\u671b\u6709\u6a5f\u6703\u9032\u5168\u570b\u8cfd</p> <p>\u984c\u76ee:https://docs.google.com/viewer?a=v&amp;pid=sites&amp;srcid=ZGVmYXVsdGRvbWFpbnxobGZnb25nenVvc2hpfGd4OjRjMTVmYmY2NzcwY2VlODM</p>"},{"location":"%E5%A5%BD%E7%9C%8B/#\u7b2c\u4e00\u984c\uff1a-\u51fa\u6230\u9806\u5e8f-Arrangement","title":"\u7b2c\u4e00\u984c\uff1a \u51fa\u6230\u9806\u5e8f (Arrangement)","text":"<p>TIOJ 2169:https://tioj.ck.tp.edu.tw/problems/2169</p> <p></p> <p>\u6709\u7df4\u904e\u4e0d\u5c11\u984c\u76ee\u7684\u4eba\u61c9\u8a72\u90fd\u77e5\u9053\u6709\u500b\u554f\u984c\u53eb\u505a\u300c\u7d04\u745f\u592b\u65af\u554f\u984c\u300d</p> <p>\u9019\u500b\u554f\u984c\u6709\u5f88\u591a\u4e0d\u540c\u7684\u89e3\u6cd5 \u6709\u7684\u4eba\u53ef\u80fd\u7528Treap\u4e4b\u985e\u7684\u8cc7\u6599\u7d50\u69cb\u4f86\u9054\u5230 O(nlogn)\u7684\u89e3 \u4e0d\u904e\u9019\u500b\u554f\u984c\u6709\u7dda\u6027\u7684 O(n) \u89e3</p><pre>1234</pre><pre>int tmp = 0;for(int i = 2;i &lt;= n;i++){    tmp = (tmp+t)%i;}</pre><p></p> <p>\u984c\u76ee\u7684\u8981\u6c42\u70ba \u7d66\u4e88\u4e00\u500b\u6700\u5f8c\u7684\u6578\u5b57 \u554f m \u61c9\u70ba\u591a\u5c11 \u9019\u984c\u7684\u7bc4\u570d\u662f 1\u2264n,k\u2264104 \u800c m \u5247\u70ba 2\u2264m\u22643\u00d7104 \u56e0\u6b64\u6211\u5011\u53ef\u4ee5\u66b4\u641c\u627e\u51fa m \u503c</p> <p>\u8907\u96dc\u5ea6: O(30000\u00d7k)</p> <p>\u7a0b\u5f0f\u78bc</p><pre>123456789101112131415161718192021222324</pre><pre>#include &lt;bits/stdc++.h&gt;#define int long long#define fastio ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);using namespace std;signed main(){    fastio    int n,k; cin &gt;&gt; n &gt;&gt; k;  for(int t = 2;t &lt;= 30000;t++){       int tmp = 0;     for(int i = 2;i &lt;= n;i++){           tmp = (tmp+t)%i;      }     tmp++;        if(tmp==k){          cout &lt;&lt; t &lt;&lt; \"\\n\";          return 0;        } } cout &lt;&lt; 0 &lt;&lt; \"\\n\";}</pre><p></p>"},{"location":"%E5%A5%BD%E7%9C%8B/#\u7b2c\u4e8c\u984c\uff1a\u5730\u5716\u7de8\u4fee-Map","title":"\u7b2c\u4e8c\u984c\uff1a\u5730\u5716\u7de8\u4fee (Map)","text":"<p>TIOJ 2170:https://tioj.ck.tp.edu.tw/problems/2170</p> <p></p> <p>\u9019\u4e00\u984c\u7b2c\u4e00\u773c\u770b\u4e0a\u53bb\uff0c\u4ee5\u70ba\u662f\u5411\u91cf\u6295\u5f71 \u4e0d\u904e\u4ed4\u7d30\u60f3\u4e00\u60f3\uff0c\u9019\u984c\u5f9e\u984c\u76ee\u7684\u8aaa\u660e\u4e0a\u770b\u4f86 \u5176\u5be6\u53ea\u8981\u89e3\u6a21\u65b9\u7a0b \u984c\u76ee\u7d66\u4e86 n \u500b\u65b9\u7a0b\u5f0f </p> <pre>1234</pre><pre>2 101     2 1015 3    =&gt; 5 33 1       3x 1x2 2       2y 2y</pre> <p>\u56e0\u6b64\u6211\u5011\u6709\u4e86\u4e00\u500b\u4e00\u5143\u6a21\u65b9\u7a0b\u7d44</p> {3x+2y=5\u00a0(mod 101)1x+2y=3\u00a0(mod 101)<p>\u8981\u7528\u96fb\u8166\u89e3\u65b9\u7a0b\u5f0f\u6709\u5f88\u591a\u4f5c\u6cd5</p> <p>\u7528\u77e9\u9663\u7684\u89e3\u6cd5</p> <p>[3212][xy]=[53]</p> <p>\u6216\u8005\u514b\u62c9\u746a\u516c\u5f0f</p> <p>\u4ee5\u53ca\u9019\u984c\u9700\u8981\u4f7f\u7528\u7684\u9ad8\u65af\u6d88\u53bb\u6cd5\u9ad8\u65af\u6d88\u53bb\u6cd5\u662f\u57fa\u65bc\u52a0\u6e1b\u6d88\u53bb\u6cd5 \u904b\u7528\u77e9\u9663\u7684\u5217\u904b\u7b97\u4f86\u6c42\u89e3</p> <p>[3(x)2(y)51(x)2(y)3]</p> <p>\u53ea\u8981\u6211\u5011\u80fd\u5920\u7528\u5217\u904b\u7b97\u5c07\u539f\u672c\u7684\u77e9\u9663\u5316\u70ba</p> <p>[1(x)0(y)x0(x)1(y)y]</p> <p>\u6700\u5f8c\u4e00\u884c\u5c31\u6703\u662f\u6240\u6709\u6211\u5011\u8981\u6c42\u89e3\u7684\u8b8a\u6578\u4e86\u800c\u4f7f\u7528\u9ad8\u65af\u6d88\u53bb\u6cd5\u89e3\u6a21\u65b9\u7a0b\u5c31\u53ea\u662f\u5728\u904b\u7b97\u6642\u53bb\u57f7\u884c\u6a21\u904b\u7b97\u800c\u5df2 \u81f3\u65bc\u5982\u4f55\u9032\u884c\u5217\u904b\u7b97\u4f86\u8f49\u5316\u77e9\u9663 \u5c31\u662f\u7559\u7d66\u8b80\u8005\u7684\u7df4\u7fd2\u4e86</p> <p>\u8907\u96dc\u5ea6\uff1a O(n3logm) \uff08\u5099\u8a3b\uff1alogm\u662f\u56e0\u70ba\u6c42\u6a21\u9006\u5143\uff09</p> <p>\u7a0b\u5f0f\u78bc</p><pre>123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263</pre><pre>#include &lt;bits/stdc++.h&gt;#define int long long#define fastio ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);using namespace std;const int N = 105;int MOD;int fastpow(int n, int p){ int res = 1; while(p){        if(p&amp;1) res = (res * n)%MOD;     n = (n*n)%MOD;        p&gt;&gt;=1;  } return res;}int arr[N][N];signed main(){  fastio    int n;   cin &gt;&gt; n &gt;&gt; MOD;    for(int i = 1;i &lt;= n+1;i++){     for(int j = 1;j &lt;= n;j++){           cin &gt;&gt; arr[j][n-i+2];         } } for(int i = 1;i &lt;= n;i++){       if(!arr[i][i]){          //\u82e5arr[i][i]\u70ba0 \u8207\u5176\u4ed6\u884c\u4ea4\u63db \u5c07arr[i][i]\u8b8a\u70ba\u5176\u4ed6\u6578\u5b57           bool ok = true;         int row = 0;         for(int j = i+1;j &lt;= n+1;j++){               if(arr[j][i]){                   ok = false;                  row = j;                  break;               }         }         if(ok) continue;            for(int j = 1;j &lt;= n+1;j++){             swap(arr[i][j],arr[row][j]);          }     }     int tmp = arr[i][i];        //\u5c07\u9019\u4e00\u884c\u540c\u9664arr[i][i] \u4f7farr[i][i]\u8b8a\u70ba1       for(int j = i;j &lt;= n+1;j++){         arr[i][j] = arr[i][j] * fastpow(tmp,MOD-2)%MOD;       }     for(int j = 1;j &lt;= n;j++){           if(i==j) continue;          tmp = arr[j][i];          for(int k = 1;k &lt;= n+1;k++){             arr[j][k] = ((arr[j][k]%MOD - arr[i][k]%MOD*tmp%MOD)%MOD+MOD)%MOD;            }     } } for(int i = n;i;i--) cout &lt;&lt; (arr[i][n+1]+MOD)%MOD &lt;&lt; \" \";}</pre><p></p>"},{"location":"%E5%A5%BD%E7%9C%8B/#\u7b2c\u4e09\u984c\uff1a\u6253\u5361\u904a\u6232-Checkin","title":"\u7b2c\u4e09\u984c\uff1a\u6253\u5361\u904a\u6232 (Checkin)","text":"<p>TIOJ 2171:https://tioj.ck.tp.edu.tw/problems/2171</p> <p></p> <p>\u5716\u8ad6\u984c\u9019\u984c\u76ee\u5176\u5be6\u6211\u770b\u4e86\u4e00\u9663\u5b50\u624d\u7406\u89e3\u984c\u76ee\u7d66\u7684\u662f\u4e00\u5f35\u6709A+B \u500b\u7bc0\u9ede\u8207 k \u689d\u908a\u7684\u5716\uff08\u4e0d\u4e00\u5b9a\u5b8c\u5168\u9023\u901a\uff09\u800c S,M \u7684\u6578\u503c\u5c0d\u65bc\u9019\u984c\u4f86\u8aaa\u5176\u5be6\u5b8c\u5168\u7528\u4e0d\u5230\u8981\u7528\u6700\u5c11\u8eca\u8cc7\u5b8c\u6210\u904a\u6232 \u6211\u5011\u53ef\u4ee5\u63a8\u5f97 </p> \u8eca\u8cc7\u642d\u4e58\u8eca\u6578\u91cf\u8ddd\u96e2\u548c\u8eca\u8cc7=\u642d\u4e58\u8eca\u6578\u91cf\u00d7S+M\u00d7\u8ddd\u96e2\u548c<p>\u8ddd\u96e2\u548c\u4e0d\u8ad6\u600e\u9ebc\u505a\u90fd\u4e0d\u6703\u6539\u8b8a \u56e0\u6b64\u6211\u5011\u53ef\u4ee5\u5c07\u984c\u76ee\u7684\u300c\u6700\u5c11\u8eca\u8cc7\u300d\u6539\u70ba\u300c\u642d\u4e58\u6700\u5c11\u6578\u91cf\u300d</p> <p>\u800c\u6211\u5011\u8981\u627e\u5c0b\u642d\u4e58\u7684\u6700\u5c11\u6578\u91cf \u6211\u5011\u53ef\u4ee5\u5f88\u8f15\u6613\u7684\u77e5\u9053 \u5982\u679c\u6709 n \u500b\u9023\u901a\u584a \u6211\u5011\u81f3\u5c11\u8981\u505a n \u6b21\u624d\u80fd\u8d70\u5b8c\u6240\u6709\u908a \u800c\u6bcf\u500b\u9023\u901a\u584a\u9700\u8981\u7684\u6b21\u6578 \u6211\u5011\u53ef\u4ee5\u7531\u300c\u4e00\u7b46\u756b\u5b9a\u7406\u300d\u5f97\u77e5</p> <p></p> <p>\u56e0\u6b64\u672c\u984c\u7684\u7b54\u6848\u5c31\u662f</p> \u6bcf\u500b\u9023\u901a\u584a\u5947\u6578\u7bc0\u9ede\u03a3\u6bcf\u500b\u9023\u901a\u584a min(\u5947\u6578\u7bc0\u9ede/2,1)<p>\u8907\u96dc\u5ea6 O(A+B+K) \u7a0b\u5f0f\u78bc</p><pre>12345678910111213141516171819202122232425262728293031323334353637</pre><pre>#include &lt;bits/stdc++.h&gt;#define fastio ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);using namespace std;const int N = 1005;vector&lt;int&gt; adj[N];int ans = 0, visited[N];int odd = 0;void dfs(int u){    visited[u] = 1;   if(adj[u].size()&amp;1) odd++;   for(auto v : adj[u]){       if(!visited[v]) dfs(v);  }}signed main(){  fastio    int a,b,s,m,k;   cin &gt;&gt; a &gt;&gt; b &gt;&gt; s &gt;&gt; m &gt;&gt; k; for(int i = 0;i &lt; k;i++){        int u,v,w;       cin &gt;&gt; u &gt;&gt; v &gt;&gt; w;       //v starts from a+1      adj[u].push_back(a+v);        adj[a+v].push_back(u);    } for(int i = 1;i &lt;= a+b;i++){     if(visited[i]||adj[i].size()==0) continue;      odd = 0;      dfs(i);       ans += max(odd/2,1);  } cout &lt;&lt; ans &lt;&lt; \"\\n\";}</pre><p></p>"},{"location":"%E5%A5%BD%E7%9C%8B/#\u7b2c\u56db\u984c\uff1a\u7269\u7a2e\u6f14\u5316-Evolution","title":"\u7b2c\u56db\u984c\uff1a\u7269\u7a2e\u6f14\u5316 (Evolution)","text":"<p>TIOJ 2172:https://tioj.ck.tp.edu.tw/problems/2172</p> <p></p> <p>\u9019\u984c\u662f\u975e\u5e38\u88f8\u7684\u6a39\u4e0a\u5169\u9ede\u6700\u77ed\u8ddd\u96e2</p> <p>\u5c31\u7528\u500d\u589e\u6cd5\u6216\u6a39\u58d3\u5e73\u627eLCA\u4e4b\u5f8c\u7528 d=dep[u]\u22122\u2217dep[lca(u,v)]+dep[v]\u5c31\u662f\u7b54\u6848</p> <p>\u7a0b\u5f0f\u78bc</p><pre>123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566</pre><pre>#include &lt;bits/stdc++.h&gt;#define int long long#define fastio ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);using namespace std;const int N = 1e5+5;vector&lt;int&gt; adj[N];int dep[N], fa[N][25];void dfs(int u, int par){  for(int v : adj[u]){        if(v==par) continue;        dep[v] = dep[u]+1;        fa[v][0] = u;     dfs(v,u); }}int lca(int x, int y){    if(dep[x] &lt; dep[y]) swap(x,y);    int diff = dep[x]-dep[y];    for(int i = 20;~i;i--){     if((1&lt;&lt;i)&amp;diff){           x = fa[x][i];     } } if(x==y){        return x;    } for(int i = 20;~i;i--){     if(fa[x][i]!=fa[y][i]){          x = fa[x][i];         y = fa[y][i];     } } x = fa[x][0]; return x;}signed main(){ fastio    int n,m; cin &gt;&gt; n &gt;&gt; m;  for(int i = 1;i &lt; n;i++){        int u,v;     cin &gt;&gt; u &gt;&gt; v;      u++,v++;      adj[u].push_back(v);      adj[v].push_back(u);  } dep[1] = 0;   dfs(1,1); for(int i = 1;i &lt;= 20;i++){      for(int j = 1;j &lt;= n;j++){           fa[j][i] = fa[fa[j][i-1]][i-1];       } } while(m--){      int x,y;     cin &gt;&gt; x &gt;&gt; y;      x++,y++;      cout &lt;&lt; dep[x]+dep[y]-2*dep[lca(x,y)] &lt;&lt; \"\\n\";  }}</pre><p></p>"},{"location":"%E5%A5%BD%E7%9C%8B/#\u7b2c\u4e94\u984c\uff1a\u641c\u96c6\u5bf6\u85cf\uff08Treasure\uff09","title":"\u7b2c\u4e94\u984c\uff1a\u641c\u96c6\u5bf6\u85cf\uff08Treasure\uff09","text":"<p>TIOJ 2173:https://tioj.ck.tp.edu.tw/problems/2173</p> <p>(11/1 \u88dc)</p> <p>\u9019\u984c\u662f\u4e00\u500b\u5169\u689d\u8def\u5f91\u7684DP\u554f\u984c\uff0c\u56e0\u6b64\uff0c\u6211\u5011\u8981\u601d\u8003\u5982\u4f55\u53bb\u7d00\u9304\u5169\u689d\u8def\u7dda\u62ff\u5230\u5bf6\u85cf\u7684\u6700\u5927\u503c\uff0c\u6211\u5011\u53ef\u4ee5\u8a2d dp[t][i][j] \u70ba\u5728\u6642\u9593 t \u7684\u6642\u5019\uff0c\u7b2c\u4e00\u500b\u4eba\u7684\u7e31\u5ea7\u6a19\u5728 i\uff0c\u7b2c\u4e8c\u500b\u4eba\u7684\u7e31\u5ea7\u6a19\u5728 j\uff0c\u7136\u5f8c\u6211\u5011\u5c31\u53ef\u4ee5\u5f9e\u524d\u4e00\u500b\u6642\u9593\u8f49\u79fb\u5230\u73fe\u5728\u9019\u500b\u6642\u9593\uff08\u9019\u500b\u689d\u4ef6\u4f7f\u5f97\u6211\u5011\u53ef\u4ee5\u7528\u6efe\u52d5DP\u4f86\u52a0\u901f\uff0c\u662f\u8aaa\u6c92\u6709\u90a3\u500b\u5fc5\u8981\u5c31\u662f\u4e86\uff09</p> <pre>1234567891011121314151617181920212223242526272829303132333435</pre><pre>#include &lt;bits/stdc++.h&gt;#define fastio ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);using namespace std;const int N = 105;int grid[N][N];int dp[2][N][N];signed main(){    fastio    memset(dp,-0x3f3f3f,sizeof dp);    int n,m; cin &gt;&gt; n &gt;&gt; m;  for(int i = 1;i &lt;= n;i++)        for(int j = 1;j &lt;= m;j++)            cin &gt;&gt; grid[i][j];    dp[1][1][1] = grid[1][1]; for(int k = 1;k &lt;= n+m-1;k++){       for(int i = 1;i &lt;= min(k,n);i++){            for(int j = 1;j &lt;= min(k,n);j++){                if(k==1&amp;&amp;i==1&amp;&amp;j==1) continue;              if(grid[i][k+1-i]==-1||grid[j][k+1-j]==-1){                  dp[k&amp;1][i][j] = -1e9;                 continue;                }             dp[k&amp;1][i][j] = max({dp[(k-1)&amp;1][i][j],dp[(k-1)&amp;1][i-1][j],dp[(k-1)&amp;1][i][j-1],dp[(k-1)&amp;1][i-1][j-1]});               if(i==j) dp[k&amp;1][i][j] += grid[i][k+1-i];                else dp[k&amp;1][i][j] += grid[i][k+1-i] + grid[j][k+1-j];           }     } } cout &lt;&lt; max(0,dp[(n+m-1)&amp;1][n][n]) &lt;&lt; \"\\n\";}</pre>"},{"location":"%E5%AD%B8%E7%BF%92%E8%B3%87%E6%BA%90/","title":"\u57fa\u790e(APCS 0~3)","text":"<ol> <li>hello\uff01c++\u7a0b\u5f0f\u8a2d\u8a08 \u7b2c\u4e09\u7248</li> </ol> <ol> <li>\u5f9e\u96f6\u958b\u59cb\u7684\u6f14\u7b97\u6cd5\u7af6\u8cfd\u5165\u9580\u6559\u5b78</li> </ol>"},{"location":"%E5%AD%B8%E7%BF%92%E8%B3%87%E6%BA%90/#apcs-35","title":"\u9032\u968e(APCS 3~5)","text":"<ol> <li>AP325 \u8b1b\u7fa9 by \u5433\u90a6\u4e00\u6559\u6388</li> </ol>"},{"location":"%E5%BE%85%E8%BE%A6%E4%BA%8B%E9%A0%85/","title":"\u5f85\u8fa6\u4e8b\u9805","text":"<ul> <li> \u77e9\u9663\u4e58\u6cd5</li> <li> \u770b\u5b8cionc\u6578\u8ad6\u7bc7\u7ae0(\u4e0d\u80fd\u7528\u96fb\u8166\u6642\u518d\u770b)</li> <li> \u7406\u89e3\u984c\u76ee\uff1a[a007. \u5224\u65b7\u8cea\u6578]</li> <li> \u7dda\u6bb5\u6a39</li> <li> DP\uff1a\u5207\u63db\u9ede</li> <li> \u8cea\u56e0\u6578\u5206\u89e3</li> <li> N\u7687\u540e\u554f\u984c</li> <li> \u5176\u4ed6\u6280\u5de7\uff1a\u555f\u767c\u662f\u5408\u4f75</li> <li> \u57c3\u5f0f\u7be9\u6cd5</li> <li> \u6578\u8ad6 a^b mod p</li> <li> pbds</li> <li> bitset\u4f7f\u7528</li> <li> \u4e09\u5206\u641c\u5c0b</li> <li> \u96e2\u6563\u5316\u719f\u7df4</li> <li> \u5f80\u5f8c\u6574\u7406\uff0c\u4e0d\u8981\u7528istream</li> <li> \u4e00\u7b46\u756b\u554f\u984c</li> <li> \u6a39\u7684\u5713\u5fc3</li> </ul>"},{"location":"%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/","title":"\u6700\u5927\u516c\u56e0\u6578gcd","text":""},{"location":"%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/#\u6ce8\u610flong-long\uff01\uff01\uff01","title":"\u6ce8\u610flong long\uff01\uff01\uff01","text":"<p>\u4fdd\u96aa\u8d77\u898b\uff0c\u6bcf\u4e00\u984c\u6700\u5f8cint \u90fd\u8981\u8f49\u6210long long(\u9664\u4e86main)</p>"},{"location":"%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/#codeblocks\u4f7f\u7528\u6280\u5de7","title":"codeblocks\u4f7f\u7528\u6280\u5de7","text":"\u5df2\u719f\u8a18"},{"location":"%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/#\u63db\u884c\u53cd\u659c\u7dda\u300c\u300d\u4e0d\u80fdtab","title":"\u63db\u884c\u53cd\u659c\u7dda\u300c\\\u300d\u4e0d\u80fdtab","text":"<p>\u53ef\u4ee5\u914d\u5408\u61f6\u4eba\u6cd5\u4f7f\u7528</p> <p>\u6ce8\u610f!!\u5728<code>\\</code>\u4e4b\u524d\u8981\u7a7a\u683c\uff0c\u4e0d\u7136\u6703\u9ecf\u5728\u4e00\u8d77\u8b8a\u6210\uff1a \u539f\u672c\uff1a7 6 5 2 4 2 1 1 8 5 1 1 3 1 4 2 0 2 0 3 3 \u8b8a\u6210\uff1a7 65 2 4 2 1 1 85 11 31 42 02 03 3</p> <p></p>"},{"location":"%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/#\u5c0b\u627e\u8207\u53d6\u4ee3-ctrl--R","title":"\u5c0b\u627e\u8207\u53d6\u4ee3 ctrl + R","text":"<p>ctrl + R</p>"},{"location":"%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/#\u591a\u884c\u8a3b\u89e3CtrlShiftC--CtrlShiftx","title":"\u591a\u884c\u8a3b\u89e3Ctrl+Shift+C / Ctrl+Shift+x","text":""},{"location":"%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/#\u6613\u5fd8\u82f1\u6587","title":"\u6613\u5fd8\u82f1\u6587","text":""},{"location":"%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/#\u8cc7\u6599\u578b\u614b","title":"\u8cc7\u6599\u578b\u614b","text":""},{"location":"%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/#istringstream-cin-","title":"istringstream cin(\" \");","text":"<p>istringstream cin(\"5 17  5 5 8 3 10\");</p>"},{"location":"%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/#STL","title":"STL","text":""},{"location":"%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/#priority_queue","title":"priority_queue","text":"<p>\u512a\u5148\u99d0\u5217</p>"},{"location":"%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/#multiset","title":"multiset","text":"<p>\u591a\u5143\u7d20set(\u6703\u6392\u5e8f)</p>"},{"location":"%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/#unordered_set","title":"unordered_set","text":"<p>\u4e0d\u6392\u5e8fset(\u55ae\u5143\u7d20)</p>"},{"location":"%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/#unordered_multiset","title":"unordered_multiset","text":"<p>\u4e0d\u6392\u5e8f\u4e14\u591a\u91cd\u5143\u7d20</p>"},{"location":"%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/#priority_queue13","title":"priority_queue","text":"<p>\u512a\u5148\u99d0\u5217</p>"},{"location":"%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/#prev_permutationnext_permutation","title":"prev_permutation/next_permutation","text":"<p>\u6392\u5217 prev_permutation(v,v+n)</p>"},{"location":"%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/#isdigit\u5b57\u5143isalpha\u5b57\u5143","title":"isdigit(\u5b57\u5143)/isalpha(\u5b57\u5143)","text":"<p>\u6578\u5b57\u3001\u5b57\u6bcd\u5224\u65b7</p>"},{"location":"%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/#toupper\u5b57\u5143tolower\u5b57\u5143","title":"toupper(\u5b57\u5143)/tolower(\u5b57\u5143)","text":"<p>\u5927\u5c0f\u5beb\u8f49\u63db</p>"},{"location":"%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/#priority_queue17","title":"priority_queue","text":"<p>\u512a\u5148\u67f1\u5217</p>"},{"location":"%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/#\u9663\u5217","title":"\u9663\u5217","text":""},{"location":"%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/#\u53d6\u5b57\u4e32\u9577\u5ea6strlen","title":"\u53d6\u5b57\u4e32\u9577\u5ea6(strlen)","text":""},{"location":"%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/#\u5b57\u4e32\u8f49\u6578\u5b57atoi","title":"\u5b57\u4e32\u8f49\u6578\u5b57(atoi)","text":""},{"location":"%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/#\u8907\u88fdstrcpy","title":"\u8907\u88fd(strcpy)","text":""},{"location":"%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/#\u5b57\u4e32\u6bd4\u5927\u5c0f\u8981\u4f7f\u7528strcmp","title":"\u5b57\u4e32\u6bd4\u5927\u5c0f(\u8981\u4f7f\u7528strcmp)","text":""},{"location":"%E6%9C%89%E4%BA%8B%E6%B2%92%E4%BA%8B%E6%89%93%E4%B8%80%E6%AC%A1/","title":"\u6709\u4e8b\u6c92\u4e8b\u6253\u4e00\u6b21","text":"<ul> <li>BFS</li> <li>DFS</li> <li>\u4f75\u67e5\u96c6</li> <li>topological sort(\u62d3\u6a38)</li> <li>\u4e8c\u5206\u641c/\u8df3\u8e8d\u4e8c\u5206\u641c</li> <li>Dijkstra\u6700\u77ed\u8def\u5f91(\u4e0d\u5fc5)</li> <li>\u6700\u5c0f\u751f\u6210\u6a39-\u4f75\u67e5\u96c6</li> <li>\u93c8\u7d50\u7d50\u69cb</li> <li>\u7dda\u6027\u7be9\u8cea\u6578</li> <li>LIS \u6700\u9577\u905e\u589e\u5b50\u5e8f\u5217</li> <li>LCS \u6700\u9577\u5171\u540c\u5b50\u5e8f\u5217(DNA)</li> </ul>"},{"location":"%E7%A8%8B%E5%BC%8F%E7%A2%BC%E7%AF%84%E4%BE%8B/","title":"\u7a0b\u5f0f\u78bc\u7bc4\u4f8b","text":"<p>from\uff1a2024\u6e05\u83ef\u5927\u5b78IONC\u8b1b\u7fa9</p>"},{"location":"%E7%A8%8B%E5%BC%8F%E7%A2%BC%E7%AF%84%E4%BE%8B/#_1","title":"\u51fd\u6578\u88fd\u4f5c","text":"<p>\u8981\u8a2d\u8a08\u4e00\u500b\u6f14\u7b97\u6cd5\u53bb\u8a08\u7b97 (a, b) \u7684\u6700\u5927\u516c\u56e0\u6578\u3002\u6700\u76f4\u89c0\u7684\u60f3\u6cd5\u662f\u679a\u8209\u6240\u6709\u53ef\u80fd\u7684\u56e0\u6578\u3002\u8981\u8a2d\u8a08\u4e00\u500b\u6f14\u7b97\u6cd5\u53bb\u8a08\u7b97 (a, b) \u7684\u6700\u5927\u516c\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u56e0\u6578\u3002\u6700\u76f4\u89c0\u7684\u60f3\u6cd5\u662f\u679a\u8209\u6240\u6709\u53ef\u80fd\u7684\u56e0\u6578\u3002\u8981\u8a2d\u8a08\u4e00\u500b\u6f14\u7b97\u6cd5\u53bb\u8a08\u7b97 (a, b) \u7684\u6700\u5927\u516c\u56e0\u6578\u3002\u6700\u76f4\u89c0\u7684\u60f3\u6cd5\u662f\u679a\u8209\u6240\u6709\u53ef\u80fd\u7684\u56e0\u6578\u3002\u8981\u8a2d\u8a08\u4e00\u500b\u6f14\u7b97\u6cd5\u53bb\u8a08\u7b97 (a, b) \u7684\u6700\u5927\u516c\u56e0\u6578\u3002\u6700\u76f4\u89c0\u7684\u60f3\u6cd5\u662f\u679a\u8209\u6240\u6709\u53ef\u80fd\u7684\u56e0\u6578\u3002</p> \u8907\u88fd <pre><code>\nint gcd(int a, int b) {\n    for (int i = min(a, b); i &gt;= 1; i--) {\n        if (a % i == 0 &amp;&amp; b % i == 0) return i;\n    }\n    return 1;\n}\n  </code></pre> <p>\uff01\uff01\uff01\uff1f\uff1f\uff1f\uff1f</p> <p>\u5f15\u7528</p>"},{"location":"%E7%A8%8B%E5%BC%8F%E7%A2%BC%E7%AF%84%E4%BE%8B/#h1","title":"h1","text":""},{"location":"%E7%A8%8B%E5%BC%8F%E7%A2%BC%E7%AF%84%E4%BE%8B/#h2","title":"h2","text":""},{"location":"%E7%A8%8B%E5%BC%8F%E7%A2%BC%E7%AF%84%E4%BE%8B/#h3","title":"h3","text":""},{"location":"%E7%A8%8B%E5%BC%8F%E7%A2%BC%E7%AF%84%E4%BE%8B/#h4","title":"h4","text":""},{"location":"%E7%A8%8B%E5%BC%8F%E7%A2%BC%E7%AF%84%E4%BE%8B/#h5","title":"h5","text":""},{"location":"%E7%A8%8B%E5%BC%8F%E7%A2%BC%E7%AF%84%E4%BE%8B/#h1_1","title":"\u4e3b\u8981\u6807\u9898 (h1)","text":""},{"location":"%E7%A8%8B%E5%BC%8F%E7%A2%BC%E7%AF%84%E4%BE%8B/#h2_1","title":"\u6b21\u7ea7\u6807\u9898 (h2)","text":""},{"location":"%E7%A8%8B%E5%BC%8F%E7%A2%BC%E7%AF%84%E4%BE%8B/#h3_1","title":"\u7b2c\u4e09\u7ea7\u6807\u9898 (h3)","text":""},{"location":"%E7%A8%8B%E5%BC%8F%E7%A2%BC%E7%AF%84%E4%BE%8B/#h4_1","title":"\u7b2c\u56db\u7ea7\u6807\u9898 (h4)","text":"<ul> <li>\u51fd\u6578\u88fd\u4f5c</li> <li>h1<ul> <li>h2<ul> <li>h3<ul> <li>h4</li> </ul> </li> </ul> </li> </ul> </li> <li>\u4e3b\u8981\u6807\u9898 (h1)<ul> <li>\u6b21\u7ea7\u6807\u9898 (h2)<ul> <li>\u7b2c\u4e09\u7ea7\u6807\u9898 (h3)<ul> <li>\u7b2c\u56db\u7ea7\u6807\u9898 (h4)</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"%E8%80%83%E5%89%8D%E5%BF%85%E7%9C%8B/","title":"\u6ce8\u610flong long","text":"<p>\u4fdd\u96aa\u8d77\u898b\uff0c\u6bcf\u4e00\u984c\u6700\u5f8cint \u90fd\u8981\u8f49\u6210long long(\u9664\u4e86main)</p>"},{"location":"%E8%80%83%E5%89%8D%E5%BF%85%E7%9C%8B/#codeblocks","title":"codeblocks\u4f7f\u7528\u6280\u5de7","text":"\u5df2\u719f\u8a18"},{"location":"%E8%80%83%E5%89%8D%E5%BF%85%E7%9C%8B/#\u63db\u884c\u53cd\u659c\u7dda\u300c\u300d\u4e0d\u80fdtab","title":"\u63db\u884c\u53cd\u659c\u7dda\u300c\\\u300d\u4e0d\u80fdtab","text":"<p>\u53ef\u4ee5\u914d\u5408\u61f6\u4eba\u6cd5\u4f7f\u7528</p> <p>\u6ce8\u610f!!\u5728<code>\\</code>\u4e4b\u524d\u8981\u7a7a\u683c\uff0c\u4e0d\u7136\u6703\u9ecf\u5728\u4e00\u8d77\u8b8a\u6210\uff1a \u539f\u672c\uff1a7 6 5 2 4 2 1 1 8 5 1 1 3 1 4 2 0 2 0 3 3 \u8b8a\u6210\uff1a7 65 2 4 2 1 1 85 11 31 42 02 03 3 </p> <p></p>"},{"location":"%E8%80%83%E5%89%8D%E5%BF%85%E7%9C%8B/#ctrl-r","title":"\u5c0b\u627e\u8207\u53d6\u4ee3 ctrl + R","text":"<p>ctrl + R</p>"},{"location":"%E8%80%83%E5%89%8D%E5%BF%85%E7%9C%8B/#ctrlshiftc-ctrlshiftx","title":"\u591a\u884c\u8a3b\u89e3Ctrl+Shift+C / Ctrl+Shift+x","text":""},{"location":"%E8%80%83%E5%89%8D%E5%BF%85%E7%9C%8B/#_1","title":"\u6613\u5fd8\u82f1\u6587","text":""},{"location":"%E8%80%83%E5%89%8D%E5%BF%85%E7%9C%8B/#_2","title":"\u8cc7\u6599\u578b\u614b","text":""},{"location":"%E8%80%83%E5%89%8D%E5%BF%85%E7%9C%8B/#istringstream-cin","title":"istringstream cin(\" \");","text":"<p>istringstream cin(\"5 17 \\ 5 5 8 3 10\");</p>"},{"location":"%E8%80%83%E5%89%8D%E5%BF%85%E7%9C%8B/#stl","title":"STL","text":""},{"location":"%E8%80%83%E5%89%8D%E5%BF%85%E7%9C%8B/#priority_queue","title":"priority_queue","text":"<p>\u512a\u5148\u99d0\u5217 </p>"},{"location":"%E8%80%83%E5%89%8D%E5%BF%85%E7%9C%8B/#multiset","title":"multiset","text":"<p>\u591a\u5143\u7d20set(\u6703\u6392\u5e8f) </p>"},{"location":"%E8%80%83%E5%89%8D%E5%BF%85%E7%9C%8B/#unordered_set","title":"unordered_set","text":"<p>\u4e0d\u6392\u5e8fset(\u55ae\u5143\u7d20)</p>"},{"location":"%E8%80%83%E5%89%8D%E5%BF%85%E7%9C%8B/#unordered_multiset","title":"unordered_multiset","text":"<p>\u4e0d\u6392\u5e8f\u4e14\u591a\u91cd\u5143\u7d20</p>"},{"location":"%E8%80%83%E5%89%8D%E5%BF%85%E7%9C%8B/#priority_queue_1","title":"priority_queue","text":"<p>\u512a\u5148\u99d0\u5217</p>"},{"location":"%E8%80%83%E5%89%8D%E5%BF%85%E7%9C%8B/#prev_permutationnext_permutation","title":"prev_permutation/next_permutation","text":"<p>\u6392\u5217 prev_permutation(v,v+n)</p>"},{"location":"%E8%80%83%E5%89%8D%E5%BF%85%E7%9C%8B/#isdigitisalpha","title":"isdigit(\u5b57\u5143)/isalpha(\u5b57\u5143)","text":"<p>\u6578\u5b57\u3001\u5b57\u6bcd\u5224\u65b7</p>"},{"location":"%E8%80%83%E5%89%8D%E5%BF%85%E7%9C%8B/#touppertolower","title":"toupper(\u5b57\u5143)/tolower(\u5b57\u5143)","text":"<p>\u5927\u5c0f\u5beb\u8f49\u63db</p>"},{"location":"%E8%80%83%E5%89%8D%E5%BF%85%E7%9C%8B/#priority_queue_2","title":"priority_queue","text":"<p>\u512a\u5148\u67f1\u5217</p>"},{"location":"%E8%80%83%E5%89%8D%E5%BF%85%E7%9C%8B/#_3","title":"\u9663\u5217","text":""},{"location":"%E8%80%83%E5%89%8D%E5%BF%85%E7%9C%8B/#strlen","title":"\u53d6\u5b57\u4e32\u9577\u5ea6(strlen)","text":""},{"location":"%E8%80%83%E5%89%8D%E5%BF%85%E7%9C%8B/#atoi","title":"\u5b57\u4e32\u8f49\u6578\u5b57(atoi)","text":""},{"location":"%E8%80%83%E5%89%8D%E5%BF%85%E7%9C%8B/#strcpy","title":"\u8907\u88fd(strcpy)","text":""},{"location":"%E8%80%83%E5%89%8D%E5%BF%85%E7%9C%8B/#strcmp","title":"\u5b57\u4e32\u6bd4\u5927\u5c0f(\u8981\u4f7f\u7528strcmp)","text":""}]}