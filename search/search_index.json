{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u6b61\u8fce","text":"<pre><code>1000\n</code></pre> 87 \u4f60\u597d  \u54c8\u56c9 # 123  \u54c8\u56c9      # 123      <p>\u8fd9\u662f\u4e00\u4e2a\u884c\u5185\u516c\u5f0f\uff1a$E = mc^2$</p> <p>\u8fd9\u662f\u4e00\u4e2a\u5757\u7ea7\u516c\u5f0f\uff1a $$ \\int_{-\\infty}^{\\infty} e^{-x^2} dx = \\sqrt{\\pi} $$</p> <ul> <li> 87</li> </ul> 245235235 # 8902859083450   <ol> <li> <p>86</p> <ul> <li>87</li> <li>88</li> </ul> </li> </ol> <p>\u6709\u5169\u6578\u5b57 $a$\u3001$b$ $a\\%b$ \u6642\u56de\u50b3 $a/b$ \u7684\u9918\u6578</p>"},{"location":"#_2","title":"\u57fa\u672c\u4ecb\u7d39","text":""},{"location":"#_3","title":"\u4e00\u822c\u904b\u7b97","text":""},{"location":"#_4","title":"\u6a21\u904b\u7b97\u7684\u7d50\u679c\u7b26\u865f","text":"<ol> <li> <p>\u7576 $a$ \u70ba\u6b63\u6578\u6642\uff1a</p> <ul> <li>\u7121\u8ad6 $b$ \u662f\u6b63\u6578\u9084\u662f\u8ca0\u6578\uff0c\u7d50\u679c $c$ \u90fd\u662f\u975e\u8ca0\u6578\u3002</li> <li>\u5373\uff1a$[ a \\% b \\geq 0 ]$</li> </ul> </li> <li> <p>\u7576 $a$ \u70ba\u8ca0\u6578\u6642\uff1a</p> <ul> <li>\u6839\u64da\u4e0d\u540c\u7de8\u7a0b\u8a9e\u8a00\u6216\u6578\u5b78\u74b0\u5883\uff0c\u7d50\u679c $c$ \u53ef\u80fd\u662f\u975e\u6b63\u6578\uff08\u5373\u7d50\u679c\u7684\u7b26\u865f\u8207 $a$ \u4e00\u81f4\uff09\uff0c\u4e5f\u53ef\u80fd\u662f\u975e\u8ca0\u6578\uff08\u5373\u7d50\u679c\u7684\u7b26\u865f\u8207 $b$ \u4e00\u81f4\uff09\u3002</li> </ul> </li> </ol> <p>87</p>    **\u6ce8\u610f\uff01** \u9019\u662f\u81ea\u5b9a\u7fa9\u7684\u5371\u96aa\u63d0\u793a\u6846\u3002  <p>87</p> <p>19487</p> <pre><code>123\n{{87}{123}}\n{{87}{123}}\n{{87}{123}}\n{{87}{123}}\n{{87}{123}}\n</code></pre>"},{"location":"APCS/","title":"APCS","text":"\u79d1\u76ee \u7bc0\u6b21 \u5165\u5834 \u6aa2\u6e2c\u958b\u59cb \u63d0\u524d\u4ea4\u5377\u958b\u59cb\u6642\u9593 \u63d0\u524d\u4ea4\u5377\u622a\u6b62\u6642\u9593 \u6aa2\u6e2c\u7d50\u675f \u89c0\u5ff5\u984c \u7b2c\u4e00\u7bc0 09:30 09:40 10:10 10:30 10:40 \u7b2c\u4e8c\u7bc0 11:00 11:10 11:40 12:00 12:10 \u5be6\u4f5c\u984c \u7b2c\u4e09\u7bc0 13:30 13:40 14:10 16:00 16:10"},{"location":"STL/","title":"\u6703\u81ea\u52d5\u6392\u5e8f\u7684","text":"<p>\u5c0f\u5230\u5927 (12345 1. set 2. multiset 2. map 3. multimap</p> <p>\u5927\u5230\u5c0f (54321 1. priority_queue 2. sort()\u51fd\u6578  (\u96e2\u984c!!</p>"},{"location":"STL/#multiset","title":"multiset","text":""},{"location":"STL/#_2","title":"\u9663\u5217\u91cd\u9ede","text":""},{"location":"STL/#_3","title":"\u4e00\u822c\u9663\u5217","text":"<p>int v[10];</p> <p>v\u56de\u50b3\u7b2c\u4e00\u500bv[0]\u7684\u6307\u6a19</p>"},{"location":"STL/#vector","title":"vector","text":"vector\u4e8c\u7dad\u9663\u5217\u521d\u59cb\u5316 <pre><code>#include&lt;bits/stdc++.h&gt;\n#define nn \"\\n\"\nusing namespace std;\nint main(){\n    istringstream cin(\"3 1 2 3 \\\n4 5 6 \\\n7 8 9\");\n    int n;\n    cin&gt;&gt;n;\n    vector&lt;vector&lt;int&gt;&gt; dp(n,vector&lt;int&gt;(n));\n    for(int i=0;i&lt;n;i++){\n        for(int j=0;j&lt;n;j++){\n            cin&gt;&gt;dp[i][j];\n        }\n    }\n    for(auto i:dp){\n        for(int j:i){\n            cout&lt;&lt;j;\n        }cout&lt;&lt;nn;\n    }\n}\n</code></pre> <p>vector &lt;int&gt; v[10] ; v.begin()\u56de\u50b3\u7b2c\u4e00\u500b\u5143\u7d20\u4f4d\u7f6e v.end()\u56de\u50b3\u6700\u5f8c\u4e00\u500b\u5143\u7d20\u7684\u5f8c\u4e00\u500b\u4f4d\u7f6e v.begin()\u56de\u50b3\u6700\u5f8c\u4e00\u500b\u5143\u7d20\u4f4d\u7f6e v.end()\u56de\u50b3\u7b2c\u4e00\u500b\u5143\u7d20\u7684\u524d\u4e00\u500b\u4f4d\u7f6e</p>"},{"location":"STL/#_4","title":"\u8ce6\u503c\u64cd\u4f5c","text":"<p>GPT: \u5927\u591a\u6578 STL \u5bb9\u5668\u90fd\u652f\u6301\u76f4\u63a5\u8ce6\u503c\u64cd\u4f5c\uff0c\u5305\u62ec\uff1a * vector * list * deque * array * set * map * unordered_set * unordered_map</p> <p>\u8ce6\u503c\uff1a code: <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nint main() {\n    vector&lt;int&gt;v1,v2;\n    v1={1,2,3,4,5};\n    v2=v1;\n    for(int i:v2){\n        cout&lt;&lt;i&lt;&lt;\" \";\n    }\n}\n</code></pre> output: <pre><code>1 2 3 4 5 \n</code></pre></p>"},{"location":"STL/#_5","title":"\u8a9e\u6cd5\u6574\u7406","text":""},{"location":"STL/#pushpoptop","title":".push()/.pop()/.top()","text":"<p>\u9032\u51fa\u4f4d\u7f6e\u56fa\u5b9a 1. stack(\u5806\u758a)\u5f8c\u9032\u5148\u51fa 3. priority_queue(\u512a\u5148\u99d0\u5217)\u5f8c\u9032\u5148\u51fa\uff0c\u81ea\u52d5\u6392\u5e8f 2. queue(\u5217\u968a)\u5148\u9032\u5148\u51fa</p>"},{"location":"STL/#inserterase-it","title":".insert()/.erase()   (\u62ec\u865f\u5167\u653eit\u6216\u6578\u5b57)","text":"<p>list</p> <ol> <li>list(\u93c8\u7d50) \u62ec\u865f\u5167\u8981\u653eit</li> </ol> <p>set</p> <ol> <li>set</li> <li>multiset</li> <li>unordered_set</li> <li>multiset</li> <li>unordered_multiset</li> </ol> <p>map</p> <ol> <li>map</li> <li>multimap</li> <li>unordered_map</li> <li>multimap</li> <li>unordered_multimap</li> </ol>"},{"location":"STL/#setmap","title":"set/map \u7684\u522a\u9664","text":"<p>.erase(\u6578\u503c)\u662f\u6240\u6709\u5339\u914d\u5143\u7d20 .erase(it)\u662f\u8a72\u4f4d\u7f6e\u5143\u7d20</p>"},{"location":"STL/#tie","title":"\u62c6\u89e3\u5143\u7d20 (tie)","text":"<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\nusing  pii = pair&lt;int,int&gt;;\n\nint main(){\n    pii p={9,2};\n    int a,b;\n    tie(a,b)=p;\n    cout&lt;&lt;a; //9\n}\n</code></pre>"},{"location":"STL/#tupleget1","title":"tuple\u3001get&lt;1&gt;\u4f7f\u7528","text":"<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nusing  tiii = tuple&lt;int,int,int&gt;;\nint main(){\n    tiii t;\n    t={1,2,3};\n    int ans=get&lt;1&gt;(t);\n    cout&lt;&lt;ans;\n}\n</code></pre>"},{"location":"STL/#_6","title":"\u53ef\u80fd\u6703\u7528\u5230\u6240\u4ee5\u653e\u9019","text":"(C) 0 1 2 3 4 5 6 7 8 9 (R)0 (0,0) (0,1) (0,2) (0,3) (0,4) (0,5) (0,6) (0,7) (0,8) (0,9) 1 (1,0) (1,1) (1,2) (1,3) (1,4) (1,5) (1,6) (1,7) (1,8) (1,9) 2 (2,0) (2,1) (2,2) (2,3) (2,4) (2,5) (2,6) (2,7) (2,8) (2,9) 3 (3,0) (3,1) (3,2) (3,3) (3,4) (3,5) (3,6) (3,7) (3,8) (3,9) 4 (4,0) (4,1) (4,2) (4,3) (4,4) (4,5) (4,6) (4,7) (4,8) (4,9) 5 (5,0) (5,1) (5,2) (5,3) (5,4) (5,5) (5,6) (5,7) (5,8) (5,9) 6 (6,0) (6,1) (6,2) (6,3) (6,4) (6,5) (6,6) (6,7) (6,8) (6,9) 7 (7,0) (7,1) (7,2) (7,3) (7,4) (7,5) (7,6) (7,7) (7,8) (7,9) 8 (8,0) (8,1) (8,2) (8,3) (8,4) (8,5) (8,6) (8,7) (8,8) (8,9) 9 (9,0) (9,1) (9,2) (9,3) (9,4) (9,5) (9,6) (9,7) (9,8) (9,9)"},{"location":"bitset%E4%BD%BF%E7%94%A8/","title":"bitset\u4f7f\u7528","text":"<p>From 2024 IONC</p> <p>\u7d30\u5fc3\u7684\u8b80\u8005\u53ef\u80fd\u6703\u767c\u73fe <code>bool</code> \u9019\u500b\u578b\u5225\u660e\u660e\u53ea\u80fd\u8868\u793a <code>true</code> \u6216 <code>false</code>\uff0c\u901a\u5e38\u537b\u4f54\u4e86 1 Byte \u7684\u8a18\u61b6\u9ad4\u7a7a\u9593\u3002\u9019\u4e3b\u8981\u7684\u539f\u56e0\u662f\u56e0\u70ba\u96fb\u8166\u7684\u67b6\u69cb\u901a\u5e38\u4e0d\u9700\u8981\u4e5f\u5f88\u96e3\u53bb\u64cd\u4f5c 1 bit \u7684\u7a7a\u9593\u3002\u55ae\u7d14\u5ba3\u544a\u4e00\u500b <code>bool</code> \u5f71\u97ff\u53ef\u80fd\u4e0d\u5927\uff0c\u4f46\u82e5\u662f\u5ba3\u544a <code>bool</code> \u9663\u5217\u53ef\u80fd\u6703\u9020\u6210\u5f88\u591a\u8a18\u61b6\u9ad4\u7684\u6d6a\u8cbb\u3002\u56e0\u6b64 STL \u5c31\u5305\u542b\u4e86\u4e00\u500b\u597d\u7528\u7684\u5de5\u5177 <code>bitset</code> \u53ef\u4ee5\u5ba3\u544a\u56fa\u5b9a\u9577\u5ea6\u7684 bits\u3002</p> <p>\u57fa\u672c\u4e0a\u4f60\u53ef\u4ee5\u628a <code>bitset</code> \u7576\u6210\u4e00\u500b\u6548\u7387\u5f88\u5feb\u7684 <code>bool</code> \u9663\u5217\uff0c\u800c\u8d8a\u4f4e\u4f4d\u662f\u5728 <code>bitset</code> \u7684\u8d8a\u53f3\u908a\u3002<code>bitset</code> \u4e5f\u652f\u63f4\u4f4d\u5143\u904b\u7b97\u3002\u4e5f\u80fd\u5c07 <code>bitset</code> \u8f49\u63db\u6210 <code>string</code> \u6216 <code>unsigned integer</code>\u3002\u901a\u5e38\u5728 <code>bitset</code> \u4e0a\u505a\u64cd\u4f5c\u7684\u6642\u9593\u662f <code>vector&lt;bool&gt;</code> \u7684 $\\frac{1}{32}$ \u500d\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\nint  main(){\n    bitset&lt;5&gt; b; // \u5ba3\u544a\u5927\u5c0f\u70ba 5 \u7684 bitset \u521d\u59cb\u70ba 00000\n    cout&lt;&lt;\"b: \"&lt;&lt;b&lt;&lt;\"\\n\";\n\n    b[0] = 1; // \u5c07\u7b2c 0 \u500b bit \u8a2d\u70ba 1 \u4e5f\u5c31\u662f bitset \u8b8a\u6210\u4e86 00001\n    cout&lt;&lt;\"b: \"&lt;&lt;b&lt;&lt;\"\\n\";\n\n    b.reset(); // set all bits to 0\n    cout&lt;&lt;\"b: \"&lt;&lt;b&lt;&lt;\"\\n\";\n\n    b.set(); // set all bits to 1\n    cout&lt;&lt;\"b: \"&lt;&lt;b&lt;&lt;\"\\n\";\n\n    bitset&lt;5&gt; a(10011);\n    cout&lt;&lt;\"a.count(): \" &lt;&lt; a.count() &lt;&lt; '\\n'; // \u8f38\u51fa bitset \u4e2d\u6709\u5e7e\u500b 1\n    cout&lt;&lt;\"a: \"&lt;&lt;a&lt;&lt;\"\\n\";\n\n    b=5;\n    cout&lt;&lt;\"b: \"&lt;&lt;b&lt;&lt;\"\\n\";\n\n    cout&lt;&lt;\"(a &amp; b): \" &lt;&lt; (a &amp; b) &lt;&lt; endl; // \u56e0\u70ba\u904b\u7b97\u5b50\u512a\u5148\u9806\u5e8f\u7684\u95dc\u4fc2\uff0c() \u662f\u5fc5\u9808\u7684\n\n    string str = a.to_string();\n    unsigned long val = a.to_ulong();\n    cout&lt;&lt;\"a: \"&lt;&lt;str&lt;&lt;\"\\n\";\n\n    bitset&lt;20&gt; c=10;\n    cout&lt;&lt;c;\n}\n</code></pre>"},{"location":"do%20while%E4%BD%BF%E7%94%A8/","title":"do while \u4f7f\u7528","text":"<p>while \u662f\u5148\u5224\u65b7\uff0c\u518d\u91cd\u8907\u57f7\u884c\u300c\u8981\u57f7\u884c\u7684\u5167\u5bb9\u300d</p> <p>\u800c do wheile \u662f\u5148\u57f7\u884c\u300c\u8981\u57f7\u884c\u7684\u5167\u5bb9\u300d\u518d\u9032\u884c\u5224\u65b7\uff0c\u63a5\u8457\u91cd\u8907\u57f7\u884c\u300c\u8981\u57f7\u884c\u7684\u5167\u5bb9\u300d</p>"},{"location":"do%20while%E4%BD%BF%E7%94%A8/#_1","title":"\u4f7f\u7528\u6642\u6a5f","text":"<p>\u5047\u8a2d\u8981\u88fd\u4f5c\u4e00\u500b\u7c21\u6613\u52a0\u6cd5\u8a08\u7b97\u6a5f\uff1a</p> <p>\u7cfb\u7d71\u5148\u8f38\u51fa<code>Enter two numbers</code> \u8f38\u5165\u5169\u500b\u6578\u5b57\uff0c\u8f38\u51fa\u76f8\u52a0\u7d50\u679c\uff0c\u4e26\u63d0\u4f9b\u9632\u5446\u6a5f\u5236\uff1a\u82e5\u5176\u4e2d\u4e00\u500b\u6578\u5b57\u8f38\u5165\u70ba\u5b57\u6bcd\uff0c\u5c31\u6301\u7e8c\u8f38\u51fa<code>Enter two numbers</code>\u4e26\u8b93\u4f7f\u7528\u8005\u91cd\u65b0\u8f38\u5165\u3002</p> <p>\u7bc4\u4f8b\u8f38\u5165\uff1a 1 a a 1 a a 1 1</p> <p>\u7bc4\u4f8b\u8f38\u51fa\uff1a Enter two numbers Enter two numbers Enter two numbers Enter two numbers 2</p> <p>\u7528while\u505a\uff1a</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\n#define nn \"\\n\"\n\nint main(){\n    char c[3]=\"\";\n    cout&lt;&lt;\"Enter two numbers\"&lt;&lt;nn;\n    cin&gt;&gt;c[0]&gt;&gt;c[1]; //\u5148\u8f38\u5165\n    while((!isdigit(c[0])) || (!isdigit(c[1])) ){ //\u5224\u65b7\u4e00\u6b21\n        cout&lt;&lt;\"Enter two numbers\"&lt;&lt;nn;\n        cin&gt;&gt;c[0]&gt;&gt;c[1];  //\u8f38\u5165\u7b2c\u4e8c\u6b21\n    }\n    cout&lt;&lt;c[0]-'0'+c[1]-'0'&lt;&lt;nn;\n}\n</code></pre> <p>\u7528do while\u505a\uff1a</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\n#define nn \"\\n\"\n\nint main(){\n    char c[3]=\"\";\n    do{\n        cout&lt;&lt;\"Enter two numbers\"&lt;&lt;nn;\n        cin&gt;&gt;c[0]&gt;&gt;c[1];\n    }while((!isdigit(c[0])) || (!isdigit(c[1])));\n\n    cout&lt;&lt;c[0]-'0'+c[1]-'0'&lt;&lt;nn;\n}\n</code></pre> <p>\u53ef\u4ee5\u767c\u73fe\uff0c\u5dee\u5225\u5c31\u662fdo while\u5728\u57f7\u884c\u7b2c\u4e00\u6b21\u4e4b\u5f8c\u624d\u5224\u65b7\u3002</p>"},{"location":"getline%E6%90%AD%E9%85%8Dstringstream/","title":"getline\u642d\u914dstringstream","text":"<p>\u9019\u908a\u8b1b\u89e3cin\u3001getline\u7684\u904b\u4f5c\u65b9\u5f0f</p>"},{"location":"getline%E6%90%AD%E9%85%8Dstringstream/#cin","title":"cin","text":"<p>\u5f9e\u5de6\u81f3\u53f3\u5ffd\u7565\u6240\u6709\u300c<code>' '</code>\u6216\u662f<code>'\\n'</code>\u300d\uff0c\u7576\u9047\u5230\u975e\u300c<code>' '</code>\u6216\u662f<code>'\\n'</code>\u300d\u6642\u8a8d\u4f5c\u8f38\u5165\u76ee\u6a19\uff0c\u76f4\u5230\u518d\u6b21\u9047\u5230\u300c<code>' '</code>\u6216\u662f<code>'\\n'</code>\u300d\u6642\uff0c\u505c\u6b62\u8a8d\u4f5c\u8f38\u5165\u76ee\u6a19\uff0c\u5c07\u8f38\u5165\u76ee\u6a19\u53ca\u8f38\u5165\u76ee\u6a19\u4e4b\u524d\u7684\u6240\u6709\u5143\u7d20\u6368\u68c4\u3002</p> <p>\u5047\u8a2d\u7de9\u885d\u5340 <pre><code>\" \\n  \\n   \\n  123  \\n 4 5\"\n</code></pre> \u57f7\u884c\u7a0b\u5f0f <pre><code>cin&gt;&gt;n;\n</code></pre> \u7de9\u885d\u5340\u6703\u5f9e <pre><code>\" \\n  \\n   \\n  123  \\n 4 5\"\n</code></pre> \u8b8a\u70ba <pre><code>\"  \\n 4 5\"\n</code></pre> \u800c\u8f38\u5165\u76ee\u6a19(n)\u70ba <pre><code>\"123\"\n</code></pre></p> <p>\u904e\u7a0b\u5716\u793a\uff1a </p> <p>\u7a0b\u5f0f\u78bc\uff1a <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nint main(){\n    istringstream cin(\" \\n  \\n   \\n  123  \\n 4 5\");\n    int n;\n    cin&gt;&gt;n;\n    cout&lt;&lt;n;\n}\n</code></pre> output: <pre><code>123\n</code></pre></p>"},{"location":"getline%E6%90%AD%E9%85%8Dstringstream/#getline","title":"getline","text":""},{"location":"getline%E6%90%AD%E9%85%8Dstringstream/#_1","title":"\u4ecb\u7d39","text":"<p>getline(\u8f38\u5165\u6d41,\u5b57\u4e32,\u5206\u5272\u5143\u7d20); getline(\u8f38\u5165\u6d41,string,char);</p> <p><pre><code>getline(cin,s);\n</code></pre> * \u8f38\u5165\u6d41\uff1a cin stringstream istringstream * \u5b57\u4e32\uff1a \u5fc5\u9808\u662fstring * \u5206\u5272\u5143\u7d20\uff1a \u5fc5\u9808\u662fchar</p> <p>\u5206\u5272\u5143\u7d20\u53ef\u4ee5\u9078\u64c7\u8981\u4e0d\u8981\u6253\uff0c\u82e5\u6c92\u6709\u6253\uff0c\u5206\u5272\u5143\u7d20\u9810\u8a2d\u70ba<code>'\\n'</code>\u3002 \u5982\u679c\u6253\u4e86\u5b57\u5143\uff0c\u6703\u5c07\u5206\u5272\u5143\u7d20\u8b8a\u66f4\u70ba\u8a72\u5b57\u5143</p> <p>\u7bc4\u4f8b\uff1a <pre><code>getline(cin,s);     //\u9047\u5230'\\n'\u5206\u5272\ngetline(cin,s,'2');  //\u9047\u5230'2'\u5206\u5272\n</code></pre></p>"},{"location":"getline%E6%90%AD%E9%85%8Dstringstream/#_2","title":"\u904b\u4f5c","text":"<p>\u5f9e\u5de6\u81f3\u53f3\u5c07\u6240\u6709\u5143\u7d20\u8a8d\u4f5c\u8f38\u5165\u76ee\u6a19\uff0c\u76f4\u5230\u9047\u5230\u5206\u5272\u5143\u7d20\uff0c\u5c07\u5206\u5272\u5143\u7d20\u4ee5\u53ca\u5206\u5272\u5143\u7d20\u4e4b\u524d\u6240\u6709\u5143\u7d20\u6368\u68c4\u3002</p>"},{"location":"getline%E6%90%AD%E9%85%8Dstringstream/#1","title":"1. \u4e0d\u9078\u64c7\u5206\u5272\u5143\u7d20","text":"<p>\u5047\u8a2d\u7de9\u885d\u5340 <pre><code>\"545 1 \\n 1 2 3\"\n</code></pre> \u57f7\u884c\u7a0b\u5f0f <pre><code>getline(cin,s);\n</code></pre> \u7de9\u885d\u5340\u6703\u5f9e <pre><code>\"545 1 \\n 1 2 3\"\n</code></pre> \u8b8a\u70ba <pre><code>\" 1 2 3\"\n</code></pre> \u800c\u8f38\u5165\u76ee\u6a19(s)\u70ba <pre><code>\"545 1 \"\n</code></pre></p> <p>\u904e\u7a0b\u5716\u793a\uff1a </p> <p>\u7a0b\u5f0f\u78bc\uff1a <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nint main(){\n    istringstream cin(\"545 1 \\n 1 2 3\");\n    string s;\n    getline(cin,s);\n    cout&lt;&lt;s&lt;&lt;\";\";\n}\n</code></pre> output: <pre><code>545 1 ;\n</code></pre></p>"},{"location":"getline%E6%90%AD%E9%85%8Dstringstream/#2","title":"2. \u9078\u64c7\u5206\u5272\u5143\u7d20","text":"<p>\u5047\u8a2d\u7de9\u885d\u5340 <pre><code>\"545 1 \\n 1 2 3\"\n</code></pre> \u57f7\u884c\u7a0b\u5f0f <pre><code>getline(cin,s,'2');\n</code></pre> \u7de9\u885d\u5340\u6703\u5f9e <pre><code>\"545 1 \\n 1 2 3\"\n</code></pre> \u8b8a\u70ba <pre><code>\" 3\"\n</code></pre> \u800c\u8f38\u5165\u76ee\u6a19(s)\u70ba <pre><code>\"545 1 \\n 1 \"\n</code></pre></p> <p>\u904e\u7a0b\u5716\u793a\uff1a </p> <p>\u7a0b\u5f0f\u78bc\uff1a <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nint main(){\n    istringstream cin(\"545 1 \\n 1 2 3\");\n    string s;\n    getline(cin,s,'2');\n    cout&lt;&lt;s&lt;&lt;\";\";\n}\n</code></pre> output: <pre><code>545 1\n 1 ;\n</code></pre></p> <p>\u6ce8\u610f\u5230\u4e86\u55ce \u56e0\u70bas\u4e2d\u6709\u63db\u884c\u7b26\u865f\uff0c\u6240\u4ee5\u6703\u63db\u884c</p>"},{"location":"getline%E6%90%AD%E9%85%8Dstringstream/#_3","title":"\u8981\u6ce8\u610f\u7684\u60c5\u5f62","text":"<p>\u6709\u6642\u5019getline\u914d\u5408cin\u4f7f\u7528\uff0c\u6703\u662f\u7a7a\u5b57\u4e32\uff0c\u539f\u56e0\u5982\u4e0b\uff1a</p> <p>\u5047\u8a2d\u7de9\u885d\u5340\u70ba <pre><code>\"1\\n2 3 4\\n5 6 7\"\n</code></pre> \u4e5f\u5c31\u662f <pre><code>1\n2 3 4\n5 6 7\n</code></pre></p> <p>\u57f7\u884c\u7a0b\u5f0f <pre><code>cin&gt;&gt;n;\n</code></pre> \u7de9\u885d\u5340\u5f9e <pre><code>\"1\\n2 3 4\\n5 6 7\"\n</code></pre> \u8b8a\u70ba <pre><code>\"\\n2 3 4\\n5 6 7\"\n</code></pre> \u800c\u8f38\u5165\u76ee\u6a19(n)\u70ba <pre><code>\"1\"\n</code></pre> \u57f7\u884c\u7a0b\u5f0f <pre><code>getline(cin,s);\n</code></pre> \u7de9\u885d\u5340\u5f9e <pre><code>\"\\n2 3 4\\n5 6 7\"\n</code></pre> \u8b8a\u70ba <pre><code>\"2 3 4\\n5 6 7\"\n</code></pre> \u800c\u8f38\u5165\u76ee\u6a19(s)\u70ba <pre><code>\"\"\n</code></pre></p> <p>\u9019\u6642\u5019s\u4e0d\u6703\u6709\u4efb\u4f55\u6771\u897f(\u56e0\u70ba\\n\u524d\u9762\u6c92\u6709\u6771\u897f)\uff0c\u70ba\u7a7a\u5b57\u4e32\uff0c\u9700\u8981\u6ce8\u610f!!!</p>"},{"location":"getline%E6%90%AD%E9%85%8Dstringstream/#_4","title":"\u5be6\u4f5c\uff1a\u4e0d\u77e5\u9053\u6578\u91cf\u7684\u554f\u984c","text":"<p>\u7576\u9047\u5230\u554f\u984c\uff1a \u7b2c\u4e00\u884c\u7d66\u5b9a\u6578\u5b57n \u7b2c\u4e8c\u884c\u7d66\u5b9a\u672a\u77e5\u6578\u91cf\u6578\u5b57 \u8acb\u5c07\u7b2c\u4e8c\u884c\u6240\u6709\u6578\u5b57\u52a0\u7e3d\u5f8c\u4e58\u4ee5n\u8f38\u51fa</p> <p>\u7bc4\u4f8b\u8f38\u5165\uff1a 5 1 2 3 7 8 9 4 5 6 4</p> <p>\u7bc4\u4f8b\u8f38\u51fa\uff1a 245</p> <p>\u7bc4\u4f8b\u8b1b\u89e3: (1+2+3+7+8+9+4+5+6+4)*5=245</p> <p>\u7a0b\u5f0f\u78bc\uff1a <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define nn \"\\n\"\nint main(){\n    istringstream cin(\"5\\n1 2 3 7 8 9 4 5 6 4\");\n    int n;\n    cin&gt;&gt;n;\n    string s;\n    getline(cin,s);//\u6b64\u6642s\u70ba\u7a7a\u5b57\u4e32\uff0c\u4ee5\\n\u5206\u5272\n    getline(cin,s);//\u6b64\u6642s\u624d\u6709\u6771\u897f\uff0c\u4ee5\\n\u5206\u5272\n    stringstream ss(s);\n    int sum=0;\n    while(getline(ss,s,' ')){//\u4ee5\u7a7a\u683c\u5206\u5272\n        sum+=s[0]-'0';\n    }\n    cout&lt;&lt;sum*n;\n}\n</code></pre></p>"},{"location":"hackmd%E7%89%B9%E6%AE%8A%E4%BD%BF%E7%94%A8/","title":"\u66f8\u672c\u6a21\u5f0f\u8d85\u9023\u7d50\u67d0\u6a19\u984c","text":"<p>\u6309\u53f3\u9375\u8907\u88fd\u7db2\u5740</p> <p></p>"},{"location":"hackmd%E7%89%B9%E6%AE%8A%E4%BD%BF%E7%94%A8/#_2","title":"\u6a19\u984c\u9023\u7d50\u4f7f\u7528","text":"<p>\u8907\u88fd\u9023\u7d50\u4e95\u5b57\u865f</p> <p></p>"},{"location":"hackmd%E7%89%B9%E6%AE%8A%E4%BD%BF%E7%94%A8/#_3","title":"\u653e\u5f71\u7247","text":"<ol> <li>\u6253\uff1a {}</li> </ol> <ol> <li>youtubeid \u63db\u6210\u5f71\u7247\u9023\u7d50\"=\"\u5f8c\u65b9\u6587\u5b57</li> </ol>"},{"location":"hackmd%E7%89%B9%E6%AE%8A%E4%BD%BF%E7%94%A8/#_4","title":"\u5716\u7247\u653e\u5927\u7e2e\u5c0f","text":""},{"location":"hackmd%E7%89%B9%E6%AE%8A%E4%BD%BF%E7%94%A8/#pdf","title":"\u5d4c\u5165PDF","text":""},{"location":"hackmd%E7%89%B9%E6%AE%8A%E4%BD%BF%E7%94%A8/#google","title":"GOOGLE\u96f2\u7aef","text":"\u9810\u89bd"},{"location":"hackmd%E7%89%B9%E6%AE%8A%E4%BD%BF%E7%94%A8/#_5","title":"\u4ee3\u78bc\uff1a","text":"<pre><code>&lt;iframe src=\"https://drive.google.com/file/d/1KLN8uow9WGAGrZwYADxiWyUsJ8w6_2VV/preview\" width=\"100%\" height=\"1000px\"&gt;&lt;/iframe&gt;\n</code></pre> <p>\u82e5\u7db2\u5740\u70ba <code>https://drive.google.com/file/d/1KLN8uow9WGAGrZwYADxiWyUsJ8w6_2VV/view?usp=drive_link</code> \u5c07\u6700\u5f8c\u4e00\u500b\u659c\u7dda\u5f8c\u9762\u300c<code>view?usp=drive_link</code>\u300d\u6539\u70ba\u300c<code>preview</code>\u300d\uff0c\u5982\u4e0b\uff1a <code>https://drive.google.com/file/d/1KLN8uow9WGAGrZwYADxiWyUsJ8w6_2VV/preview</code></p>"},{"location":"hackmd%E7%89%B9%E6%AE%8A%E4%BD%BF%E7%94%A8/#_6","title":"\u683c\u5f0f","text":"<pre><code>&lt;iframe src=\"\u7db2\u5740\" width=\"100%\" height=\"1000px\"&gt;&lt;/iframe&gt;\n</code></pre>"},{"location":"log/","title":"log","text":"<p>\u5c0d\u6578\u6709\u5e7e\u500b\u5e38\u898b\u7684\u57fa\u6578\uff0c\u5305\u62ec\u81ea\u7136\u5c0d\u6578\uff08\u4ee5$e$\u70ba\u5e95\uff0c\u8a18\u70ba$\\text{ln}$\uff09\u3001\u5341\u9032\u5236\u5c0d\u6578\uff08\u4ee5$10$\u70ba\u5e95\uff0c\u8a18\u70ba$\\text{log}$\uff09\u548c\u4e8c\u9032\u5236\u5c0d\u6578\uff08\u4ee5$2$\u70ba\u5e95\uff0c\u8a18\u70ba$\\text{log}_2$\uff09\u3002</p> <p>\u5c0d\u6578\u7684\u5b9a\u7fa9\u662f\u9019\u6a23\u7684\uff1a\u5982\u679c $a^x = b$\uff0c\u90a3\u9ebc $x$ \u662f $b$ \u7684\u4ee5 $a$ \u70ba\u5e95\u7684\u5c0d\u6578\uff0c\u8a18\u70ba $\\log_a b = x$\u3002\u9019\u88e1\u7684$a$ \u7a31\u70ba\u5e95\u6578\uff0c$b$ \u662f\u5c0d\u6578\u7684\u771f\u6578\u3002</p> <p>$$ a^x = b \\implies \\log_a b = x $$</p>"},{"location":"log/#_1","title":"\u5c0d\u6578\u7684\u6027\u8cea","text":"<ol> <li>\u4e58\u6cd5\u8b8a\u52a0\u6cd5\uff1a$$\\log_a (xy) = \\log_a x + \\log_a y$$</li> <li>\u9664\u6cd5\u8b8a\u6e1b\u6cd5\uff1a$$\\log_a \\left(\\frac{x}{y}\\right) = \\log_a x - \\log_a y$$</li> <li>\u51aa\u7684\u898f\u5247\uff1a$$\\log_a (x^b) = b \\cdot \\log_a x$$</li> <li>\u5e95\u6578\u8b8a\u63db\u516c\u5f0f\uff1a$$\\log_b x = \\frac{\\log_a x}{\\log_a b}$$</li> </ol> <p>\u5c0d\u6578\u5728\u79d1\u5b78\u3001\u5de5\u7a0b\u5b78\u3001\u8a08\u7b97\u6a5f\u79d1\u5b78\u548c\u91d1\u878d\u7b49\u9818\u57df\u6709\u8457\u5ee3\u6cdb\u7684\u61c9\u7528\uff0c\u4f8b\u5982\u5728\u8a08\u7b97\u8907\u5229\u6216\u89e3\u6c7a\u6307\u6578\u65b9\u7a0b\u6642\u7279\u5225\u6709\u7528\u3002</p>"},{"location":"map/","title":"\u4e3b\u8981\u7279\u9ede","text":"<ol> <li>\u9375\u503c\u5c0d\u5b58\u5132\uff1a<code>map</code> \u4ee5\u9375\u503c\u5c0d\u7684\u5f62\u5f0f\u5b58\u5132\u6578\u64da\uff0c\u6bcf\u500b\u9375\u5c0d\u61c9\u4e00\u500b\u503c\u3002</li> <li>\u9375\u7684\u552f\u4e00\u6027\uff1a\u5728\u4e00\u500b <code>map</code> \u4e2d\uff0c\u6bcf\u500b\u9375\u90fd\u662f\u552f\u4e00\u7684\u3002\u5982\u679c\u63d2\u5165\u4e00\u500b\u5df2\u6709\u7684\u9375\uff0c\u5176\u5c0d\u61c9\u7684\u503c\u5c07\u88ab\u66f4\u65b0\u3002</li> <li>\u81ea\u52d5\u6392\u5e8f\uff1a<code>map</code> \u4e2d\u7684\u5143\u7d20\u6703\u6839\u64da\u9375\u81ea\u52d5\u6392\u5e8f\uff0c\u9ed8\u8a8d\u662f\u6309\u5347\u5e8f\u6392\u5217\u3002</li> <li>\u9ad8\u6548\u67e5\u627e\uff1a<code>map</code> \u63d0\u4f9b\u9ad8\u6548\u7684\u67e5\u627e\u3001\u63d2\u5165\u548c\u522a\u9664\u64cd\u4f5c\uff0c\u6642\u9593\u8907\u96dc\u5ea6\u70ba O(log n)\u3002</li> </ol>"},{"location":"map/#_2","title":"\u57fa\u672c\u7528\u6cd5","text":"<p>\u4ee5\u4e0b\u662f\u4e00\u4e9b\u57fa\u672c\u64cd\u4f5c\u7684\u793a\u4f8b\uff1a</p> <ol> <li> <p>\u5ba3\u544a\u8207\u521d\u59cb\u5316 <pre><code>#include &lt;iostream&gt;\n#include &lt;map&gt;\nusing namespace std;\n\nint main() {\n    map&lt;int, string&gt; myMap; // \u5ba3\u544a\u4e00\u500b\u7a7a\u7684 map\uff0c\u9375\u70ba int\uff0c\u503c\u70ba string\n    myMap[1] = \"Apple\";\n    myMap[2] = \"Banana\";\n    myMap[3] = \"Cherry\";\n\n    // \u4f7f\u7528 initializer list \u521d\u59cb\u5316\n    map&lt;int, string&gt; anotherMap = {{1, \"Apple\"}, {2, \"Banana\"}, {3, \"Cherry\"}};\n\n    return 0;\n}\n</code></pre></p> </li> <li> <p>\u63d2\u5165\u5143\u7d20 <pre><code>myMap.insert({4, \"Date\"});\nmyMap[5] = \"Elderberry\"; // \u4e5f\u53ef\u4ee5\u4f7f\u7528 [] \u64cd\u4f5c\u7b26\n</code></pre></p> </li> <li> <p>\u8a2a\u554f\u5143\u7d20 <pre><code>cout &lt;&lt; myMap[1] &lt;&lt; endl; // \u8f38\u51fa \"Apple\"\ncout &lt;&lt; myMap.at(2) &lt;&lt; endl; // \u8f38\u51fa \"Banana\"\n</code></pre></p> </li> <li> <p>\u904d\u6b77\u5143\u7d20 <pre><code>for (const auto&amp; pair : myMap) {\n    cout &lt;&lt; pair.first &lt;&lt; \": \" &lt;&lt; pair.second &lt;&lt; endl;\n}\n</code></pre></p> </li> <li> <p>\u67e5\u627e\u5143\u7d20 <pre><code>auto it = myMap.find(2); // \u67e5\u627e\u9375\u70ba 2 \u7684\u5143\u7d20\nif (it != myMap.end()) {\n    cout &lt;&lt; \"Found: \" &lt;&lt; it-&gt;second &lt;&lt; endl; // \u8f38\u51fa \"Found: Banana\"\n} else {\n    cout &lt;&lt; \"Not found\" &lt;&lt; endl;\n}\n</code></pre></p> </li> <li> <p>\u522a\u9664\u5143\u7d20 <pre><code>myMap.erase(3); // \u522a\u9664\u9375\u70ba 3 \u7684\u5143\u7d20\n</code></pre></p> </li> <li> <p>\u5c0b\u627e\u5143\u7d20 <pre><code> #include&lt;bits/stdc++.h&gt;\n using namespace std;\n int main(){\n     map&lt;char,int&gt;mp={{'c',1},{'a',2}};\n     if(mp.find('c')!=mp.end()){\n         cout&lt;&lt;\"find\";\n     }\n }\n</code></pre></p> </li> <li> <p>\u66f4\u6539\u5167\u5bb9</p> <pre><code>#include &lt;map&gt;\nusing namespace std;\n\nint main() {\n    map&lt;int, string&gt; myMap;\n    myMap[1] = \"Apple\";\n    myMap[2] = \"Banana\";\n    myMap[3] = \"Cherry\";\n\n    // \u4fee\u6539 map \u4e2d\u7684\u503c\n    for (auto&amp; pair : myMap) {\n        pair.second = \"Modified \" + pair.second;\n    }\n\n    // \u8f38\u51fa\u4fee\u6539\u5f8c\u7684 map\n    for (const auto&amp; pair : myMap) {\n        cout &lt;&lt; pair.first &lt;&lt; \": \" &lt;&lt; pair.second &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre> <p> \u6ce8\u610f\uff01\uff01 key\u4e0d\u80fd\u66f4\u6539 </p> </li> </ol>"},{"location":"map/#mapkeystruct","title":"map\u7684key\u653e\u7f6e\u81ea\u8a02struct","text":"<p>\u60f3\u8981\u5728key\u653e\u7f6e\u5169\u500b\u6578\u5b57\uff0c\u53ef\u4ee5\u81ea\u5df1\u5275struct\uff0c\u4f46\u662f\u9700\u8981\u5beb\u6392\u5e8f\u51fd\u5f0f \u4e0d\u60f3\u8981\u5beb\u51fd\u5f0f\u5c31\u8981\u4f7f\u7528pair\u4f86\u7576key\uff0c\u53ea\u662f\u8981\u8a18\u5f97first/second</p> \u984c\u76ee \u7a0b\u5f0f\u78bc <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\nstruct Point {\n    int x, y;\n};\n\nbool operator&lt;(const Point &amp;a, const Point &amp;b) {\n    if (a.x == b.x) {\n        return a.y &lt; b.y;\n    }\n    return a.x &lt; b.x;\n}\n\nint main(){\n    int w;\n    cin&gt;&gt;w;\n    while(w--){\n        int n;\n        cin&gt;&gt;n;\n        map&lt;Point,int&gt; mp;\n        for(int i=0;i&lt;n;i++){\n            Point p;\n            cin&gt;&gt;p.x&gt;&gt;p.y;\n            if(p.x&lt;p.y){\n                mp[{p.x,p.y}]++;\n            }\n            else{\n                mp[{p.y,p.x}]++;\n            }\n        }\n        int ans=0;\n        for(auto i:mp){\n            if(i.second==2){\n                ans++;\n            }\n        }\n        cout&lt;&lt;ans&lt;&lt;\"\\n\";\n    }\n}\n</code></pre>"},{"location":"scanf%20%26%20printf/","title":"\u578b\u614b","text":""},{"location":"scanf%20%26%20printf/#scanf","title":"scanf\uff1a\u8f38\u5165","text":"<p>\u6210\u529f\u8f38\u5165(\u6210\u529f\u66f4\u6539\u8b8a\u6578\u5167\u5bb9)\uff0c\u56de\u50b3true\uff0c\u5426\u5247\u56de\u50b3false</p> <ul> <li>\u57fa\u672c <pre><code>scanf(\"%d\",&amp;n);\n</code></pre> \u4f7f\u7528 &amp; \u4f86\u53d6\u5f97\u4f4d\u7f6e \uff0c scanf \u627e\u5230\u4f4d\u7f6e\u5f8c\u5c07\u6578\u5b57\u5b58\u5165</li> <li>\u9650\u5236\u8f38\u5165 <pre><code>scanf(\"is%d\",&amp;n);\n</code></pre> \u8981\u8f38\u5165is(\u52a0\u4e00\u500b\u6578\u5b57)\u624d\u80fd\u9806\u5229\u8f38\u5165</li> </ul>"},{"location":"scanf%20%26%20printf/#printf","title":"printf \u8f38\u51fa","text":"<ul> <li>\u57fa\u672c <pre><code>printf(\"%d\",n);\n</code></pre> \u76f4\u63a5\u8b80\u53d6\u8b8a\u6578\u5f8c\u8f38\u51fa\u3002</li> <li>\u9023\u5e36\u8f38\u51fa <pre><code>printf(\"number is : %d\",100);\n</code></pre></li> </ul>"},{"location":"switch%E4%B9%8B%E4%BD%BF%E7%94%A8/","title":"switch\u4e4b\u4f7f\u7528","text":""},{"location":"switch%E4%B9%8B%E4%BD%BF%E7%94%A8/#switch","title":"switch\u4e4b\u4f7f\u7528","text":"<p><pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define nn \"\\n\"\n\nint main(){\n    switch(10) { \n    case 10:\n        cout&lt;&lt; \"A\" &lt;&lt;\"\\n\";\n    case 9: \n    case 8: \n        cout &lt;&lt; \"B\" &lt;&lt; endl; \n    case 7: \n        cout &lt;&lt; \"C\" &lt;&lt; endl; \n        break; \n    case 6: \n        cout &lt;&lt; \"D\" &lt;&lt; endl; \n        break; \n    default: \n        cout &lt;&lt; \"E\" &lt;&lt; endl; \n        break;\n    }   \n}\n</code></pre> </p> <p>1.\u6c92\u6709break\u5c31\u6703\u4e00\u76f4\u57f7\u884c\u4e0b\u4e00\u5c64\u7684\uff0c\u76f4\u5230\u627e\u5230break\u3002 2.\u53ef\u4ee5\u4e0d\u653e\u6558\u8ff0\uff0c\u59824\u30015\u884c\uff0c\u5982\u540cor(\u591a\u91cd\u689d\u4ef6)\u3002</p>"},{"location":"switch%E4%B9%8B%E4%BD%BF%E7%94%A8/#_1","title":"\u8a2d\u7f6e\u7bc4\u570d","text":"<p>\u4f7f\u7528\u300c...\u300d\u8a2d\u7f6e\u7bc4\u570d\uff0c3 ... 5\u662f3&lt;=x&lt;=5 \u7a0b\u5f0f\u78bc: <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nint main(){\n    int n;\n    n=4;\n    switch (n){\n        case 1:cout&lt;&lt;'A';break;\n        case 2:cout&lt;&lt;'B';break;\n        case 3 ... 5:cout&lt;&lt;'C';break;\n        default :cout&lt;&lt;'D';break;\n    }\n}\n</code></pre> \u8f38\u51fa\uff1a <pre><code>C\n</code></pre></p> <p>\u6574\u7406\u597d\u770b\u4e00\u9ede <pre><code>switch (op) {\n    case '+': return a + b;\n    case '-': return a - b;\n    case '*': return a * b;\n    case '/': return b ? a / b : throw runtime_error(\"divide by zero\");\n    case '%': return a % b;\n}\n</code></pre></p>"},{"location":"%CE%A3%20sigma%20%28%E8%A5%BF%E6%A0%BC%E7%91%AA%29/","title":"\u516c\u5f0f","text":"<p>https://www.youtube.com/watch?v=p5z0O_L1Z0U</p> <ol> <li> <p>$\\sum_{k=1}^{n} k = \\frac{n(n+1)}{2}$</p> </li> <li> <p>$\\sum_{k=1}^{n} k^2 = \\frac{n(n+1)(2n+1)}{6}$</p> </li> <li> <p>$\\sum_{k=1}^{n} k^3 = \\left[\\frac{n(n+1)}{2}\\right]^2$</p> </li> <li> <p>$\\sum_{k=1}^{n} k(k+1) = \\frac{n(n+1)(n+2)}{3}$</p> </li> </ol>"},{"location":"%CE%A3%20sigma%20%28%E8%A5%BF%E6%A0%BC%E7%91%AA%29/#_2","title":"\u2211 \u7684\u6027\u8cea","text":"<ol> <li> <p>\u5e38\u6578\u548c\uff1a     $$ \\sum_{k=1}^{n} c = nc \\quad (c\u8868\u793a\u4efb\u4e00\u5e38\u6578) $$</p> </li> <li> <p>\u4fc2\u6578\u53ef\u4ee5\u63d0\uff1a     $$ \\sum_{k=1}^{n} c \\cdot a_k = c \\cdot \\sum_{k=1}^{n} a_k \\quad (c\u8868\u793a\u4efb\u4e00\u5e38\u6578\uff0ck\u8868\u793a\u8b8a\u6578) $$</p> </li> <li> <p>\u2211 \u7684\u5f8c\u9762\u6709\u52a0\u6e1b\u53ef\u4ee5\u62c6\uff1a     $$ \\sum_{k=1}^{n} (a_k \\pm b_k) = \\sum_{k=1}^{n} a_k \\pm \\sum_{k=1}^{n} b_k $$</p> </li> <li> <p>\u2211 \u7684\u5f8c\u9762\u5f88\u591a\u76f8\u4e58\uff1a      \u4e58\u958b\u518d\u62c6  $$  \\sum_{k=1}^{n} (2k-1)(3k+1)  $$</p> <p>\u8b8a\u6210</p> </li> </ol> <p>$$  \\sum_{k=1}^{n} (6k^2 - k - 1)  $$</p>"},{"location":"%E4%B8%83%E6%A9%8B%E5%95%8F%E9%A1%8C%26%E4%B8%80%E7%AD%86%E7%95%AB%E5%95%8F%E9%A1%8C/","title":"\u4e03\u6a4b\u554f\u984c&\u4e00\u7b46\u756b\u554f\u984c","text":"<p>form \u7dad\u57fa\u767e\u79d1</p>"},{"location":"%E4%B8%83%E6%A9%8B%E5%95%8F%E9%A1%8C%26%E4%B8%80%E7%AD%86%E7%95%AB%E5%95%8F%E9%A1%8C/#_1","title":"\u4e03\u6a4b\u554f\u984c","text":""},{"location":"%E4%B8%83%E6%A9%8B%E5%95%8F%E9%A1%8C%26%E4%B8%80%E7%AD%86%E7%95%AB%E5%95%8F%E9%A1%8C/#_2","title":"\u6545\u4e8b","text":"<p>\u67ef\u5c3c\u65af\u5821\u4e03\u6a4b\u554f\u984c\uff08\u5fb7\u8a9e\uff1aK\u00f6nigsberger Br\u00fcckenproblem\uff1b\u82f1\u8a9e\uff1aSeven Bridges of K\u00f6nigsberg\uff09\u662f\u5716\u8ad6\u4e2d\u7684\u8457\u540d\u554f\u984c\u3002\u9019\u500b\u554f\u984c\u662f\u57fa\u65bc\u4e00\u500b\u73fe\u5be6\u751f\u6d3b\u4e2d\u7684\u4e8b\u4f8b\uff1a</p> <p>\u7576\u6642\u6771\u666e\u9b6f\u58eb\u67ef\u5c3c\u65af\u5821\uff08\u4eca\u65e5\u4fc4\u7f85\u65af\u52a0\u91cc\u5be7\u683c\u52d2\uff09\u5e02\u5340\u8de8\u666e\u5217\u6208\u5229\u4e9e\u6cb3\u5169\u5cb8\uff0c\u6cb3\u4e2d\u5fc3\u6709\u5169\u500b\u5c0f\u5cf6\u3002\u5c0f\u5cf6\u8207\u6cb3\u7684\u5169\u5cb8\u6709\u4e03\u689d\u6a4b\u9023\u63a5\u3002\u5728\u6240\u6709\u6a4b\u90fd\u53ea\u80fd\u8d70\u4e00\u904d\u7684\u524d\u63d0\u4e0b\uff0c\u5982\u4f55\u624d\u80fd\u628a\u9019\u500b\u5730\u65b9\u6240\u6709\u7684\u6a4b\u90fd\u8d70\u904d\uff1f</p>"},{"location":"%E4%B8%83%E6%A9%8B%E5%95%8F%E9%A1%8C%26%E4%B8%80%E7%AD%86%E7%95%AB%E5%95%8F%E9%A1%8C/#_3","title":"\u89e3\u6c7a\u65b9\u5f0f","text":"<p>\u840a\u6602\u54c8\u5fb7\u00b7\u6b50\u62c9\u57281735\u5e74\u63d0\u51fa\uff0c\u4e26\u6c92\u6709\u65b9\u6cd5\u80fd\u5713\u6eff\u89e3\u6c7a\u9019\u500b\u554f\u984c\uff0c\u4ed6\u66f4\u5728\u7b2c\u4e8c\u5e74\u767c\u8868\u5728\u8ad6\u6587\u300a\u67ef\u5c3c\u65af\u5821\u7684\u4e03\u6a4b\u300b\u4e2d\uff0c\u8b49\u660e\u7b26\u5408\u689d\u4ef6\u7684\u8d70\u6cd5\u4e26\u4e0d\u5b58\u5728\uff0c\u4e5f\u9806\u5e36\u63d0\u51fa\u548c\u89e3\u6c7a\u4e86\u4e00\u7b46\u756b\u554f\u984c\u3002</p> <p>\u9019\u7bc7\u8ad6\u6587\u5728\u8056\u5f7c\u5f97\u5821\u79d1\u5b78\u9662\u767c\u8868\uff0c\u6210\u70ba\u5716\u8ad6\u53f2\u4e0a\u7b2c\u4e00\u7bc7\u91cd\u8981\u6587\u737b\u3002\u6b50\u62c9\u628a\u5be6\u969b\u7684\u62bd\u8c61\u554f\u984c\u7c21\u5316\u70ba\u5e73\u9762\u4e0a\u7684\u9ede\u8207\u7dda\u7d44\u5408\uff0c\u6bcf\u4e00\u5ea7\u6a4b\u8996\u70ba\u4e00\u689d\u7dda\uff0c\u6a4b\u6240\u9023\u63a5\u7684\u5730\u5340\u8996\u70ba\u9ede\u3002</p> <p>\u9019\u6a23\u82e5\u5f9e\u67d0\u9ede\u51fa\u767c\u5f8c\u6700\u5f8c\u518d\u56de\u5230\u9019\u9ede\uff0c\u5247\u9019\u4e00\u9ede\u7684\u7dda\u6578\u5fc5\u9808\u662f\u5076\u6578\uff0c\u9019\u6a23\u7684\u9ede\u7a31\u70ba\u5076\u9802\u9ede\u3002\u76f8\u5c0d\u7684\uff0c\u9023\u6709\u5947\u6578\u689d\u7dda\u7684\u9ede\u7a31\u70ba\u5947\u9802\u9ede\u3002\u6b50\u62c9\u8ad6\u8ff0\u4e86\uff0c\u7531\u65bc\u67ef\u5c3c\u65af\u5821\u4e03\u6a4b\u554f\u984c\u4e2d\u5b58\u57284\u500b\u5947\u9802\u9ede\uff0c\u5b83\u7121\u6cd5\u5be6\u73fe\u7b26\u5408\u984c\u610f\u7684\u904d\u6b77\u3002</p> <p></p> <p>\u6b50\u62c9\u628a\u554f\u984c\u7684\u5be6\u8cea\u6b78\u65bc\u4e00\u7b46\u756b\u554f\u984c\uff0c\u5373\u5224\u65b7\u4e00\u500b\u5716\u662f\u5426\u80fd\u5920\u904d\u6b77\u5b8c\u6240\u6709\u7684\u908a\u800c\u6c92\u6709\u91cd\u8907\uff0c\u800c\u67ef\u5c3c\u65af\u5821\u4e03\u6a4b\u554f\u984c\u5247\u662f\u4e00\u7b46\u756b\u554f\u984c\u7684\u4e00\u500b\u5177\u9ad4\u60c5\u5883\u3002</p> <p>\u6b50\u62c9\u6700\u5f8c\u7d66\u51fa\u4efb\u610f\u4e00\u7a2e\u6cb3\u2500\u2500\u6a4b\u5716\u80fd\u5426\u5168\u90e8\u8d70\u4e00\u6b21\u7684\u5224\u5b9a\u6cd5\u5247\uff0c\u5f9e\u800c\u89e3\u6c7a\u4e86\u300c\u4e00\u7b46\u756b\u554f\u984c\u300d\u3002</p> <p>\u5c0d\u65bc\u4e00\u500b\u7d66\u5b9a\u7684\u9023\u901a\u5716\uff0c\u5982\u679c\u5b58\u5728\u8d85\u904e\u5169\u500b\u7684\u5947\u9802\u9ede\uff0c\u90a3\u9ebc\u6eff\u8db3\u8981\u6c42\u7684\u8def\u7dda\u4fbf\u4e0d\u5b58\u5728\u4e86\uff0c\u4e14\u5728n&gt;0\u7684\u60c5\u6cc1\u4e0b\uff0c\u67092n\u500b\u5947\u9802\u9ede\u7684\u5716\u81f3\u5c11\u9700\u8981n\u7b46\u756b\u51fa\u3002\u5982\u679c\u53ea\u6709\u5169\u500b\u5947\u9802\u9ede\uff0c\u5247\u53ef\u5f9e\u5176\u4e2d\u4efb\u4f55\u4e00\u5730\u51fa\u767c\u5b8c\u6210\u4e00\u7b46\u756b\u3002\u82e5\u6240\u6709\u9ede\u5747\u70ba\u5076\u9802\u9ede\uff0c\u5247\u5f9e\u4efb\u4f55\u4e00\u9ede\u51fa\u767c\uff0c\u6240\u6c42\u7684\u8def\u7dda\u90fd\u80fd\u5be6\u73fe\uff0c\u4ed6\u9084\u8aaa\u660e\u4e86\u600e\u6a23\u5feb\u901f\u627e\u5230\u6240\u8981\u6c42\u7684\u8def\u7dda\u3002</p> <p>\u4e0d\u5c11\u6578\u5b78\u5bb6\u90fd\u5617\u8a66\u53bb\u89e3\u6790\u9019\u985e\u4e8b\u4f8b\u3002\u800c\u9019\u4e9b\u89e3\u6790\uff0c\u6700\u5f8c\u767c\u5c55\u6210\u70ba\u4e86\u6578\u5b78\u4e2d\u7684\u5716\u8ad6\u3002</p>"},{"location":"%E4%B8%83%E6%A9%8B%E5%95%8F%E9%A1%8C%26%E4%B8%80%E7%AD%86%E7%95%AB%E5%95%8F%E9%A1%8C/#_4","title":"\u4e00\u7b46\u756b\u554f\u984c","text":"<p>\u4e00\u7b46\u756b\u554f\u984c\uff08Eulerian graph\uff09\u662f\u5716\u8ad6\u4e2d\u4e00\u500b\u8457\u540d\u7684\u554f\u984c\u3002\u4e00\u7b46\u756b\u554f\u984c\u8d77\u6e90\u65bc\u67ef\u5c3c\u65af\u5821\u4e03\u6a4b\u554f\u984c\u3002\u6578\u5b78\u5bb6\u6b50\u62c9\u5728\u4ed61736\u5e74\u767c\u8868\u7684\u8ad6\u6587\u300a\u67ef\u5c3c\u65af\u5821\u7684\u4e03\u6a4b\u300b\u4e2d\u4e0d\u50c5\u89e3\u6c7a\u4e86\u4e03\u6a4b\u554f\u984c\uff0c\u4e5f\u63d0\u51fa\u4e86\u4e00\u7b46\u756b\u5b9a\u7406\uff0c\u9806\u5e36\u89e3\u6c7a\u4e86\u4e00\u7b46\u756b\u554f\u984c\u3002\u4e00\u822c\u8a8d\u70ba\uff0c\u6b50\u62c9\u7684\u7814\u7a76\u662f\u5716\u8ad6\u7684\u958b\u7aef\u3002</p> <p>\u8207\u4e00\u7b46\u756b\u554f\u984c\u76f8\u5c0d\u61c9\u7684\u4e00\u500b\u5716\u8ad6\u554f\u984c\u662f\u54c8\u5bc6\u9813\u8def\u5f91\u554f\u984c\u3002</p> <p>\u80fd\u5920\u5728\u4e0d\u91cd\u8907\u6298\u8fd4\u7684\u524d\u63d0\u4e0b\u4e00\u7b46\u756b\u5beb\u51fa\u6216\u4e00\u6b21\u8d70\u5b8c\u8a72\u8def\u5f91\u7684\u689d\u4ef6\uff0c\u662f\u6587\u5b57\u3001\u5716\u5f62\u3001\u8def\u5f91\u7684\u5947\u9802\u9ede\u7684\u6578\u76ee\u6b63\u597d\u662f0\u500b\u62162\u500b\u6642\uff0c\u800c\u5982\u679c\u5947\u9802\u9ede\u7684\u6578\u76ee\u5169\u500b\u6642\uff0c\u5fc5\u9808\u6b63\u597d\u70ba\u8d77\u9ede\u6216\u7d42\u9ede\uff0c\u5947\u9802\u9ede\u662f\u6307\u8a72\u9ede\u5ef6\u5c55\u51fa\u5947\u6578\u6578\u76ee\u7684\u65b9\u5411\uff0c\u4f8b\u5982T\u5b57\u8def\u53e3\u5ef6\u5c55\u51fa\u4e09\u689d\u9053\u8def\u65b9\u5411\uff0c\u800c\u7dda\u6bb5\u7684\u7aef\u9ede\u4e5f\u662f\u53ea\u6709\u4e00\u500b\u65b9\u5411\u7684\u5947\u9802\u9ede</p>"},{"location":"%E4%B8%83%E6%A9%8B%E5%95%8F%E9%A1%8C%26%E4%B8%80%E7%AD%86%E7%95%AB%E5%95%8F%E9%A1%8C/#_5","title":"\u554f\u984c\u7684\u63d0\u51fa","text":"<p>\u4e00\u7b46\u756b\u554f\u984c\u662f\u67ef\u5c3c\u65af\u5821\u554f\u984c\u7d93\u62bd\u8c61\u5316\u5f8c\u7684\u63a8\u5ee3\uff0c\u662f\u5716\u904d\u6b77\u554f\u984c\u7684\u4e00\u7a2e\u3002\u5728\u67ef\u5c3c\u65af\u5821\u554f\u984c\u4e2d\uff0c\u5982\u679c\u5c07\u6a4b\u6240\u9023\u63a5\u7684\u5730\u5340\u8996\u70ba\u9ede\uff0c\u5c07\u6bcf\u5ea7\u6a4b\u8996\u70ba\u4e00\u689d\u908a\uff0c\u90a3\u9ebc\u554f\u984c\u5c07\u8b8a\u6210\uff1a\u5c0d\u65bc\u4e00\u500b\u6709\u8457\u56db\u500b\u9802\u9ede\u548c\u4e03\u689d\u908a\u7684\u9023\u901a\u5716 $G(S,E)$\uff0c\u80fd\u5426\u627e\u5230\u4e00\u500b\u6070\u597d\u5305\u542b\u4e86\u6240\u6709\u7684\u908a\uff0c\u4e26\u4e14\u6c92\u6709\u91cd\u8907\u7684\u8def\u5f91\u3002</p> <p>\u6b50\u62c9\u5c07\u9019\u500b\u554f\u984c\u63a8\u5ee3\u70ba\uff1a\u5c0d\u65bc\u4e00\u500b\u7d66\u5b9a\u7684\u5716\uff0c\u600e\u6a23\u5224\u65b7\u662f\u5426\u5b58\u5728\u8457\u4e00\u500b\u6070\u597d\u5305\u542b\u4e86\u6240\u6709\u7684\u908a\uff0c\u4e26\u4e14\u6c92\u6709\u91cd\u8907\u7684\u8def\u5f91\uff1f\u9019\u5c31\u662f\u4e00\u7b46\u756b\u554f\u984c\u3002\u7528\u5716\u8ad6\u7684\u8853\u8a9e\u4f86\u8aaa\uff0c\u5c31\u662f\u5224\u65b7\u9019\u500b\u5716\u662f\u5426\u662f\u4e00\u500b\u80fd\u5920\u904d\u6b77\u5b8c\u6240\u6709\u7684\u908a\u800c\u6c92\u6709\u91cd\u8907\u3002\u9019\u6a23\u7684\u5716\u73fe\u7a31\u70ba\u6b50\u62c9\u5716\u3002\u9019\u6642\u904d\u6b77\u7684\u8def\u5f91\u7a31\u4f5c\u6b50\u62c9\u8def\u5f91\uff08\u4e00\u500b\u74b0\u6216\u8005\u4e00\u689d\u93c8\uff09\uff0c\u5982\u679c\u8def\u5f91\u9589\u5408\uff08\u4e00\u500b\u5708\uff09\uff0c\u5247\u7a31\u70ba\u6b50\u62c9\u8ff4\u8def\u3002</p> <p>\u4e00\u7b46\u756b\u554f\u984c\u7684\u63a8\u5ee3\u662f\u591a\u7b46\u756b\u554f\u984c\uff0c\u5373\u5c0d\u65bc\u4e0d\u80fd\u4e00\u7b46\u756b\u7684\u5716\uff0c\u63a2\u8a0e\u6700\u5c11\u80fd\u7528\u591a\u5c11\u7b46\u4f86\u756b\u6210\u3002</p>"},{"location":"%E4%B8%83%E6%A9%8B%E5%95%8F%E9%A1%8C%26%E4%B8%80%E7%AD%86%E7%95%AB%E5%95%8F%E9%A1%8C/#_6","title":"\u5b9a\u7406\u4e00","text":"<p>\u9023\u901a\u7684\u7121\u5411\u5716 $G$ \u6709\u6b50\u62c9\u8def\u5f91\u7684\u5145\u8981\u689d\u4ef6\u662f\uff1a$G$ \u4e2d\u5947\u9802\u9ede\uff08\u9023\u63a5\u7684\u908a\u6578\u91cf\u70ba\u5947\u6578\u7684\u9802\u9ede\uff09\u7684\u6578\u76ee\u7b49\u65bc 0 \u6216\u8005 2\u3002</p> <p>\u9023\u901a\u7684\u7121\u5411\u5716 $G$ \u662f\u6b50\u62c9\u74b0\uff08\u5b58\u5728\u6b50\u62c9\u8ff4\u8def\uff09\u7684\u5145\u8981\u689d\u4ef6\u662f\uff1a$G$ \u4e2d\u6bcf\u500b\u9802\u9ede\u7684\u5ea6\u90fd\u662f\u5076\u6578\u3002[2]</p>"},{"location":"%E4%B8%83%E6%A9%8B%E5%95%8F%E9%A1%8C%26%E4%B8%80%E7%AD%86%E7%95%AB%E5%95%8F%E9%A1%8C/#_7","title":"\u8b49\u660e\uff1a","text":"<ul> <li> <p>\u5fc5\u8981\u6027\uff1a  \u5982\u679c\u4e00\u500b\u5716\u80fd\u4e00\u7b46\u756b\u6210\uff0c\u90a3\u9ebc\u5c0d\u6bcf\u4e00\u500b\u9802\u9ede\uff0c\u8981\u9ebc\u8def\u5f91\u4e2d\u300c\u9032\u5165\u300d\u9019\u500b\u9ede\u7684\u908a\u6578\u7b49\u65bc\u300c\u96e2\u958b\u300d\u9019\u500b\u9ede\u7684\u908a\u6578\uff1a\u9019\u6642\u9ede\u7684\u5ea6\u70ba\u5076\u6578\u3002\u8981\u9ebc\u5169\u8005\u76f8\u5dee\u4e00\uff1a\u9019\u6642\u9019\u500b\u9ede\u5fc5\u7136\u662f\u8d77\u9ede\u6216\u7d42\u9ede\u4e4b\u4e00\u3002\u6ce8\u610f\u5230\u6709\u8d77\u9ede\u5c31\u5fc5\u7136\u6709\u7d42\u9ede\uff0c\u56e0\u6b64\u5947\u9802\u9ede\u7684\u6578\u76ee\u8981\u9ebc\u662f 0\uff0c\u8981\u9ebc\u662f 2\u3002</p> </li> <li> <p>\u5145\u5206\u6027\uff1a \u5982\u679c\u5716\u4e2d\u6c92\u6709\u5947\u9802\u9ede\uff0c\u90a3\u9ebc\u96a8\u4fbf\u9078\u4e00\u500b\u9ede\u51fa\u767c\uff0c\u9023\u4e00\u500b\u74b0 $C_1$\u3002\u5982\u679c\u9019\u500b\u74b0\u5c31\u662f\u539f\u5716\uff0c\u90a3\u9ebc\u7d50\u675f\u3002\u5982\u679c\u4e0d\u662f\uff0c\u90a3\u9ebc\u7531\u65bc\u539f\u5716\u662f\u9023\u901a\u7684\uff0c$C_1$ \u548c\u539f\u5716\u7684\u5176\u5b83\u90e8\u5206\u5fc5\u7136\u6709\u516c\u5171\u9802\u9ede $s_1$\u3002\u5f9e\u9019\u4e00\u9ede\u51fa\u767c\uff0c\u5728\u539f\u5716\u7684\u5269\u9918\u90e8\u5206\u4e2d\u91cd\u8907\u4e0a\u8ff0\u6b65\u9a5f\u3002\u7531\u65bc\u539f\u5716\u662f\u9023\u901a\u5716\uff0c\u7d93\u904e\u82e5\u5e72\u6b65\u5f8c\uff0c\u5168\u5716\u88ab\u5206\u70ba\u4e00\u4e9b\u74b0\u3002\u7531\u65bc\u5169\u500b\u76f8\u9023\u7684\u74b0\u5c31\u662f\u4e00\u500b\u74b0\uff0c\u539f\u4f86\u7684\u5716\u4e5f\u5c31\u662f\u4e00\u500b\u6b50\u62c9\u74b0\u4e86\u3002</p> </li> </ul> <p>\u5982\u679c\u5716\u4e2d\u6709\u5169\u500b\u5947\u9802\u9ede $u$ \u548c $v$\uff0c\u90a3\u9ebc\u52a0\u591a\u4e00\u689d\u908a\u5c07\u5b83\u5011\u9023\u4e0a\u5f8c\u5f97\u5230\u4e00\u500b\u7121\u5947\u9802\u9ede\u7684\u9023\u901a\u5716\u3002\u7531\u4e0a\u77e5\u9019\u500b\u5716\u662f\u4e00\u500b\u74b0\uff0c\u56e0\u6b64\u53bb\u6389\u65b0\u52a0\u7684\u908a\u5f8c\u6210\u70ba\u4e00\u689d\u8def\u5f91\uff0c\u8d77\u9ede\u548c\u7d42\u9ede\u662f $u$ \u548c $v$\u3002\u8b49\u7562\u3002</p> <p>\u9023\u901a\u7121\u5411\u5716\u6709\u6b50\u62c9\u8def\u5f91\u7684\u5145\u8981\u689d\u4ef6\u4e5f\u53ef\u4ee5\u5beb\u4f5c\u300c\u5716\u4e2d\u5947\u9802\u9ede\u6578\u76ee\u4e0d\u591a\u65bc 2 \u500b\u300d\uff0c\u9019\u662f\u56e0\u70ba\u5947\u9802\u9ede\u6578\u76ee\u4e0d\u53ef\u80fd\u662f 1 \u500b\u3002\u5be6\u969b\u4e0a\uff0c\u9023\u901a\u7121\u5411\u5716\u4e2d\uff0c\u5947\u9802\u9ede\u7684\u6578\u76ee\u7e3d\u662f\u5076\u6578\u3002</p> <p>\u5c0d\u65bc\u4e0d\u9023\u901a\u7684\u7121\u5411\u5716\uff0c\u5982\u679c\u6709\u5169\u500b\u4e92\u4e0d\u9023\u901a\u7684\u90e8\u5206\u90fd\u5305\u542b\u81f3\u5c11\u4e00\u689d\u908a\uff0c\u90a3\u9ebc\u986f\u7136\u4e0d\u80fd\u4e00\u7b46\u756b\u3002\u53ea\u6709\u7576\u6b64\u5716\u7684\u908a\u5168\u90fd\u5728\u67d0\u4e00\u500b\u9023\u901a\u90e8\u5206\u4e2d\uff08\u5373\u5176\u5b83\u7684\u9023\u901a\u90e8\u5206\u90fd\u662f\u4e00\u500b\u500b\u5b64\u7acb\u7684\u9802\u9ede\uff0c\u5ea6\u6578\u70ba 0\uff09\uff0c\u4e26\u6eff\u8db3\u9023\u901a\u7121\u5411\u5716\u95dc\u65bc\u4e00\u7b46\u756b\u7684\u5145\u8981\u689d\u4ef6\uff0c\u800c\u8a72\u5716\u624d\u80fd\u4e00\u7b46\u756b\u3002\u4e5f\u5373\u662f\u8aaa\uff0c\u53ef\u4ee5\u4e00\u7b46\u756b\u7684\uff08\u7121\u5411\uff09\u5716\u5982\u679c\u4e0d\u662f\u9023\u901a\u5716\uff0c\u5c31\u5fc5\u5b9a\u662f\u4e00\u500b\u53ef\u4ee5\u4e00\u7b46\u756b\u7684\u9023\u901a\u5716\u8207\u82e5\u5e72\u500b\u5b64\u7acb\u9802\u9ede\u7684\u7d44\u5408\u3002</p> <p>\u9664\u4e86\u7528\u9802\u9ede\u7684\u5ea6\u6578\u4f5c\u70ba\u5224\u5b9a\u7684\u5145\u8981\u689d\u4ef6\uff0c\u9084\u53ef\u4ee5\u7528\u5716\u4e2d\u908a\u7684\u7279\u6027\u4f86\u4f5c\u70ba\u6b50\u62c9\u8ff4\u8def\u5b58\u5728\u7684\u5224\u5b9a\u6e96\u5247\u3002\u9023\u901a\u7684\u7121\u5411\u5716 $G$ \u4e2d\u5b58\u5728\u6b50\u62c9\u8ff4\u8def\uff0c\u7b49\u50f9\u65bc\u5716 $G$ \u6240\u6709\u7684\u908a\u53ef\u4ee5\u5283\u5206\u70ba\u82e5\u5e72\u500b\u74b0\u7684\u4e0d\u4ea4\u4e26\u3002\u5177\u9ad4\u4f86\u8aaa\uff0c\u7b49\u50f9\u65bc\u5b58\u5728\u4e00\u7cfb\u5217\u7684\u74b0 $C_1, C_2, \\cdots, C_m$\uff0c\u4f7f\u5f97\u5716 $G$ \u91cc\u7684\u6bcf\u4e00\u689d\u908a\u90fd\u6070\u597d\u5c6c\u65bc\u67d0\u4e00\u500b\u74b0\u3002</p>"},{"location":"%E4%B8%83%E6%A9%8B%E5%95%8F%E9%A1%8C%26%E4%B8%80%E7%AD%86%E7%95%AB%E5%95%8F%E9%A1%8C/#_8","title":"\u5b9a\u7406\u4e8c","text":"<p>\u5982\u679c\u9023\u901a\u7121\u5411\u5716 $G$ \u6709 $2k$ \u500b\u5947\u9802\u9ede\uff0c\u90a3\u9ebc\u5b83\u53ef\u4ee5\u7528 $k$ \u7b46\u756b\u6210\uff0c\u4e26\u4e14\u81f3\u5c11\u8981\u7528 $k$ \u7b46\u756b\u6210\u3002[2]</p>"},{"location":"%E4%B8%83%E6%A9%8B%E5%95%8F%E9%A1%8C%26%E4%B8%80%E7%AD%86%E7%95%AB%E5%95%8F%E9%A1%8C/#_9","title":"\u8b49\u660e\uff1a","text":"<p>\u5c07\u9019 $2k$ \u500b\u5947\u9802\u9ede\u5206\u6210 $k$ \u5c0d\u5f8c\u5206\u5225\u9023\u8d77\uff0c\u5247\u5f97\u5230\u4e00\u500b\u7121\u5947\u9802\u9ede\u7684\u9023\u901a\u5716\u3002\u7531\u4e0a\u77e5\u9019\u500b\u5716\u662f\u4e00\u500b\u74b0\uff0c\u56e0\u6b64\u53bb\u6389\u65b0\u52a0\u7684\u908a\u5f8c\u81f3\u591a\u6210\u70ba $k$ \u689d\u6b50\u62c9\u8def\u5f91\uff0c\u56e0\u6b64\u5fc5\u7136\u53ef\u4ee5\u7528 $k$ \u7b46\u756b\u6210\u3002\u4f46\u662f\u5047\u8a2d\u5168\u5716\u53ef\u4ee5\u5206\u70ba $q$ \u689d\u6b50\u62c9\u8def\u5f91\uff0c\u5247\u7531\u5b9a\u7406\u4e00\u77e5\uff0c\u6bcf\u689d\u93c8\u4e2d\u53ea\u6709\u4e0d\u591a\u65bc\u5169\u500b\u5947\u9802\u9ede\uff0c\u65bc\u662f $2q \\geq 2k$\u3002\u56e0\u6b64\u5fc5\u5b9a\u8981 $k$ \u7b46\u756b\u6210\u3002</p> <p>\u6709\u5411\u5716\u7684\u4e00\u7b46\u756b \u5c0d\u6709\u5411\u5716\u4f86\u8aaa\uff0c\u4e00\u7b46\u756b\u4e0d\u50c5\u6307\u904d\u6b77\u6240\u6709\u908a\uff0c\u800c\u4e14\u8981\u9075\u5faa\u6b63\u78ba\u7684\u65b9\u5411\u3002\u56b4\u8b39\u5730\u8aaa\uff0c\u4e00\u500b\u9023\u901a\u6709\u5411\u5716 $G$ \u6709\u6b50\u62c9\u8def\u5f91\uff0c\u6307\u5b58\u5728\u4e00\u500b\u9802\u9ede\uff0c\u5f9e\u5b83\u51fa\u767c\uff0c\u6cbf\u8457\u6709\u5411\u908a\u7684\u65b9\u5411\uff0c\u53ef\u4ee5\u4e0d\u91cd\u8907\u5730\u904d\u6b77\u5716\u4e2d\u6240\u6709\u7684\u908a\u3002\u6709\u5411\u5716\u7684\u6b50\u62c9\u8ff4\u8def\u5247\u662f\u6307\u53ef\u4ee5\u5f9e\u67d0\u4e00\u9802\u9ede\u958b\u59cb\uff0c\u6cbf\u6709\u5411\u908a\u7684\u65b9\u5411\u4e0d\u91cd\u8907\u5730\u904d\u6b77\u6240\u6709\u908a\uff0c\u7136\u5f8c\u56de\u5230\u539f\u4f86\u51fa\u767c\u7684\u9802\u9ede\u3002\u7528\u985e\u4f3c\u65bc\u5b9a\u7406\u4e00\u4e2d\u8b49\u660e\u7684\u601d\u8def\uff0c\u53ef\u4ee5\u5f97\u5230\u6709\u5411\u5716\u4e00\u7b46\u756b\u7684\u5224\u5b9a\u6e96\u5247\uff1a</p> <p>\u4e00\u500b\u9023\u901a\u7684\u6709\u5411\u5716\u53ef\u4ee5\u8868\u793a\u70ba\u4e00\u689d\u5f9e\u9802\u9ede $u$ \u5230 $v$ \u7684\uff08\u4e0d\u9589\u5408\u7684\uff09\u6b50\u62c9\u8def\u5f91\u7684\u5145\u8981\u689d\u4ef6\u662f\uff1a $u$ \u7684\u51fa\u5ea6\uff08\u5f9e\u9019\u500b\u9802\u9ede\u767c\u51fa\u7684\u6709\u5411\u908a\u7684\u6578\u91cf\uff09\u6bd4\u5165\u5ea6\uff08\u6307\u5411\u9019\u500b\u9802\u9ede\u7684\u6709\u5411\u908a\u7684\u6578\u91cf\uff09\u591a 1\uff0c $v$ \u7684\u51fa\u5ea6\u6bd4\u5165\u5ea6\u5c11 1\uff0c\u800c\u5176\u5b83\u9802\u9ede\u7684\u51fa\u5ea6\u548c\u5165\u5ea6\u90fd\u76f8\u7b49\u3002</p> <p>\u4e00\u500b\u9023\u901a\u7684\u6709\u5411\u5716\u662f\u6b50\u62c9\u74b0\uff08\u5b58\u5728\u6b50\u62c9\u8ff4\u8def\uff09\u7684\u5145\u8981\u689d\u4ef6\u662f\u4ee5\u4e0b\u5169\u500b\u4e4b\u4e00\uff1a - \u6bcf\u500b\u9802\u9ede\u7684\u51fa\u5ea6\u548c\u5165\u5ea6\u90fd\u76f8\u7b49\uff1b - \u5b58\u5728\u4e00\u7cfb\u5217\u7684\uff08\u6709\u5411\uff09\u74b0 $C_1, C_2, \\cdots, C_m$\uff0c\u4f7f\u5f97\u5716 $G$ \u91cc\u7684\u6bcf\u4e00\u689d\u908a\u90fd\u6070\u597d\u5c6c\u65bc\u67d0\u4e00\u500b\u74b0\u3002</p>"},{"location":"%E4%BD%8D%E5%85%83%E9%81%8B%E7%AE%97/","title":"\u4e8c\u9032\u5236","text":"<p>int \u662f32\u4f4d\u5143\u6709\u865f\u6574\u6578\uff0c2147483647(\u6700\u5927\u503c)\u8868\u793a\u5982\u4e0b</p> \u7de8\u865f 32(\u7b26\u865f\u4f4d) 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 \u4e8c\u9032\u5236\u6578\u5b57 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 <p>\u7b2c32\u4f4d\u70ba0\uff0c\u56e0\u70ba\u5b83\u4ee3\u8868\u7b26\u865f\u3002\u6240\u4ee5int\u53ef\u4ee5\u5132\u5b58\u7684\u6578\u5b57\u4e0a\u9650\u70ba2^31-1</p> <p>\u65e2\u7136\u8b1b\u5230\u7b26\u865f\u4f4d\uff0c\u90a3\u5c31\u4f86\u8b1b\u8b1b\u3002</p>"},{"location":"%E4%BD%8D%E5%85%83%E9%81%8B%E7%AE%97/#_2","title":"\u7b26\u865f","text":"<p>\u5df2\u7d93\u77e5\u90532147483647(\u6700\u5927\u503c)\u4e8c\u9032\u5236\u8868\u793a\u6cd5\uff0c\u90a3\u8ca0\u6578\u5982\u4f55\u8868\u793a\u5462\uff1f \u5728\u6b64\u4e4b\u524d\u6211\u5011\u9700\u8981\u5148\u77e5\u9053\u5982\u4f55\u6b63\u8ca0\u6578\u8f49\u63db</p> <p>\u6211\u5011\u5148\u64cd\u4f5c\u5982\u4f55\u5c075\u8b8a\u6210-5\uff0c\u4ee58\u4f4d\u5143\u70ba\u4f8b</p> <p>\u4e00\u30015\u7684\u4e8c\u9032\u5236</p> \u7de8\u865f 8(\u7b26\u865f\u4f4d) 7 6 5 4 3 2 1 \u4e8c\u9032\u5236\u6578\u5b57 0 0 0 0 0 1 0 1 <p>\u4e8c\u3001\u53d6\u53cd\u6240\u6709\u4f4d\u5143(~\u904b\u7b97)  (\u73fe\u5728\u6578\u5b57\u662f-6</p> \u7de8\u865f 8(\u7b26\u865f\u4f4d) 7 6 5 4 3 2 1 \u4e8c\u9032\u5236\u6578\u5b57 1 1 1 1 1 0 1 0 <p>\u4e09\u3001\u52a01  (\u73fe\u5728\u6578\u5b57\u662f-5</p> \u7de8\u865f 8(\u7b26\u865f\u4f4d) 7 6 5 4 3 2 1 \u4e8c\u9032\u5236\u6578\u5b57 1 1 1 1 1 0 1 1 <p>\u9019\u6a23\u5c31\u5b8c\u6210\u4e865\u8b8a\u6210-5</p> <p>\u70ba\u751a\u9ebc\u8981\u9019\u6a23\u505a\u5462\uff1f\u6211\u5011\u4f86\u770b\u770bGPT\u600e\u9ebc\u8aaa~</p>"},{"location":"%E4%BD%8D%E5%85%83%E9%81%8B%E7%AE%97/#gpt","title":"GPT\u56de\u7b54","text":"<p>\u9019\u662f\u4e00\u500b\u975e\u5e38\u597d\u7684\u554f\u984c\uff0c\u6d89\u53ca\u5230\u4e8c\u88dc\u6578\uff08two's complement\uff09\u7cfb\u7d71\u4e2d\u8ca0\u6578\u8868\u793a\u7684\u6839\u672c\u539f\u56e0\u3002\u4e8c\u88dc\u6578\u7cfb\u7d71\u4e4b\u6240\u4ee5\u9019\u9ebc\u8a2d\u8a08\uff0c\u662f\u70ba\u4e86\u7c21\u5316\u4e8c\u9032\u4f4d\u6578\u5b57\u7684\u52a0\u6e1b\u904b\u7b97\u3002</p>"},{"location":"%E4%BD%8D%E5%85%83%E9%81%8B%E7%AE%97/#1","title":"\u7b26\u865f\u4f4d\u8b8a\u62101\u7684\u9650\u5236","text":"<p>\u5047\u8a2d\u6211\u5011\u53ea\u6539\u8b8a\u7b26\u865f\u4f4d\u4f86\u8868\u793a\u8ca0\u6578\uff0c\u4f8b\u5982 <code>5</code> \u7684\u4e8c\u9032\u4f4d\u662f <code>00000101</code>\uff0c\u5c07\u7b26\u865f\u4f4d\u8b8a\u6210 <code>1</code> \u5f97\u5230 <code>10000101</code>\uff0c\u9019\u6a23\u7684\u8868\u793a\u6cd5\u5b58\u5728\u4e00\u4e9b\u554f\u984c\uff1a</p> <ol> <li>\u7b26\u865f\u4f4d\u55ae\u7368\u8b8a\u66f4\u4e0d\u662f\u552f\u4e00\u7684\u8ca0\u6578\u8868\u793a\u65b9\u6cd5\uff1a</li> <li> <p>\u5982\u679c\u6211\u5011\u53ea\u6539\u8b8a\u7b26\u865f\u4f4d\uff0c\u6703\u7522\u751f\u5169\u500b\u96f6\u7684\u8868\u793a\uff1a<code>00000000</code> \u548c <code>10000000</code>\u3002\u9019\u6a23\u6709\u5169\u500b\u96f6\u7684\u8868\u793a\u662f\u5f88\u4e0d\u65b9\u4fbf\u7684\uff0c\u4e26\u4e14\u6703\u5e36\u4f86\u8a08\u7b97\u4e0a\u7684\u6df7\u4e82\u3002</p> </li> <li> <p>\u7c21\u5316\u8a08\u7b97\uff1a</p> </li> <li>\u4e8c\u88dc\u6578\u7cfb\u7d71\u7684\u6700\u5927\u512a\u9ede\u662f\u5b83\u7c21\u5316\u4e86\u52a0\u6e1b\u6cd5\u904b\u7b97\u3002\u5728\u4e8c\u88dc\u6578\u7cfb\u7d71\u4e2d\uff0c\u52a0\u6cd5\u548c\u6e1b\u6cd5\u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u7684\u786c\u9ad4\u96fb\u8def\u4f86\u5b8c\u6210\uff0c\u800c\u4e0d\u9700\u8981\u7279\u5225\u8655\u7406\u7b26\u865f\u4f4d\u3002 </li> </ol>"},{"location":"%E4%BD%8D%E5%85%83%E9%81%8B%E7%AE%97/#_3","title":"\u4e8c\u88dc\u6578\u7cfb\u7d71(\u8868\u793a\u6709\u7b26\u865f\u6574\u6578\u7684\u65b9\u6cd5)\u7684\u512a\u9ede","text":"<ol> <li>\u552f\u4e00\u7684\u96f6\u8868\u793a\uff1a</li> <li> <p>\u5728\u4e8c\u88dc\u6578\u7cfb\u7d71\u4e2d\uff0c\u96f6\u53ea\u6709\u4e00\u7a2e\u8868\u793a\uff0c\u5373 <code>00000000</code>\u3002</p> </li> <li> <p>\u7c21\u5316\u52a0\u6e1b\u904b\u7b97\uff1a</p> </li> <li>\u5728\u4e8c\u88dc\u6578\u7cfb\u7d71\u4e2d\uff0c\u52a0\u6cd5\u548c\u6e1b\u6cd5\u90fd\u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u7684\u786c\u9ad4\u96fb\u8def\u4f86\u5b8c\u6210\u3002\u4f8b\u5982\uff0c<code>5 - 3</code> \u53ef\u4ee5\u8f49\u5316\u70ba <code>5 + (-3)</code>\u3002</li> </ol>"},{"location":"%E4%BD%8D%E5%85%83%E9%81%8B%E7%AE%97/#5","title":"\u5982\u4f55\u5c07\u6b63\u6578\u8f49\u63db\u70ba\u8ca0\u6578\uff08\u4ee5 <code>5</code> \u70ba\u4f8b\uff09","text":"<ol> <li>\u4e8c\u9032\u4f4d\u8868\u793a\uff1a</li> <li> <p><code>5</code> \u7684\u4e8c\u9032\u4f4d\u8868\u793a\u662f <code>00000101</code>\u3002</p> </li> <li> <p>\u53d6\u53cd\uff1a</p> </li> <li> <p>\u5c0d <code>5</code> \u53d6\u53cd\u5f97\u5230 <code>11111010</code>\u3002</p> </li> <li> <p>\u52a01\uff1a</p> </li> <li>\u5c07 <code>11111010</code> \u52a0 1\uff0c\u5f97\u5230 <code>11111011</code>\uff0c\u9019\u5c31\u662f <code>-5</code> \u7684\u4e8c\u88dc\u6578\u8868\u793a\u3002</li> </ol>"},{"location":"%E4%BD%8D%E5%85%83%E9%81%8B%E7%AE%97/#_4","title":"\u76f4\u63a5\u6539\u8b8a\u7b26\u865f\u4f4d\u7684\u554f\u984c","text":"<p>\u5982\u679c\u6211\u5011\u53ea\u6539\u8b8a\u7b26\u865f\u4f4d\uff0c\u4f86\u770b\u770b <code>5</code> \u7684\u4f8b\u5b50\uff1a</p> <ol> <li>\u539f\u59cb\u8868\u793a\uff1a</li> <li> <p><code>00000101</code>\uff085\uff09</p> </li> <li> <p>\u6539\u8b8a\u7b26\u865f\u4f4d\uff1a</p> </li> <li><code>10000101</code>\uff08\u5982\u679c\u53ea\u6539\u8b8a\u7b26\u865f\u4f4d\uff09</li> </ol> <p>\u9019\u6a23\u7684\u8868\u793a\u6cd5\u6703\u5e36\u4f86\u4e0a\u8ff0\u63d0\u5230\u7684\u554f\u984c\u3002\u70ba\u4e86\u89e3\u6c7a\u9019\u4e9b\u554f\u984c\uff0c\u6211\u5011\u4f7f\u7528\u4e8c\u88dc\u6578\u7cfb\u7d71\u3002</p>"},{"location":"%E4%BD%8D%E5%85%83%E9%81%8B%E7%AE%97/#_5","title":"\u7d50\u8ad6","text":"<p>\u901a\u904e\u4e8c\u88dc\u6578\u7cfb\u7d71\uff0c\u6211\u5011\u80fd\u5920\u66f4\u9ad8\u6548\u5730\u9032\u884c\u52a0\u6e1b\u904b\u7b97\uff0c\u4e26\u4e14\u907f\u514d\u4e86\u591a\u91cd\u96f6\u8868\u793a\u7684\u554f\u984c\u3002\u9019\u5c31\u662f\u70ba\u4ec0\u9ebc\u5728\u8a08\u7b97\u6a5f\u79d1\u5b78\u4e2d\uff0c\u6211\u5011\u63a1\u7528\u4e8c\u88dc\u6578\u7cfb\u7d71\u4f86\u8868\u793a\u6709\u7b26\u865f\u7684\u6574\u6578\u3002</p> <p>\u5e0c\u671b\u9019\u500b\u89e3\u91cb\u5c0d\u4f60\u6709\u6240\u5e6b\u52a9\u3002\u5982\u679c\u4f60\u6709\u5176\u4ed6\u554f\u984c\u6216\u9700\u8981\u9032\u4e00\u6b65\u7684\u6f84\u6e05\uff0c\u8acb\u96a8\u6642\u544a\u8a34\u6211\uff01 </p>"},{"location":"%E4%BD%8D%E5%85%83%E9%81%8B%E7%AE%97/#overflow","title":"\u4f4d\u5143\u6ea2\u51fa\uff08overflow\uff09","text":"<p>\u6211\u5011\u5728\u505a\u52a0\u6e1b\u6cd5\u6642\uff0c\u96fb\u8166\u662f\u4f7f\u7528\u4f4d\u5143\u904b\u7b97 \u7576\u6211\u5011\u8981\u505a5+1\u6642(\u4ee58\u4f4d\u5143\u7684\u8a71)\uff0c\u96fb\u8166\u5c31\u662f\u628a00000101 + 00000001 \u5c31\u6703\u8b8a\u621000000102\uff0c\u4e5f\u5c31\u662f00000110\uff0c\u8b8a\u62106</p> <p>\u90a3\u5982\u679c\u6211\u5011\u9047\u5230 -1 + 1 = 0 \u6642\u96fb\u8166\u6703\u5982\u4f55\u8655\u88e1\u5462\uff1f\u4ee58\u4f4d\u5143\u70ba\u4f8b</p> <p>\u4e00\u3001 -1 \u7684\u4e8c\u9032\u5236</p> \u7de8\u865f 8(\u7b26\u865f\u4f4d) 7 6 5 4 3 2 1 \u4e8c\u9032\u5236\u6578\u5b57 1 1 1 1 1 1 1 1 <p>\u4e8c\u3001 -1+1(\u9032\u4f4d)</p> \u7de8\u865f 9(\u865b\u69cb) 8(\u7b26\u865f\u4f4d) 7 6 5 4 3 2 1 \u4e8c\u9032\u5236\u6578\u5b57 1 0 0 0 0 0 0 0 0 <p>\u4e09\u3001\u6ea2\u51fa\u7684\u4e26\u4e0d\u6703\u5132\u5b58\uff0c\u4fbf\u76f4\u63a5\u522a\u9664\u8b8a\u62100 </p> \u7de8\u865f 8(\u7b26\u865f\u4f4d) 7 6 5 4 3 2 1 \u4e8c\u9032\u5236\u6578\u5b57 0 0 0 0 0 0 0 0 <p>\u9019\u662f\u57fa\u672c\u7684\u6ea2\u51fa\u8655\u7406\u65b9\u5f0f\uff0c\u90a3\u70ba\u751a\u9ebc\u8d85\u904e int \u4e0a\u9650 2147483647 \u6703\u7a31\u70ba\u4f4d\u5143\u6ea2\u51fa\uff08overflow\uff09\u5462\uff1f</p> <p>\u6211\u5011\u90fd\u77e5\u9053int n=2147483647\uff0c\u82e5 +1 \u63db\u8b8a\u6210-2147483648 \u6211\u5011\u4f86\u770b\u770b\u904e\u7a0b</p> <p>\u4e00\u3001 2147483647 \u7684\u4e8c\u9032\u5236</p> \u7de8\u865f 32(\u7b26\u865f\u4f4d) 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 \u4e8c\u9032\u5236\u6578\u5b57 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 <p>\u4e8c\u3001 2147483647+1</p> \u7de8\u865f 32(\u7b26\u865f\u4f4d) 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 \u4e8c\u9032\u5236\u6578\u5b57 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 <p>\u53ef\u4ee5\u767c\u73fe\u4ed6\u7684\u7b26\u865f\u4f4d\u8b8a\u62101\u4e86\uff0c\u300c\u6ea2\u51fa\u300d\u4e86\u6578\u5b57\u4f4d\uff0c\u8b8a\u6210 -2147483648 \uff0c\u6240\u4ee5\u7a31\u70ba\u4f4d\u5143\u6ea2\u51fa\uff08overflow\uff09\uff0c\u7121\u6cd5\u5f97\u5230\u9810\u60f3\u4e2d\u7684 2147483648</p>"},{"location":"%E4%BD%8D%E5%85%83%E9%81%8B%E7%AE%97/#_6","title":"\u4f4d\u5143\u57fa\u672c\u64cd\u4f5c","text":""},{"location":"%E4%BD%8D%E5%85%83%E9%81%8B%E7%AE%97/#_7","title":"&amp;(\u8207)","text":"<p>\u90fd\u6709\u624d\u6709</p> <p>\u5c07\u5169\u500b\u6578\u5b57\u7684\u4e8c\u9032\u4f4d\u8868\u793a\u5f62\u5f0f\u4e2d\u7684\u6bcf\u4e00\u4f4d\u9032\u884c\u300c\u8207\u300d\u904b\u7b97\uff0c\u53ea\u6709\u7576\u5169\u500b\u5c0d\u61c9\u4f4d\u90fd\u662f1\u6642\uff0c\u7d50\u679c\u624d\u70ba1\uff0c\u5426\u5247\u70ba0\u3002 <pre><code>int a = 5; // 0101\nint b = 3; // 0011\nint result = a &amp; b; // 0001 -&gt; 1\n</code></pre></p>"},{"location":"%E4%BD%8D%E5%85%83%E9%81%8B%E7%AE%97/#_8","title":"|(\u6216)","text":"<p>\u5176\u4e00\u6709\u5c31\u6709</p> <p>\u5c07\u5169\u500b\u6578\u5b57\u7684\u4e8c\u9032\u4f4d\u8868\u793a\u5f62\u5f0f\u4e2d\u7684\u6bcf\u4e00\u4f4d\u9032\u884c\u300c\u6216\u300d\u904b\u7b97\uff0c\u53ea\u8981\u5169\u500b\u5c0d\u61c9\u4f4d\u4e2d\u6709\u4e00\u500b\u662f1\uff0c\u7d50\u679c\u5c31\u70ba1\u3002</p> <pre><code>int a = 5; // 0101\nint b = 3; // 0011\nint result = a | b; // 0111 -&gt; 7\n</code></pre>"},{"location":"%E4%BD%8D%E5%85%83%E9%81%8B%E7%AE%97/#_9","title":"^(\u7570\u6216)","text":"<p>\u4e0d\u540c\u624d\u6709</p> <p>\u5c07\u5169\u500b\u6578\u5b57\u7684\u4e8c\u9032\u4f4d\u8868\u793a\u5f62\u5f0f\u4e2d\u7684\u6bcf\u4e00\u4f4d\u9032\u884c\u300c\u7570\u6216\u300d\u904b\u7b97\uff0c\u7576\u5169\u500b\u5c0d\u61c9\u4f4d\u4e0d\u540c\u6642\uff0c\u7d50\u679c\u70ba1\uff0c\u76f8\u540c\u6642\u7d50\u679c\u70ba0\u3002</p> <pre><code>int a = 5; // 0101\nint b = 3; // 0011\nint result = a ^ b; // 0110 -&gt; 6\n</code></pre>"},{"location":"%E4%BD%8D%E5%85%83%E9%81%8B%E7%AE%97/#_10","title":"~(\u53cd)","text":"<p>\u9020\u53cd</p> <p>\u5c07\u6578\u5b57\u7684\u6bcf\u4e00\u4f4d\u9032\u884c\u53d6\u53cd\u64cd\u4f5c\uff0c0\u8b8a\u70ba1\uff0c1\u8b8a\u70ba0\u3002 <pre><code>int a = 5; // 0101\nint result = ~a; // 1010 -&gt; -6 (\u56e0\u70ba\u6709\u7b26\u865f\u4f4d\u5143\uff0c\u9019\u88e1\u986f\u793a\u7684\u662f\u88dc\u78bc)\n</code></pre></p>"},{"location":"%E4%BD%8D%E5%85%83%E9%81%8B%E7%AE%97/#_11","title":"&lt;&lt;(\u5de6\u79fb)","text":"<p>\u5168\u90e8\u5de6\u79fb</p> <p>\u5c07\u6578\u5b57\u7684\u4e8c\u9032\u4f4d\u8868\u793a\u5f62\u5f0f\u4e2d\u7684\u6240\u6709\u4f4d\u5411\u5de6\u79fb\u52d5\u6307\u5b9a\u7684\u4f4d\u6578\uff0c\u53f3\u5074\u88dc0\u3002\u9019\u76f8\u7576\u65bc\u6578\u5b57\u4e58\u4ee52\u7684\u6307\u5b9a\u6b21\u65b9\u3002</p> <pre><code>int a = 5; // 0101\nint result = a &lt;&lt; 1; // 1010 -&gt; 10\n</code></pre>"},{"location":"%E4%BD%8D%E5%85%83%E9%81%8B%E7%AE%97/#_12","title":"&gt;&gt;(\u53f3\u79fb)","text":"<p>\u5168\u90e8\u53f3\u79fb</p> <p>\u5c07\u6578\u5b57\u7684\u4e8c\u9032\u4f4d\u8868\u793a\u5f62\u5f0f\u4e2d\u7684\u6240\u6709\u4f4d\u5411\u53f3\u79fb\u52d5\u6307\u5b9a\u7684\u4f4d\u6578\uff0c\u5de6\u5074\u6839\u64da\u6578\u5b57\u662f\u5426\u6709\u7b26\u865f\u9032\u884c\u88dc\u4f4d\u3002\u9019\u76f8\u7576\u65bc\u6578\u5b57\u9664\u4ee52\u7684\u6307\u5b9a\u6b21\u65b9\u3002</p> <pre><code>int a = 5; // 0101\nint result = a &gt;&gt; 1; // 0010 -&gt; 2\n</code></pre>"},{"location":"%E4%BD%8D%E5%85%83%E9%81%8B%E7%AE%97/#_13","title":"\u6ce8\u610f\u4e8b\u9805\uff1a&lt;&lt;(\u5de6\u79fb)","text":"<p>\u5148\u770b\u5230\u4ee5\u4e0b\u7a0b\u5f0f\u78bc <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nint main(){\n    long long n=1&lt;&lt;31;\n    cout&lt;&lt;n;\n}\n</code></pre> \u8f38\u51fa <pre><code>-2147483648\n</code></pre></p> <p>\u9019\u6642\u6703\u6709\u500b\u7591\u554f\uff0c\u70ba\u4f55\u6703\u6ea2\u4f4d\u5462\uff1f</p> <p>\u56e0\u70ba\u300clong long n=1&lt;&lt;31;\u300d\u88e1\u9762\u7684\u300c1\u300d\u8cc7\u6599\u578b\u614b\u70baint</p> <p>\u6b63\u78ba\u5beb\u6cd5\uff1a</p> <p>\u4e00\u3001 <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;int main(){\n    long long n=((long long)1)&lt;&lt;35;\n    cout&lt;&lt;n;\n}\n</code></pre> \u4e8c\u3001</p> <p><pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nint main(){\n    long long n=1;\n    n=n&lt;&lt;35;\n    cout&lt;&lt;n;\n}\n</code></pre> \u8f38\u51fa\uff1a <pre><code>34359738368\n</code></pre></p>"},{"location":"%E4%BD%8D%E5%85%83%E9%81%8B%E7%AE%97/#_14","title":"\u628a\u4f4d\u5143\u7576\u4f5c\u9663\u5217\u7684\u64cd\u4f5c","text":"<p>From 2024 IONC</p> <pre><code>// \u67e5\u8a62\u7b2ci\u500b\u5143\u7d20\u662f\u5426\u5728\u96c6\u5408s\u4e2d\nbool inSet(int i, int s) { return (s &gt;&gt; i) &amp; 1; }\n\n// \u5c07\u7b2ci\u500b\u5143\u7d20\u52a0\u5165\u96c6\u5408\u4e2d\nvoid ins(int i, int &amp;s) { s |= (1 &lt;&lt; i); }\n\n// \u5c07\u7b2ci\u500b\u5143\u7d20\u79fb\u9664\u96c6\u5408\nvoid rm(int i, int &amp;s) { s &amp;= ~(1 &lt;&lt; i); }\n\n// \u53d6\u5169\u96c6\u5408s1, s2\u4ea4\u96c6\nint inter(int s1, int s2) { return s1 &amp; s2; }\n\n// \u53d6\u5169\u96c6\u5408s1, s2\u806f\u96c6\nint uni(int s1, int s2) { return s1 | s2; }\n\n// \u53d6\u96c6\u5408s\u7684\u88dc\u96c6\nint comp(int s) { return ~s; }\n</code></pre>"},{"location":"%E4%BD%BF%E7%94%A8vscode%E6%92%B0%E5%AF%ABc%2B%2B/","title":"\u4f7f\u7528vscode\u64b0\u5bebc++","text":""},{"location":"%E4%BD%BF%E7%94%A8vscode%E6%92%B0%E5%AF%ABc%2B%2B/#mingw","title":"mingw\u8a2d\u7f6e","text":"<p>\u8cc7\u6599\u4f86\u6e90\uff1a 1.https://ithelp.ithome.com.tw/articles/10190235 2.https://blog.yangjerry.tw/2021/09/24/vscode-cpp-2021-part1/</p> <p>\u4e0b\u8f09\u7db2\u5740\uff0c\u6309\u7da0\u8272\u90a3\u500b https://sourceforge.net/projects/mingw/files/ </p> <p>\u5b89\u88dd\u5b8c\u5f8c\u6703\u8df3\u51fa\u8996\u7a97\u9078\u64c7\u8981\u5b89\u88dd\u7684\u5957\u4ef6\uff0c\u9019\u88e1\u9078\u64c7 base \u548c g++\uff0c\u9078\u597d\u5f8c\u9ede\u5de6\u4e0a\u89d2\u7684 Installation \u9078 Apply Change \u958b\u59cb\u5b89\u88dd\u3002  \u5b89\u88dd\u5b8c\u5f8c\u8981\u5c07 MinGW \u7684\u5b89\u88dd\u8def\u5f91 C:\\MinGW\\bin (\u81ea\u5df1\u7684\u4f4d\u7f6e)\u52a0\u5165\u7cfb\u7d71\u74b0\u5883\u8b8a\u6578\u3002 \u6211\u7684\u96fb\u8166 -&gt; \u53f3\u9375\u5167\u5bb9 -&gt; \u5de6\u908a\u9078\u55ae \u9032\u968e\u7cfb\u7d71\u8a2d\u5b9a -&gt; \u9032\u968e \u74b0\u5883\u8b8a\u6578\u3002  \u5b8c\u6210</p>"},{"location":"%E4%BD%BF%E7%94%A8vscode%E6%92%B0%E5%AF%ABc%2B%2B/#vscode","title":"vscode\u8a2d\u7f6e","text":"<p>\u4e0b\u8f09\u9019\u4e9b</p> <p>1.\u5075\u932f/\u81ea\u52d5\u586b\u5b57\u7528  \u6309\u4e0b\u5f8c\u53ef\u8a2d\u5b9a </p> <p>\u9078\u9019\u4e9b  </p> <p>\u4ee5\u4e0b\u70ba\u5176\u4ed6\u7db2\u7ad9\u4e4b\u8cc7\u6599\uff1ahttps://hackmd.io/@smallshawn95/vscode_write_cpp_2</p>"},{"location":"%E4%BD%BF%E7%94%A8vscode%E6%92%B0%E5%AF%ABc%2B%2B/#code-runner","title":"Code Runner","text":"<p>\u80fd\u5920\u8b93\u57f7\u884c\u7a0b\u5f0f\u66f4\u65b9\u4fbf\u7684\u5ef6\u4f38\u6a21\u7d44\uff0c\u6975\u5ea6\u63a8\u85a6\u5b89\u88dd\u3002 \u9023\u7d50\uff1ahttps://marketplace.visualstudio.com/items?itemName=formulahendry.code-runner</p> <p></p>"},{"location":"%E4%BD%BF%E7%94%A8vscode%E6%92%B0%E5%AF%ABc%2B%2B/#vscode_1","title":"\u8a2d\u7f6e Vscode \u74b0\u5883\uff1a","text":"<p>\u67e5\u8a62\u6846\u8f38\u5165 <code>&gt; Open User Settings</code>\uff0c\u6253\u958b Vscode Setting Json \u6a94\u3002</p> <p></p> <pre><code>{\n    // \u8b93 Code Runner \u5c07 C++ \u57f7\u884c\u5728\u7d42\u7aef\u6a5f\u4e2d\n    \"code-runner.runInTerminal\": true,\n    // \u9810\u8a2d C++ \u7a0b\u5f0f\u78bc\u7684\u7de8\u78bc\u65b9\u5f0f\u70ba Big5(\u7e41\u9ad4\u4e2d\u6587\u6a19\u6e96\u5eab)\n    \"[cpp]\":{\n        \"files.encoding\": \"cp950\"\n    },\n    //\u5148\u5132\u5b58\u518d\u57f7\u884c\n    \"code-runner.saveFileBeforeRun\": true\n}\n</code></pre>"},{"location":"%E4%BD%BF%E7%94%A8vscode%E6%92%B0%E5%AF%ABc%2B%2B/#_1","title":"\u57f7\u884c\u7a0b\u5f0f\uff1a","text":""},{"location":"%E4%BD%BF%E7%94%A8vscode%E6%92%B0%E5%AF%ABc%2B%2B/#_2","title":"\u984c\u5916\u8a71","text":""},{"location":"%E4%BD%BF%E7%94%A8vscode%E6%92%B0%E5%AF%ABc%2B%2B/#ctrls","title":"\u57f7\u884c\u6642\u8981\u5132\u5b58\uff1actrl+s\uff0c\u6216\u662f\u9078\u64c7\u81ea\u52d5\u5132\u5b58","text":"<ol> <li>\u6216\u662f\u78ba\u4fddjson\u8a2d\u5b9a\u6a94\u6709\u52a0\u4e0a     <pre><code>//\u5148\u5132\u5b58\u518d\u57f7\u884c\n\"code-runner.saveFileBeforeRun\": true\n</code></pre></li> </ol>"},{"location":"%E4%BD%BF%E7%94%A8vscode%E6%92%B0%E5%AF%ABc%2B%2B/#_3","title":"\u8b8a\u66f4\u57f7\u884c\u7a0b\u5f0f\u5feb\u6377\u9375","text":"<ol> <li>\u627e\u5230\u5feb\u6377\u9375\u8a2d\u5b9a </li> <li>\u8f38\u5165\"ctrl+alt+n\"\uff0c\u8b8a\u66f4\u70baF9</li> </ol>"},{"location":"%E4%BD%BF%E7%94%A8vscode%E6%92%B0%E5%AF%ABc%2B%2B/#_4","title":"\u8a2d\u5b9a\u5de6\u5074\u6a94\u6848\u6392\u5e8f\u65b9\u5f0f","text":"<ol> <li>\u627e\u5230\u8a2d\u5b9a </li> <li>\u9078\u64c7\u4ee5type\u6392\u5e8f </li> </ol>  \u4f7f\u7528chroombook   codeblocks-----   <pre><code>sudo apt update\nsudo apt install codeblocks\n</code></pre> <pre><code>sudo apt update\nsudo apt install g++\n</code></pre>    vscode-----  \u4f86\u6e90\uff1ahttps://code.visualstudio.com/docs/setup/linux  \u5c07\u4e0b\u9762\u5168\u90e8\u57f7\u884c <pre><code>sudo apt-get install wget gpg\nwget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor &gt; packages.microsoft.gpg\nsudo install -D -o root -g root -m 644 packages.microsoft.gpg /etc/apt/keyrings/packages.microsoft.gpg\nsudo sh -c 'echo \"deb [arch=amd64,arm64,armhf signed-by=/etc/apt/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main\" &gt; /etc/apt/sources.list.d/vscode.list'\nrm -f packages.microsoft.gpg\n</code></pre> <pre><code>sudo apt install apt-transport-https\nsudo apt update\nsudo apt install code # or code-insiders\n</code></pre>"},{"location":"%E4%BD%BF%E7%94%A8%E4%BD%8D%E5%85%83%E7%AA%AE%E8%88%89/","title":"\u4f7f\u7528\u4f4d\u5143\u7aae\u8209(\u6709\u6642\u5019\u7528\u905e\u8ff4\u66f4\u5feb)","text":"<p>\u5229\u7528\u6578\u5b57\u7684\u4e8c\u9032\u4f4d\u4e4b\u4f4d\u5143\u904b\u7b97\u9054\u5230\u7aae\u8209\uff0c\u901f\u5ea6\u5f88\u5feb</p>"},{"location":"%E4%BD%BF%E7%94%A8%E4%BD%8D%E5%85%83%E7%AA%AE%E8%88%89/#q-1-8-apcs201810-subtask","title":"\u7fd2\u984c Q-1-8. \u5b50\u96c6\u5408\u7684\u548c (APCS201810, subtask)","text":"<p>\u8f38\u5165 n \u500b\u6b63\u6574\u6578\uff0c\u8acb\u8a08\u7b97\u5404\u7a2e\u7d44\u5408\u4e2d\uff0c\u5176\u548c\u6700\u63a5\u8fd1 P \u4f46\u4e0d\u8d85\u904e P \u7684\u548c\u662f\u591a\u5c11\u3002\u6bcf\u500b\u5143 \u7d20\u53ef\u4ee5\u9078\u53d6\u6216\u4e0d\u9078\u53d6\u4f46\u4e0d\u53ef\u91cd\u8907\u9078\uff0c\u8f38\u5165\u7684\u6578\u5b57\u53ef\u80fd\u91cd\u8907\u3002P&lt;=1000000009\uff0c0 &lt; n &lt; 26\u3002 \u7559\u8a00 \u5efa\u8b70\u4fee\u8a02 \u7de8\u8f2f\u6b64\u8655</p> <p>Time limit: 1 \u79d2</p> <p>\u8f38\u5165\u683c\u5f0f\uff1a\u7b2c\u4e00\u884c\u662f n \u8207 P\uff0c\u7b2c\u4e8c\u884c\u662f n \u500b\u53ef\u6311\u9078\u7684\u6b63\u6574\u6578\uff0c\u5927\u5c0f\u4e0d\u6703\u8d85\u904e P\uff0c\u540c\u884c \u6578\u5b57\u4ee5\u7a7a\u767d\u9593\u9694\u3002</p> <p>\u8f38\u51fa\u683c\u5f0f\uff1a\u6700\u63a5\u8fd1 P \u4f46\u4e0d\u8d85\u904e P \u7684\u548c\u3002</p> <p>\u7bc4\u4f8b\u8f38\u5165\uff1a 5 17 5 5 8 3 10</p> <p>\u7bc4\u4f8b\u8f38\u51fa\uff1a 16</p> <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\n#define N 100\n\nint v[N];\n\nint main(){\n    int n,m,ans=0;\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=0;i&lt;n;i++){\n        cin&gt;&gt;v[i];\n    }\n\n\n\n    for(int i=0;i&lt;(1&lt;&lt;n);i++){\n        int sum=0;\n        for(int j=0;j&lt;n;j++){\n            if(i &amp; (1&lt;&lt;j)){\n                sum+=v[j];\n            }\n            if(sum&gt;ans &amp;&amp; sum&lt;=m){\n                ans=sum;\n            }\n        }\n    }\n\n    cout&lt;&lt;ans;\n}\n</code></pre> <p><code>1&lt;&lt;n</code>\u5c31\u662f\u5728\u4f4d\u5143\u628a<code>1</code>\u5411\u53f3<code>n</code>\u6b21 \u5982\u679cn\u662f5\uff1a\u4e5f\u5c31\u662f<code>100000</code>(<code>32</code>)\uff0c\u5728\u7b2c19\u884c\u5beb<code>i&lt;n</code>\u6240\u4ee5\u5be6\u969b\u4e0a\u662f\u5230<code>(1&lt;&lt;5)-1</code>\uff0c\u4e5f\u5c31\u662f<code>11111</code>(<code>31</code>)</p> <p>&amp;\u4f7f\u7528\u65b9\u6cd5\uff1a\u90fd\u662f1\u624d\u662f1\u3002 \u7b2c12\u884c\u7684<code>if(i &amp; 1&lt;&lt;j)</code>\u662f\u770b\u770bi\u7684\u7b2cj\u500b\u4f4d\u5143\u662f\u5426\u70ba1\uff0c\u5982\u679c\u6210\u7acb\u4fbf\u56de\u50b3<code>1&lt;&lt;j</code>\uff0c\u56e0\u70ba<code>1&lt;&lt;j</code>\u975e0(\u662ftrue)\uff0c\u6240\u4ee5\u57f7\u884c\u7b2c13\u884c </p>"},{"location":"%E5%81%B7%E6%87%B6%E6%96%B9%E6%B3%95/","title":"\u5b9a\u7fa9\u6578\u5b57\u6587\u5b57/\u51fd\u6578","text":"<pre><code>#define nn \"\\n\"\n#define N 101\n</code></pre> <pre><code>#define mul(a,b) (a)*(b)//\u8981\u62ec\u865f\uff0c\u4e0d\u7136\u6703\u6709\u5148\u4e58\u9664\u5f8c\u52a0\u6e1b\u554f\u984c\n</code></pre> <p>\u8a73\u7d30\u5167\u5bb9</p>"},{"location":"%E5%81%B7%E6%87%B6%E6%96%B9%E6%B3%95/#_2","title":"\u81ea\u52d5\u8f38\u5165","text":"<p>\u8a73\u7d30\u5167\u5bb9</p> <pre><code>//istream&amp; ss = cin;\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nint main(){\n\n    istringstream cin(\"123456\");//\u8a3b\u89e3\u9019\u4e00\u884c\n\n    string s;\n    cin&gt;&gt;s;\n    cout&lt;&lt;s;\n}\n</code></pre>"},{"location":"%E5%81%B7%E6%87%B6%E6%96%B9%E6%B3%95/#_3","title":"\u5b9a\u7fa9\u8cc7\u6599\u578b\u614b","text":"<p>\u5169\u7a2e\u65b9\u5f0f</p> <pre><code>typedef long long ll;\n</code></pre> <pre><code>using ll = long long;\n</code></pre> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nusing  pii = pair&lt;int,int&gt;;\nint main(){\n    pii p;\n    p.first=5;\n    p.second=2;\n    cout&lt;&lt;p.first;\n}\n</code></pre>"},{"location":"%E5%81%B7%E6%87%B6%E6%96%B9%E6%B3%95/#define-int-long-long-long-long","title":"\u7528#define int long long\u958b long long","text":""},{"location":"%E5%81%B7%E6%87%B6%E6%96%B9%E6%B3%95/#_4","title":"\u65b9\u6cd5\u4e00","text":"<p>\u8cc7\u6599\u4f86\u6e90</p> <p>\u8cc7\u6599\u4f86\u6e90</p> <pre><code>#define int long long\n</code></pre> <pre><code>signed main()\n</code></pre> <p>int main()\u8981\u6539\u6210signed main()\uff0c\u56e0\u70bamain\u51fd\u5f0f\u4e0d\u80fd\u662f long long</p>"},{"location":"%E5%81%B7%E6%87%B6%E6%96%B9%E6%B3%95/#_5","title":"\u65b9\u6cd5\u4e8c","text":"<p>\u5728\u9047\u5230main\u6642\u66ab\u6642\u95dc\u9589\u5b9a\u7fa9</p> <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n\n#undef int\nint main(){\n#define int long long    \n    int n=9223372036854775807;//long long \u4e0a\u9650\n    cout&lt;&lt;n;\n}\n</code></pre>"},{"location":"%E5%81%B7%E6%87%B6%E6%96%B9%E6%B3%95/#define","title":"\u7528define\u66ff\u63db","text":"<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define all(x) x.begin(),x.end()\nint main(){\n    vector&lt;int&gt;v;\n    v.emplace_back(1);\n    v.emplace_back(3);\n    v.emplace_back(2);\n    sort(all(v));\n    for(int i:v){\n        cout&lt;&lt;i;\n    }\n}\n</code></pre>"},{"location":"%E5%84%AA%E5%85%88%E6%9F%B1%E5%88%97%28priority_queue%29/","title":"\u512a\u5148\u67f1\u5217(priority_queue)","text":""},{"location":"%E5%84%AA%E5%85%88%E6%9F%B1%E5%88%97%28priority_queue%29/#priority_queue","title":"\u512a\u5148\u67f1\u5217(priority_queue)","text":"<p>\u9700\u8981\u4e00\u76f4\u6392\u5e8f\uff0c\u53d6\u7528\u6700\u5927\u503c\uff0c\u5c31\u4f7f\u7528pq\u6700\u5feb</p> <p>\u53ef\u4ee5\u60f3\u6210\u6703\u81ea\u52d5\u6392\u5e8f\u7684stack(\u5806\u758a)</p> <p>\u300c\u512a\u5148\u300d\u9867\u540d\u601d\u7fa9\u5c31\u662f\u6700\u5927\u7684\u5728\u524d\u9762  \u5982\u679c\u8981\u5c0f\u7684\u5728\u524d\u9762\u5c31\u8b8a\u6210\u8ca0\u503c </p> <p>\u4f8b\u5982\uff1a</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\npriority_queue&lt;int&gt;pq_1;\npriority_queue&lt;int&gt;pq_2;\nint main(){\n    istringstream cin(\"8 7 9\");\n\n    for(int i=0;i&lt;3;i++){\n        int x;\n        cin&gt;&gt;x;\n        pq_1.push(x);\n        pq_2.push(-x);     //\u8ca0\u865f\u8655\u88e1\n    }\n\n    while(!pq_1.empty()){\n        cout&lt;&lt;pq_1.top();\n        pq_1.pop();\n    }\n    cout&lt;&lt;\"\\n\";\n    while(!pq_2.empty()){\n        cout&lt;&lt;-pq_2.top();  //\u8ca0\u865f\u8655\u88e1\n        pq_2.pop();\n    }\n}\n</code></pre> <p>\u6216\u662f\u4f7f\u7528greater <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\npriority_queue&lt;int&gt; pq_1; // \u9ed8\u8a8d\u5f9e\u5927\u5230\u5c0f\u6392\u5217\npriority_queue&lt;int, vector&lt;int&gt;, greater&lt;int&gt;&gt; pq_2; // \u4f7f\u7528 greater&lt;int&gt; \u5f9e\u5c0f\u5230\u5927\u6392\u5217\n\nint main(){\n    istringstream cin(\"8 7 9\");\n\n    for(int i = 0; i &lt; 3; i++){\n        int x;\n        cin &gt;&gt; x;\n        pq_1.push(x);\n        pq_2.push(x); // \u4e0d\u9700\u8981\u624b\u52d5\u8655\u7406\u8ca0\u865f\n    }\n\n    while(!pq_1.empty()){\n        cout &lt;&lt; pq_1.top();\n        pq_1.pop();\n    }\n    cout &lt;&lt; \"\\n\";\n\n    while(!pq_2.empty()){\n        cout &lt;&lt; pq_2.top(); // \u4e0d\u9700\u8981\u624b\u52d5\u8655\u7406\u8ca0\u865f\n        pq_2.pop();\n    }\n}\n</code></pre></p> <p>output <pre><code>987\n789\n</code></pre></p> <p>\u53ef\u4ee5\u770b\u5230\u8f38\u51fa\u7b2c\u4e00\u884c\u70ba\u5927\u5230\u5c0f \u8f38\u51fa\u7b2c\u4e8c\u884c\u70ba\u5c0f\u5230\u5927</p>"},{"location":"%E5%84%AA%E8%B3%AA%E7%B6%B2%E7%AB%99/","title":"\u512a\u8cea\u7db2\u7ad9","text":"<p>\u4fbf\u5b9c\u7684\u6f14\u7b97\u6cd5\u6bd4\u8cfd\u7db2\u8def\u8cc7\u6e90\u6574\u7406</p> <p>\u65b0\u7af9\u5be6\u9a57\u4e2d\u5b78C++\u7a0b\u5f0f\u8a9e\u8a00\u6559\u5b78\u8b1b\u7fa9</p> <p>\u7af6\u7a0b&amp;\u5b78\u7fd2&amp;\u5237\u984c\u8cc7\u8a0a\u5206\u4eab</p> <p>\u7af6\u7a0b\u8cc7\u6e90\u6574\u7406</p>"},{"location":"%E5%88%A4%E6%96%B7%E6%98%AF%E5%90%A6%E7%82%BA%E6%95%B8%E5%AD%97%E3%80%81%E5%AD%97%E6%AF%8D/","title":"\u5224\u65b7\u662f\u5426\u70ba\u6578\u5b57\u3001\u5b57\u6bcd","text":"<p>\u7a0b\u5f0f\u78bc <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define nn \"\\n\"\n\nint main(){\n    cout&lt;&lt;isdigit('1')&lt;&lt;nn;\n    cout&lt;&lt;isdigit('a');\n\n    cout&lt;&lt;nn&lt;&lt;\"-----------------\"&lt;&lt;nn;\n\n    cout&lt;&lt;isalpha('a')&lt;&lt;nn;\n    cout&lt;&lt;isalpha('1');\n}\n</code></pre></p> <p>\u8f38\u51fa <pre><code>1\n0\n-----------------\n2\n0\n</code></pre></p> <p><code>isdigit(\u5b57\u5143)</code>\u82e5\u5b57\u5143\u70ba\u6578\u5b57\uff0c\u56de\u50b3true\u5426\u5247\u56de\u50b3flase</p> <p><code>isalpha(\u5b57\u5143)</code>\u82e5\u5b57\u5143\u70ba\u5b57\u6bcd\uff0c\u56de\u50b3true\u5426\u5247\u56de\u50b3flase</p>"},{"location":"%E5%89%8D%E5%BA%8F%E3%80%81%E4%B8%AD%E5%BA%8F%E3%80%81%E5%BE%8C%E5%BA%8F/","title":"\u524d\u5e8f\u3001\u4e2d\u5e8f\u3001\u5f8c\u5e8f","text":"<p>https://openhome.cc/zh-tw/algorithm/computation/postfix/</p>"},{"location":"%E5%89%8D%E7%B6%B4%E5%92%8C%26%E5%B7%AE%E5%88%86/","title":"\u524d\u7db4\u548c&amp;\u5dee\u5206","text":""},{"location":"%E5%89%8D%E7%B6%B4%E5%92%8C%26%E5%B7%AE%E5%88%86/#_2","title":"\u4e00\u7dad\u524d\u7db4\u548c","text":"<p>\u5c0d\u65bc\u8cc7\u6599\u505a\u9810\u8655\u7406\uff0c\u901a\u5e38\u4f7f\u7528\u65bc\u6c42\u4e00\u500b\u9663\u5217\u5340\u9593\u7684\u5408\u3002</p> <p>\u4ee5\u9663\u5217<code>v[n]={2,4,5,3,1,6}</code>\uff0c\u516d\u9805(n=6)\u70ba\u4f8b</p> <p>1.\u5148\u7dad\u8b77\u597d\u4e00\u500b\u9663\u5217<code>s[n]</code>\uff0c<code>s[i]=v[0]+v[1]+...v[i]</code> 2.\u82e5\u8981\u6c42<code>v[a]</code>\u5230<code>v[b]</code>\u7684\u7e3d\u548c(a&lt;b)\uff0c\u6c42<code>s[b]-s[a-1]</code>(\u5dee\u5206)\u5373\u53ef</p> <p>\u9019\u5c31\u662f\u7d1a\u6578\u7684\u6982\u5ff5\uff0c\u5982\u679c\u8981\u6c42<code>v[a]</code>\uff0c\u4e5f\u53ef\u5beb\u6210<code>s[a]-S[a-1]</code>\uff0c\u4f46\u5176\u5be6\u6c92\u5fc5\u8981</p> <p>\u7a0b\u5f0f\u78bc\uff1a <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nint main(){\n    int v[6]={2,4,5,3,1,6};\n    int s[6];\n\n    s[0]=v[0];\n    for(int i=1;i&lt;6;i++){\n        s[i]=s[i-1]+v[i];\n    }\n    cout&lt;&lt;s[5]; //\u7e3d\u548c\n    cout&lt;&lt;endl;\n    cout&lt;&lt;s[5]-s[2]; //\u7b2c4~6\u9805\u7e3d\u548c\n}\n</code></pre></p> <p>\u8f38\u51fa\uff1a <pre><code>21\n10\n</code></pre></p> <p>\u5982\u679c\u984c\u76ee\u9700\u8981\u8a08\u7b97\u96d9\u908a\uff0c\u53ef\u4ee5\u5efa\u7acb\u5169\u500b\u9663\u5217\u96d9\u5411\u4f7f\u7528\uff0c\u6c92\u6709\u4e00\u5b9a\u8981\u662f\u5de6\u5411\u53f3\uff0c\u53ef\u4ee5\u770b\u5230\u7fd2\u984cQ-1-4. \u652f\u9ede\u5207\u5272 (APCS201802) (@@)</p>"},{"location":"%E5%89%8D%E7%B6%B4%E5%92%8C%26%E5%B7%AE%E5%88%86/#_3","title":"\u4e8c\u7dad\u524d\u7db4\u548c","text":"<p>\u984c\u76ee\uff1ab840: 104\u5317\u4e8c4.\u8fb2\u4f5c\u7269\u63a1\u6536\u554f\u984c</p> <p>\u8cc7\u6599\u4f86\u6e90</p> <p></p> <pre><code>5\n6 3 4 8 9\n4 7 8 1 5\n2 4 7 8 1\n5 4 8 8 9\n5 4 7 4 1 \n</code></pre> <p>\u76f8\u52a0\u7a0b\u5f0f</p> <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define N 22\n#define nn \"\\n\"\n//istream&amp; ss=cin;\nstringstream ss(\"5 \\\n6 3 4 8 9 \\\n4 7 8 1 5 \\\n2 4 7 8 1 \\\n5 4 8 8 9 \\\n5 4 7 4 1 \");\nint ve[N][N];\nint v(int x,int y){\n    if(x&lt;0 || y&lt;0){\n        return 0;\n    }\n    return ve[x][y];\n}\nint main(){\n    int n;\n    ss&gt;&gt;n;\n    for(int i=0;i&lt;n;i++){\n        for(int j=0;j&lt;n;j++){\n            ss&gt;&gt;ve[i][j];\n            ve[i][j]+=v(i-1,j)+v(i,j-1)-v(i-1,j-1);\n        }\n    }\n    for(int i=0;i&lt;n;i++){\n        for(int j=0;j&lt;n;j++){\n            cout&lt;&lt;ve[i][j]&lt;&lt;\" \";\n        }\n        cout&lt;&lt;nn;\n    }\n}\n</code></pre> <p></p> <p>\u53ef\u4ee5\u770b\u5230A(\u6240\u6c42)=E-C-B+D \u9019\u5c31\u662f\u4e8c\u7dad\u524d\u7db4\u548c\u7684\u7528\u6cd5</p>"},{"location":"%E5%93%88%E5%B8%8C%E8%A1%A8/","title":"\u54c8\u5e0c\u8868","text":""},{"location":"%E5%93%88%E5%B8%8C%E8%A1%A8/#_1","title":"\u54c8\u5e0c\u8868","text":"<p>\u54c8\u5e0c\u8868\u793a\uff08Hash representation\uff09\u662f\u4e00\u7a2e\u6578\u64da\u7d50\u69cb\u6216\u6280\u8853\uff0c\u901a\u904e\u4f7f\u7528\u54c8\u5e0c\u51fd\u6578\u5c07\u6578\u64da\u6620\u5c04\u5230\u4e00\u500b\u56fa\u5b9a\u5927\u5c0f\u7684\u6578\u5b57\u6216\u5bc6\u78bc\uff0c\u4ee5\u4fbf\u66f4\u6709\u6548\u5730\u5b58\u5132\u3001\u67e5\u627e\u548c\u64cd\u4f5c\u6578\u64da\u3002\u54c8\u5e0c\u8868\u793a\u901a\u5e38\u7528\u65bc\u5be6\u73fe\u5feb\u901f\u67e5\u627e\u3001\u6aa2\u7d22\u548c\u6bd4\u8f03\u6578\u64da\uff0c\u4e26\u5728\u8a31\u591a\u8a08\u7b97\u6a5f\u79d1\u5b78\u61c9\u7528\u4e2d\u90fd\u6709\u5ee3\u6cdb\u7684\u61c9\u7528\u3002\uff08by gpt)</p> <p>\u7c21\u55ae\u4f86\u8aaa\u5c31\u662f\u73ed\u4e0a\u7684\u5ea7\u865f\uff0c\u6211\u5011\u5c0d\u300c\u54c8\u5e0c\u51fd\u6578\u300d\u8f38\u5165\u5ea7\u865f\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u540d\u5b57</p> <p>\u4f86\u770b\u4f8b\u984c https://leetcode.com/problems/two-sum/description/</p> <p>\u984c\u76ee\uff1a \u7d66\u5b9a\u4e00\u500b\u6574\u6578\u6578\u7d44nums \u548c\u4e00\u500b\u6574\u6578target\uff0c \u50b3\u56de\u5169\u500b\u6578\u5b57\u7684\u7d22\u5f15\uff0c\u4f7f\u5b83\u5011\u76f8\u52a0\u70batarget\u3002</p> <p>\u60a8\u53ef\u4ee5\u5047\u8a2d\u6bcf\u500b\u8f38\u5165\u90fd\u6709\u4e00\u500b\u89e3\u6c7a\u65b9\u6848\uff0c\u4e26\u4e14\u60a8\u4e0d\u80fd\u5169\u6b21\u4f7f\u7528\u76f8\u540c\u7684\u5143\u7d20\u3002</p> <p>\u60a8\u53ef\u4ee5\u6309\u4efb\u610f\u9806\u5e8f\u8fd4\u56de\u7b54\u6848\u3002</p> <p>\u7a0b\u5f0f\u78bc\uff1a <pre><code>class Solution {\npublic:\n    vector&lt;int&gt; twoSum(vector&lt;int&gt;&amp; nums, int target) {\n\n        unordered_map&lt;int,int&gt;mp;\n        vector&lt;int&gt;ans;\n\n        int n=nums.size();\n        for(int i=0;i&lt;n;i++){\n            int x;\n            x=nums[i];\n            //cout&lt;&lt;\"\uff1a\"&lt;&lt;target-x&lt;&lt;nn;\n            if(mp.find(target-x)!=mp.end()){\n                ans.push_back(mp[target-x]);\n                ans.push_back(i);\n                return ans;\n            }\n            else{\n                mp[x]=i;\n            }\n        }\n        return ans;\n    }\n};\n</code></pre></p> <p>\u9019\u908a\u7684map\u5c31\u662f\u5c07\u6578\u503c\u6620\u5c04\u5230index</p>"},{"location":"%E5%9B%A0%E6%95%B8%E5%80%8D%E6%95%B8/","title":"\u6700\u5927\u516c\u56e0\u6578\u3001\u6700\u5c0f\u516c\u500d\u6578","text":""},{"location":"%E5%9B%A0%E6%95%B8%E5%80%8D%E6%95%B8/#1","title":"\u5b9a\u74061","text":"<p>\u5c0d\u65bc\u6574\u6578 $a, b$ \u6211\u5011\u7a31 $a, b$ \u7684\u6700\u5927\u516c\u56e0\u6578\uff0c\u662f\u6700\u5927\u7684\u6b63\u6574\u6578 $d$ \u4f7f\u5f97 $d \\mid a$ \u4e14 $d \\mid b$\uff0c\u8a18\u4f5c $d = \\gcd(a, b)$\u3002\u7576 $\\gcd(a, b) = 1$ \u6642\uff0c\u6211\u5011\u7a31 $a, b$ \u4e92\u8cea\u3002</p>"},{"location":"%E5%9B%A0%E6%95%B8%E5%80%8D%E6%95%B8/#2","title":"\u5b9a\u74062","text":"<p>$\\gcd(a, b) \\neq 1 \\iff \\exists p \\text{ \u662f\u8cea\u6578\u4f7f\u5f97 } p \\mid a \\text{ \u4e14 } p \\mid b$ (\u5982\u679c\u5169\u500b\u6578\u5b57 $a$ \u548c $b$ \u7684\u6700\u5927\u516c\u56e0\u6578 $\\gcd(a, b)$ \u4e0d\u7b49\u65bc 1\uff0c\u9019\u610f\u5473\u8457\u5b58\u5728\u4e00\u500b\u8cea\u6578 $p$ \u4f7f\u5f97 $p$ \u540c\u6642\u6574\u9664 $a$ \u548c $b$\u3002)</p>"},{"location":"%E5%9B%A0%E6%95%B8%E5%80%8D%E6%95%B8/#3","title":"\u5b9a\u74063","text":"<p>$lcm(a, b)$ \u88ab\u5b9a\u7fa9\u70ba\u6700\u5c0f\u7684\u6b63\u6574\u6578 $L$ \u4f7f\u5f97 $a \\mid L$ \u4e14 $b \\mid L$\u3002</p>"},{"location":"%E5%9B%A0%E6%95%B8%E5%80%8D%E6%95%B8/#4","title":"\u5b9a\u74064","text":"<p>\u82e5 $a = p_1^{k_1} p_2^{k_2} \\dots p_m^{k_m}$\uff0c$b = p_1^{t_1} p_2^{t_2} \\dots p_m^{t_m}$\uff0c\u5247\uff1a $$ \\gcd(a, b) = p_1^{\\min(k_1, t_1)} p_2^{\\min(k_2, t_2)} \\dots p_m^{\\min(k_m, t_m)} $$ $$  lcm(a, b) = p_1^{\\max(k_1, t_1)} p_2^{\\max(k_2, t_2)} \\dots p_m^{\\max(k_m, t_m)} $$ \u6709\u4e86\u5b9a\u7406 3\u30014\uff0c\u6211\u5011\u5c31\u80fd\u5920\u5c07 $\\gcd$ \u8207 $lcm$ \u9023\u7d50\u5728\u4e00\u8d77\u4e86\uff1a</p>"},{"location":"%E5%9B%A0%E6%95%B8%E5%80%8D%E6%95%B8/#5","title":"\u5b9a\u74065","text":"<p>$ab = \\gcd(a, b) \\times lcm(a, b)$</p>"},{"location":"%E5%9C%88%E7%B5%90%E6%A7%8B%26%E7%B4%84%E7%91%9F%E5%A4%AB%E5%95%8F%E9%A1%8C/","title":"\u5708\u7d50\u69cb","text":"<p>\u539f\u672c\u57281\u865f\u4f4d\uff0c\u82e5\u8981\u79fb\u52d5n\u6b65\uff0c\u5982\u4f55\u77e5\u9053\u63a5\u4e0b\u4f86\u6703\u5230\u54ea\u500b\u4f4d\u7f6e \u5047\u8a2d\u539f\u672c\u57281</p> <p></p> <p>\u8981\u5f80\u5f8c10\uff0c\u5c31\u6703\u52301+10=11\u7684\u4f4d\u7f6e\uff0c\u82e5\u8981\u8b93\u4ed6\u56de\u52308\u4e4b\u5167 \u5c31\u770b11\u4e00\u76f4\u6e1b\u63898\u4e4b\u5f8c\u5269\u4e0b\u591a\u5c11(\u5269\u4e0b3)\uff0c\u8b8a\u621011\\%8=3\uff0c\u4e5f\u5c31\u662f\u52303\u7684\u4f4d\u7f6e\u3002</p> <p>\u4fbf\u53ef\u4ee5\u5f97\u5230\u516c\u5f0f\uff1a (\u539f\u672c\u4f4d\u7f6e+\u79fb\u52d5\u4f4d\u7f6e)%\u7e3d\u4f4d\u7f6e\u6578=\u73fe\u5728\u4f4d\u7f6e</p>"},{"location":"%E5%9C%88%E7%B5%90%E6%A7%8B%26%E7%B4%84%E7%91%9F%E5%A4%AB%E5%95%8F%E9%A1%8C/#_2","title":"\u7d04\u745f\u592b\u554f\u984c","text":"<p>\u8cc7\u6599\u4f86\u6e90: https://blog.csdn.net/u011500062/article/details/72855826</p> <p>\u64da\u8aaa\u8457\u540d\u7336\u592a\u6b77\u53f2\uff0f\u6578\u5b78\u5bb6\u7d04\u745f\u592b\uff08Josephus\uff09\u6709\u904e\u4ee5\u4e0b\u7684\u6545\u4e8b\uff1a\u5728\u7f85\u99ac\u4eba\u4f54\u9818\u55ac\u5854\u5e15\u7279\u5f8c\uff0c40 \u500b\u7336\u592a\u58eb\u5175\u8207\u7d04\u745f\u592b\u8eb2\u5230\u4e00\u500b\u6d1e\u4e2d\uff0c\u773c\u898b\u812b\u9003\u7121\u671b\uff0c\u4e00\u7fa4\u4eba\u6c7a\u5b9a\u96c6\u9ad4\u81ea\u6bba\uff0c\u7136\u800c\u79c1\u4e0b\u7d04\u745f\u592b\u8207\u67d0\u500b\u50a2\u4f19\u4e26\u4e0d\u8d0a\u6210\uff0c\u65bc\u662f\u7d04\u745f\u592b\u5efa\u8b70\u81ea\u6bba\u65b9\u5f0f\uff0c41 \u500b\u4eba\u6392\u6210\u5713\u5708\uff0c\u7531\u7b2c 1 \u500b\u4eba\u958b\u59cb\u5831\u6578\uff0c\u6bcf\u5831\u6578\u5230 3 \u7684\u4eba\u5c31\u5fc5\u9808\u81ea\u6bba\uff0c\u7136\u5f8c\u7531\u4e0b\u4e00\u500b\u91cd\u65b0\u5831\u6578\uff0c\u76f4\u5230\u6240\u6709\u4eba\u90fd\u81ea\u6bba\u8eab\u4ea1\u70ba\u6b62\u3002\u7d04\u745f\u592b\u8207\u4e0d\u60f3\u81ea\u6bba\u7684\u90a3\u500b\u4eba\u5206\u5225\u6392\u5728\u7b2c 16 \u500b\u8207\u7b2c 31 \u500b\u4f4d\u7f6e\uff0c\u65bc\u662f\u9003\u904e\u4e86\u6b7b\u4ea1\u3002</p> <p>\u6211\u5011\u5047\u8a2d\u67098\u500b\u4eba\uff0c\u6bcf\u6b21\u627e\u7b2c\u4e09\u500b\u4eba</p> <p></p> \u00a0\u00a0\u00a0\u00a00\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a01\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a02\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a03\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a04\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a05\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a06\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a07\u00a0\u00a0\u00a0\u00a0 1 2 3 4 5 6 7 8 4 5 6 7 8 1 2 7 8 1 2 4 5 2 4 5 7 8 7 8 2 4 4 7 8 4 7 7 <p>\u9ec3\u8272\u4f4d\u7f6e\u70ba\u81ea\u6bba\u4f4d\u7f6e</p> <p>\u63a5\u4e0b\u4f86\u601d\u8003\u5e7e\u500b\u554f\u984c\uff1a</p> <p>\u4e00\u3001 </p> <p>Q\uff1a\u7576\u6211\u5011\u5df2\u77e5\u67098\u500b\u4eba\u6642\uff0c\u52dd\u5229\u8005\u7684\u4e0b\u6a19\u4f4d\u7f6e\u70ba6\u3002\u90a3\u4e0b\u4e00\u8f2a7\u500b\u4eba\u6642\uff0c\u52dd\u5229\u8005\u7684\u4e0b\u6a19\u4f4d\u7f6e\u70ba\u591a\u5c11\uff1f</p> <p>A\uff1a\u5176\u5be6\uff0c\u7b2c\u4e00\u8f2a\u522a\u6389\u7de8\u865f\u70ba3\u7684\u4eba\u5f8c\uff0c\u4e4b\u5f8c\u7684\u4eba\u90fd\u5f80\u524d\u9762\u79fb\u52d5\u4e863\u4f4d\uff0c\u52dd\u5229\u8005\u4e5f\u5f80\u524d\u79fb\u52d5\u4e863\u4f4d\uff0c\u6240\u4ee5\u4ed6\u7684\u4e0b\u6a19\u4f4d\u7f6e\u75316\u8b8a\u62103\u3002</p> <p>\u4e8c\u3001</p> <p>Q\uff1a\u5047\u8a2d\u6211\u5011\u5df2\u7d93\u77e5\u905310\u500b\u4eba\u6642\uff0c\u52dd\u5229\u8005\u7684\u4e0b\u6a19\u4f4d\u7f6e\u70ba3\u3002\u90a3\u4e0b\u4e00\u8f2a11\u500b\u4eba\u6642\uff0c\u52dd\u5229\u8005\u7684\u4e0b\u6a19\u4f4d\u7f6e\u70ba\u591a\u5c11\uff1f</p> <p>A\uff1a\u9019\u53ef\u4ee5\u770b\u4f5c\u662f\u4e0a\u4e00\u500b\u554f\u984c\u7684\u9006\u904e\u7a0b\uff0c\u5927\u5bb6\u90fd\u5f80\u5f8c\u79fb\u52d53\u4f4d\uff0c\u6240\u4ee5  f(11,3) = f(10,3) + 3\u3002 \u4e0d\u904e\u6709\u53ef\u80fd\u6578\u7d44\u6703\u8d8a\u754c\uff0c\u6240\u4ee5\u6700\u5f8c\u6a21\u4e0a\u7576\u524d\u4eba\u6578\u7684\u500b\u6578\uff0c  f(11,3) = (f(10,3) + 3) % 11</p> <p>\u4e09\u3001</p> <p>Q\uff1a\u73fe\u5728\u6539\u70ba\u4eba\u6578\u6539\u70baN\uff0c\u5831\u5230M\u6642\uff0c\u628a\u90a3\u500b\u4eba\u6bba\u6389\uff0c\u90a3\u9ebc\u9663\u5217\u662f\u600e\u9ebc\u79fb\u52d5\u7684\uff1f</p> <p>A\uff1a\u6bcf\u6bba\u6389\u4e00\u500b\u4eba\uff0c\u4e0b\u4e00\u500b\u4eba\u6210\u70ba\u982d\uff0c\u76f8\u7576\u65bc\u628a\u6578\u7d44\u5f80\u524d\u79fb\u52d5M\u4f4d\u3002\u82e5\u5df2\u77e5N-1\u500b\u4eba\u6642\uff0c\u52dd\u5229\u8005\u7684\u4e0b\u6a19\u4f4d\u7f6e\u70baf(N\u22121,M)\uff0c\u5247N\u500b\u4eba\u7684\u6642\u5019\uff0c\u5c31\u662f\u5f80\u5f8c\u79fb\u52d5M\u4f4d\uff0c(\u56e0\u70ba\u6709\u53ef\u80fd\u6578\u7d44\u8d8a\u754c\uff0c\u8d85\u904e\u7684\u90e8\u5206\u6703\u88ab\u63a5\u5230\u982d\u4e0a\uff0c\u6240\u4ee5\u9084\u8981\u6a21N)\uff0c\u5373 f(N,M)=(f(N\u22121,M)+M)%N</p> <p>\u8a3b\uff1a \u7406\u89e3\u9019\u500b\u905e\u63a8\u5f0f\u7684\u6838\u5fc3\u5728\u65bc\u95dc\u6ce8\u52dd\u5229\u8005\u7684\u4e0b\u6a19\u4f4d\u7f6e\u662f\u600e\u9ebc\u8b8a\u7684\u3002\u6bcf\u6bba\u6389\u4e00\u500b\u4eba\uff0c\u5176\u5be6\u5c31\u662f\u628a\u9019\u500b\u9663\u5217\u5411\u524d\u79fb\u52d5\u4e86M\u4f4d\u3002\u7136\u5f8c\u9006\u904e\u4f86\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u9019\u500b\u905e\u63a8\u5f0f\u3002 \u56e0\u70ba\u6c42\u51fa\u4f86\u7684\u7d50\u679c\u662f\u6578\u7d44\u4e2d\u7684\u4e0b\u6a19\uff0c\u6700\u5f8c\u7684\u7de8\u865f\u9084\u8981\u52a01 \u4e0b\u9762\u7d66\u51fa\u7a0b\u5f0f\u78bc\u5be6\u4f5c\uff1a</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nint main(){\n    int n,m,k;\n    cin&gt;&gt;n&gt;&gt;m&gt;&gt;k;\n    int ans=0;//\u539f\u672c\u57280\u4f4d\u7f6e(\u958b\u982d)\n    for(int i=n-k+1;i&lt;=n;i++){//\u589e\u52a0\u7e3d\u4eba\u6578\n        ans=(ans+m)%i;//\u53d6\u6a21\n    }\n    cout&lt;&lt;ans+1;//\u5f9e0\u958b\u59cb\u8b8a\u6210\u5f9e1\u958b\u59cb\n}\n</code></pre>"},{"location":"%E5%9C%88%E7%B5%90%E6%A7%8B%26%E7%B4%84%E7%91%9F%E5%A4%AB%E5%95%8F%E9%A1%8C/#_3","title":"\u4f8b\u984c","text":""},{"location":"%E5%9C%88%E7%B5%90%E6%A7%8B%26%E7%B4%84%E7%91%9F%E5%A4%AB%E5%95%8F%E9%A1%8C/#k","title":"\u5b9a\u6642K\u5f48","text":"<p>\u7531\u6b64\u53ef\u77e5\uff0c\u7576\u958b\u982d\u70ban\u6642\uff0cn\u5728\u7b2c0\u500b\u4f4d\u7f6e\u3002</p> <p>\u4e00\u958b\u59cb\u4eba\u6578\uff1an-k+1\uff0c\u6700\u7d42\u4eba\u6578\uff1an</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nint main(){\n    int n,m,k;\n    cin&gt;&gt;n&gt;&gt;m&gt;&gt;k;\n    int ans=0;//\u539f\u672c\u57280\u4f4d\u7f6e(\u958b\u982d)\n    for(int i=n-k+1;i&lt;=n;i++){//\u589e\u52a0\u7e3d\u4eba\u6578\n        ans=(ans+m)%i;//\u53d6\u6a21\n    }\n    cout&lt;&lt;ans+1;//\u5f9e0\u958b\u59cb\u8b8a\u6210\u5f9e1\u958b\u59cb\n}\n</code></pre>"},{"location":"%E5%9C%88%E7%B5%90%E6%A7%8B%26%E7%B4%84%E7%91%9F%E5%A4%AB%E5%95%8F%E9%A1%8C/#2169-arrangement","title":"2169 . \u51fa\u6230\u6392\u5e8f (Arrangement)","text":"<p>Link</p>"},{"location":"%E5%A4%A7%E5%B0%8F%E5%AF%AB%E8%BD%89%E6%8F%9B/","title":"\u5c0f\u8f49\u5927","text":"<p>toupper(\u5b57\u5143) \u56de\u50b3ASCII</p> <p>\u7a0b\u5f0f\u78bc <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nsigned main(){\n    cout&lt;&lt;char(toupper('a'));\n    cout&lt;&lt;\"\\n\";\n    cout&lt;&lt;char('a'-32);\n}\n</code></pre> \u8f38\u51fa <pre><code>A\nA\n</code></pre></p>"},{"location":"%E5%A4%A7%E5%B0%8F%E5%AF%AB%E8%BD%89%E6%8F%9B/#_2","title":"\u5927\u8f49\u5c0f","text":"<p>tolower(\u5b57\u5143) \u56de\u50b3ASCII</p> <p>\u7a0b\u5f0f\u78bc <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nsigned main(){\n    cout&lt;&lt;char(tolower('A'));\n    cout&lt;&lt;\"\\n\";\n    cout&lt;&lt;char('A'+32);\n}\n</code></pre> \u8f38\u51fa <pre><code>a\na\n</code></pre></p>"},{"location":"%E5%A5%BD%E7%9C%8B%20copy/","title":"\u597d\u770b copy","text":"2019 \u81fa\u5317\u5e02\u8cc7\u8a0a\u5b78\u79d1\u80fd\u529b\u7af6\u8cfd | \u5c71\u59c6\u7684\u7af6\u7a0b\u65e5\u8a18 \u5c71\u59c6\u7684\u7af6\u7a0b\u65e5\u8a18 <p>\u5f9e\u7da0\u724c\u958b\u59cb\u7684\u65c5\u9014</p> <ul> <li> \u9996\u9801 </li> <li> \u95dc\u65bc </li> <li> \u6a19\u7c64 </li> <li> \u6b78\u6a94 </li> <li> \u641c\u5c0b          </li> </ul> 0%            2019 \u81fa\u5317\u5e02\u8cc7\u8a0a\u5b78\u79d1\u80fd\u529b\u7af6\u8cfd          \u767c\u8868\u65bc 2020-09-30 \u66f4\u65b0\u65bc 2020-11-01 Disqus\uff1a 0 Comments # \u5317\u5e02\u8cfd # TIOJ # \u7d04\u745f\u592b\u65af\u554f\u984c # \u5716\u8ad6 # \u9ad8\u65af\u6d88\u53bb\u6cd5 # LCA  Codeforces Round #673 (Div.2)             Grakn Forces 2020 (Codeforces 1408)  <ul> <li>           \u6587\u7ae0\u76ee\u9304         </li> <li>           \u672c\u7ad9\u6982\u8981         </li> </ul> <ol><li>1. \u5fc3\u5f97</li><li>2. \u7b2c\u4e00\u984c\uff1a \u51fa\u6230\u9806\u5e8f (Arrangement)</li><li>3. \u7b2c\u4e8c\u984c\uff1a\u5730\u5716\u7de8\u4fee (Map)</li><li>4. \u7b2c\u4e09\u984c\uff1a\u6253\u5361\u904a\u6232 (Checkin)</li><li>5. \u7b2c\u56db\u984c\uff1a\u7269\u7a2e\u6f14\u5316 (Evolution)</li><li>6. \u7b2c\u4e94\u984c\uff1a\u641c\u96c6\u5bf6\u85cf\uff08Treasure\uff09</li></ol> <p>\u8def\u904e\u7684\u4e00\u96bb\u5c71\u59c6</p> \u9019\u88e1\u6703\u7d00\u9304\u4e00\u4e9b\u6253\u904e\u7684Contest\uff0c\u984c\u76ee\uff0c\u6216\u8005\u662f\u4e00\u4e9b\u525b\u5b78\u5230\u7684\u6f14\u7b97\u6cd5 39 \u6587\u7ae0 64 \u6a19\u7c64 GitHub Discord        Links      <ul> <li> Codeforces </li> <li> AtCoder </li> <li> Code Community (Xuan) </li> </ul>     \u00a9    2022 \u8def\u904e\u7684\u4e00\u96bb\u5c71\u59c6"},{"location":"%E5%A5%BD%E7%9C%8B%20copy/#\u5fc3\u5f97","title":"\u5fc3\u5f97","text":"<p>\u56e0\u70ba11\u6708\u8981\u53bb\u6bd4\u5317\u5e02\u8cfd\u4eca\u5929\u89e3\u4e86\u53bb\u5e74\u5317\u5e02\u8cfd\u7684\u984c\u76ee \uff08\u65e9\u81ea\u7fd230\u5206\u9418+\u5348\u4f1130\u5206\u9418+\u56db\u7bc0\u4e0b\u8ab210\u5206\u9418+\u7121\u6578\u7684\u4e0a\u8ab2\u601d\u8003\uff09\u4e0d\u904e\u4e94\u984c\u53ea\u89e3\u4e86\u56db\u984c \u7b2c\u4e94\u984c\u9084\u6c92\u770b\uff0811/1\u5df2\u88dc\uff09 \u8ddd\u96e2\u5317\u5e02\u8cfd \u9084\u670937\u5929\uff01 \u5e0c\u671b\u6709\u6a5f\u6703\u9032\u5168\u570b\u8cfd</p> <p>\u984c\u76ee:https://docs.google.com/viewer?a=v&amp;pid=sites&amp;srcid=ZGVmYXVsdGRvbWFpbnxobGZnb25nenVvc2hpfGd4OjRjMTVmYmY2NzcwY2VlODM</p>"},{"location":"%E5%A5%BD%E7%9C%8B%20copy/#\u7b2c\u4e00\u984c\uff1a-\u51fa\u6230\u9806\u5e8f-Arrangement","title":"\u7b2c\u4e00\u984c\uff1a \u51fa\u6230\u9806\u5e8f (Arrangement)","text":"<p>TIOJ 2169:https://tioj.ck.tp.edu.tw/problems/2169</p> <p></p> <p>\u6709\u7df4\u904e\u4e0d\u5c11\u984c\u76ee\u7684\u4eba\u61c9\u8a72\u90fd\u77e5\u9053\u6709\u500b\u554f\u984c\u53eb\u505a\u300c\u7d04\u745f\u592b\u65af\u554f\u984c\u300d</p> <p>\u9019\u500b\u554f\u984c\u6709\u5f88\u591a\u4e0d\u540c\u7684\u89e3\u6cd5 \u6709\u7684\u4eba\u53ef\u80fd\u7528Treap\u4e4b\u985e\u7684\u8cc7\u6599\u7d50\u69cb\u4f86\u9054\u5230 O(nlogn)\u7684\u89e3 \u4e0d\u904e\u9019\u500b\u554f\u984c\u6709\u7dda\u6027\u7684 O(n) \u89e3</p><pre>1234</pre><pre>int tmp = 0;for(int i = 2;i &lt;= n;i++){    tmp = (tmp+t)%i;}</pre><p></p> <p>\u984c\u76ee\u7684\u8981\u6c42\u70ba \u7d66\u4e88\u4e00\u500b\u6700\u5f8c\u7684\u6578\u5b57 \u554f m \u61c9\u70ba\u591a\u5c11 \u9019\u984c\u7684\u7bc4\u570d\u662f 1\u2264n,k\u2264104 \u800c m \u5247\u70ba 2\u2264m\u22643\u00d7104 \u56e0\u6b64\u6211\u5011\u53ef\u4ee5\u66b4\u641c\u627e\u51fa m \u503c</p> <p>\u8907\u96dc\u5ea6: O(30000\u00d7k)</p> <p>\u7a0b\u5f0f\u78bc</p><pre>123456789101112131415161718192021222324</pre><pre>#include &lt;bits/stdc++.h&gt;#define int long long#define fastio ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);using namespace std;signed main(){    fastio    int n,k; cin &gt;&gt; n &gt;&gt; k;  for(int t = 2;t &lt;= 30000;t++){       int tmp = 0;     for(int i = 2;i &lt;= n;i++){           tmp = (tmp+t)%i;      }     tmp++;        if(tmp==k){          cout &lt;&lt; t &lt;&lt; \"\\n\";          return 0;        } } cout &lt;&lt; 0 &lt;&lt; \"\\n\";}</pre><p></p>"},{"location":"%E5%A5%BD%E7%9C%8B%20copy/#\u7b2c\u4e8c\u984c\uff1a\u5730\u5716\u7de8\u4fee-Map","title":"\u7b2c\u4e8c\u984c\uff1a\u5730\u5716\u7de8\u4fee (Map)","text":"<p>TIOJ 2170:https://tioj.ck.tp.edu.tw/problems/2170</p> <p></p> <p>\u9019\u4e00\u984c\u7b2c\u4e00\u773c\u770b\u4e0a\u53bb\uff0c\u4ee5\u70ba\u662f\u5411\u91cf\u6295\u5f71 \u4e0d\u904e\u4ed4\u7d30\u60f3\u4e00\u60f3\uff0c\u9019\u984c\u5f9e\u984c\u76ee\u7684\u8aaa\u660e\u4e0a\u770b\u4f86 \u5176\u5be6\u53ea\u8981\u89e3\u6a21\u65b9\u7a0b \u984c\u76ee\u7d66\u4e86 n \u500b\u65b9\u7a0b\u5f0f </p> <pre>1234</pre><pre>2 101     2 1015 3    =&gt; 5 33 1       3x 1x2 2       2y 2y</pre> <p>\u56e0\u6b64\u6211\u5011\u6709\u4e86\u4e00\u500b\u4e00\u5143\u6a21\u65b9\u7a0b\u7d44</p> {3x+2y=5\u00a0(mod 101)1x+2y=3\u00a0(mod 101)<p>\u8981\u7528\u96fb\u8166\u89e3\u65b9\u7a0b\u5f0f\u6709\u5f88\u591a\u4f5c\u6cd5</p> <p>\u7528\u77e9\u9663\u7684\u89e3\u6cd5</p> <p>[3212][xy]=[53]</p> <p>\u6216\u8005\u514b\u62c9\u746a\u516c\u5f0f</p> <p>\u4ee5\u53ca\u9019\u984c\u9700\u8981\u4f7f\u7528\u7684\u9ad8\u65af\u6d88\u53bb\u6cd5\u9ad8\u65af\u6d88\u53bb\u6cd5\u662f\u57fa\u65bc\u52a0\u6e1b\u6d88\u53bb\u6cd5 \u904b\u7528\u77e9\u9663\u7684\u5217\u904b\u7b97\u4f86\u6c42\u89e3</p> <p>[3(x)2(y)51(x)2(y)3]</p> <p>\u53ea\u8981\u6211\u5011\u80fd\u5920\u7528\u5217\u904b\u7b97\u5c07\u539f\u672c\u7684\u77e9\u9663\u5316\u70ba</p> <p>[1(x)0(y)x0(x)1(y)y]</p> <p>\u6700\u5f8c\u4e00\u884c\u5c31\u6703\u662f\u6240\u6709\u6211\u5011\u8981\u6c42\u89e3\u7684\u8b8a\u6578\u4e86\u800c\u4f7f\u7528\u9ad8\u65af\u6d88\u53bb\u6cd5\u89e3\u6a21\u65b9\u7a0b\u5c31\u53ea\u662f\u5728\u904b\u7b97\u6642\u53bb\u57f7\u884c\u6a21\u904b\u7b97\u800c\u5df2 \u81f3\u65bc\u5982\u4f55\u9032\u884c\u5217\u904b\u7b97\u4f86\u8f49\u5316\u77e9\u9663 \u5c31\u662f\u7559\u7d66\u8b80\u8005\u7684\u7df4\u7fd2\u4e86</p> <p>\u8907\u96dc\u5ea6\uff1a O(n3logm) \uff08\u5099\u8a3b\uff1alogm\u662f\u56e0\u70ba\u6c42\u6a21\u9006\u5143\uff09</p> <p>\u7a0b\u5f0f\u78bc</p><pre>123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263</pre><pre>#include &lt;bits/stdc++.h&gt;#define int long long#define fastio ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);using namespace std;const int N = 105;int MOD;int fastpow(int n, int p){ int res = 1; while(p){        if(p&amp;1) res = (res * n)%MOD;     n = (n*n)%MOD;        p&gt;&gt;=1;  } return res;}int arr[N][N];signed main(){  fastio    int n;   cin &gt;&gt; n &gt;&gt; MOD;    for(int i = 1;i &lt;= n+1;i++){     for(int j = 1;j &lt;= n;j++){           cin &gt;&gt; arr[j][n-i+2];         } } for(int i = 1;i &lt;= n;i++){       if(!arr[i][i]){          //\u82e5arr[i][i]\u70ba0 \u8207\u5176\u4ed6\u884c\u4ea4\u63db \u5c07arr[i][i]\u8b8a\u70ba\u5176\u4ed6\u6578\u5b57           bool ok = true;         int row = 0;         for(int j = i+1;j &lt;= n+1;j++){               if(arr[j][i]){                   ok = false;                  row = j;                  break;               }         }         if(ok) continue;            for(int j = 1;j &lt;= n+1;j++){             swap(arr[i][j],arr[row][j]);          }     }     int tmp = arr[i][i];        //\u5c07\u9019\u4e00\u884c\u540c\u9664arr[i][i] \u4f7farr[i][i]\u8b8a\u70ba1       for(int j = i;j &lt;= n+1;j++){         arr[i][j] = arr[i][j] * fastpow(tmp,MOD-2)%MOD;       }     for(int j = 1;j &lt;= n;j++){           if(i==j) continue;          tmp = arr[j][i];          for(int k = 1;k &lt;= n+1;k++){             arr[j][k] = ((arr[j][k]%MOD - arr[i][k]%MOD*tmp%MOD)%MOD+MOD)%MOD;            }     } } for(int i = n;i;i--) cout &lt;&lt; (arr[i][n+1]+MOD)%MOD &lt;&lt; \" \";}</pre><p></p>"},{"location":"%E5%A5%BD%E7%9C%8B%20copy/#\u7b2c\u4e09\u984c\uff1a\u6253\u5361\u904a\u6232-Checkin","title":"\u7b2c\u4e09\u984c\uff1a\u6253\u5361\u904a\u6232 (Checkin)","text":"<p>TIOJ 2171:https://tioj.ck.tp.edu.tw/problems/2171</p> <p></p> <p>\u5716\u8ad6\u984c\u9019\u984c\u76ee\u5176\u5be6\u6211\u770b\u4e86\u4e00\u9663\u5b50\u624d\u7406\u89e3\u984c\u76ee\u7d66\u7684\u662f\u4e00\u5f35\u6709A+B \u500b\u7bc0\u9ede\u8207 k \u689d\u908a\u7684\u5716\uff08\u4e0d\u4e00\u5b9a\u5b8c\u5168\u9023\u901a\uff09\u800c S,M \u7684\u6578\u503c\u5c0d\u65bc\u9019\u984c\u4f86\u8aaa\u5176\u5be6\u5b8c\u5168\u7528\u4e0d\u5230\u8981\u7528\u6700\u5c11\u8eca\u8cc7\u5b8c\u6210\u904a\u6232 \u6211\u5011\u53ef\u4ee5\u63a8\u5f97 </p> \u8eca\u8cc7\u642d\u4e58\u8eca\u6578\u91cf\u8ddd\u96e2\u548c\u8eca\u8cc7=\u642d\u4e58\u8eca\u6578\u91cf\u00d7S+M\u00d7\u8ddd\u96e2\u548c<p>\u8ddd\u96e2\u548c\u4e0d\u8ad6\u600e\u9ebc\u505a\u90fd\u4e0d\u6703\u6539\u8b8a \u56e0\u6b64\u6211\u5011\u53ef\u4ee5\u5c07\u984c\u76ee\u7684\u300c\u6700\u5c11\u8eca\u8cc7\u300d\u6539\u70ba\u300c\u642d\u4e58\u6700\u5c11\u6578\u91cf\u300d</p> <p>\u800c\u6211\u5011\u8981\u627e\u5c0b\u642d\u4e58\u7684\u6700\u5c11\u6578\u91cf \u6211\u5011\u53ef\u4ee5\u5f88\u8f15\u6613\u7684\u77e5\u9053 \u5982\u679c\u6709 n \u500b\u9023\u901a\u584a \u6211\u5011\u81f3\u5c11\u8981\u505a n \u6b21\u624d\u80fd\u8d70\u5b8c\u6240\u6709\u908a \u800c\u6bcf\u500b\u9023\u901a\u584a\u9700\u8981\u7684\u6b21\u6578 \u6211\u5011\u53ef\u4ee5\u7531\u300c\u4e00\u7b46\u756b\u5b9a\u7406\u300d\u5f97\u77e5</p> <p></p> <p>\u56e0\u6b64\u672c\u984c\u7684\u7b54\u6848\u5c31\u662f</p> \u6bcf\u500b\u9023\u901a\u584a\u5947\u6578\u7bc0\u9ede\u03a3\u6bcf\u500b\u9023\u901a\u584a min(\u5947\u6578\u7bc0\u9ede/2,1)<p>\u8907\u96dc\u5ea6 O(A+B+K) \u7a0b\u5f0f\u78bc</p><pre>12345678910111213141516171819202122232425262728293031323334353637</pre><pre>#include &lt;bits/stdc++.h&gt;#define fastio ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);using namespace std;const int N = 1005;vector&lt;int&gt; adj[N];int ans = 0, visited[N];int odd = 0;void dfs(int u){    visited[u] = 1;   if(adj[u].size()&amp;1) odd++;   for(auto v : adj[u]){       if(!visited[v]) dfs(v);  }}signed main(){  fastio    int a,b,s,m,k;   cin &gt;&gt; a &gt;&gt; b &gt;&gt; s &gt;&gt; m &gt;&gt; k; for(int i = 0;i &lt; k;i++){        int u,v,w;       cin &gt;&gt; u &gt;&gt; v &gt;&gt; w;       //v starts from a+1      adj[u].push_back(a+v);        adj[a+v].push_back(u);    } for(int i = 1;i &lt;= a+b;i++){     if(visited[i]||adj[i].size()==0) continue;      odd = 0;      dfs(i);       ans += max(odd/2,1);  } cout &lt;&lt; ans &lt;&lt; \"\\n\";}</pre><p></p>"},{"location":"%E5%A5%BD%E7%9C%8B%20copy/#\u7b2c\u56db\u984c\uff1a\u7269\u7a2e\u6f14\u5316-Evolution","title":"\u7b2c\u56db\u984c\uff1a\u7269\u7a2e\u6f14\u5316 (Evolution)","text":"<p>TIOJ 2172:https://tioj.ck.tp.edu.tw/problems/2172</p> <p></p> <p>\u9019\u984c\u662f\u975e\u5e38\u88f8\u7684\u6a39\u4e0a\u5169\u9ede\u6700\u77ed\u8ddd\u96e2</p> <p>\u5c31\u7528\u500d\u589e\u6cd5\u6216\u6a39\u58d3\u5e73\u627eLCA\u4e4b\u5f8c\u7528 d=dep[u]\u22122\u2217dep[lca(u,v)]+dep[v]\u5c31\u662f\u7b54\u6848</p> <p>\u7a0b\u5f0f\u78bc</p><pre>123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566</pre><pre>#include &lt;bits/stdc++.h&gt;#define int long long#define fastio ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);using namespace std;const int N = 1e5+5;vector&lt;int&gt; adj[N];int dep[N], fa[N][25];void dfs(int u, int par){  for(int v : adj[u]){        if(v==par) continue;        dep[v] = dep[u]+1;        fa[v][0] = u;     dfs(v,u); }}int lca(int x, int y){    if(dep[x] &lt; dep[y]) swap(x,y);    int diff = dep[x]-dep[y];    for(int i = 20;~i;i--){     if((1&lt;&lt;i)&amp;diff){           x = fa[x][i];     } } if(x==y){        return x;    } for(int i = 20;~i;i--){     if(fa[x][i]!=fa[y][i]){          x = fa[x][i];         y = fa[y][i];     } } x = fa[x][0]; return x;}signed main(){ fastio    int n,m; cin &gt;&gt; n &gt;&gt; m;  for(int i = 1;i &lt; n;i++){        int u,v;     cin &gt;&gt; u &gt;&gt; v;      u++,v++;      adj[u].push_back(v);      adj[v].push_back(u);  } dep[1] = 0;   dfs(1,1); for(int i = 1;i &lt;= 20;i++){      for(int j = 1;j &lt;= n;j++){           fa[j][i] = fa[fa[j][i-1]][i-1];       } } while(m--){      int x,y;     cin &gt;&gt; x &gt;&gt; y;      x++,y++;      cout &lt;&lt; dep[x]+dep[y]-2*dep[lca(x,y)] &lt;&lt; \"\\n\";  }}</pre><p></p>"},{"location":"%E5%A5%BD%E7%9C%8B%20copy/#\u7b2c\u4e94\u984c\uff1a\u641c\u96c6\u5bf6\u85cf\uff08Treasure\uff09","title":"\u7b2c\u4e94\u984c\uff1a\u641c\u96c6\u5bf6\u85cf\uff08Treasure\uff09","text":"<p>TIOJ 2173:https://tioj.ck.tp.edu.tw/problems/2173</p> <p>(11/1 \u88dc)</p> <p>\u9019\u984c\u662f\u4e00\u500b\u5169\u689d\u8def\u5f91\u7684DP\u554f\u984c\uff0c\u56e0\u6b64\uff0c\u6211\u5011\u8981\u601d\u8003\u5982\u4f55\u53bb\u7d00\u9304\u5169\u689d\u8def\u7dda\u62ff\u5230\u5bf6\u85cf\u7684\u6700\u5927\u503c\uff0c\u6211\u5011\u53ef\u4ee5\u8a2d dp[t][i][j] \u70ba\u5728\u6642\u9593 t \u7684\u6642\u5019\uff0c\u7b2c\u4e00\u500b\u4eba\u7684\u7e31\u5ea7\u6a19\u5728 i\uff0c\u7b2c\u4e8c\u500b\u4eba\u7684\u7e31\u5ea7\u6a19\u5728 j\uff0c\u7136\u5f8c\u6211\u5011\u5c31\u53ef\u4ee5\u5f9e\u524d\u4e00\u500b\u6642\u9593\u8f49\u79fb\u5230\u73fe\u5728\u9019\u500b\u6642\u9593\uff08\u9019\u500b\u689d\u4ef6\u4f7f\u5f97\u6211\u5011\u53ef\u4ee5\u7528\u6efe\u52d5DP\u4f86\u52a0\u901f\uff0c\u662f\u8aaa\u6c92\u6709\u90a3\u500b\u5fc5\u8981\u5c31\u662f\u4e86\uff09</p> <pre>1234567891011121314151617181920212223242526272829303132333435</pre><pre>#include &lt;bits/stdc++.h&gt;#define fastio ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);using namespace std;const int N = 105;int grid[N][N];int dp[2][N][N];signed main(){    fastio    memset(dp,-0x3f3f3f,sizeof dp);    int n,m; cin &gt;&gt; n &gt;&gt; m;  for(int i = 1;i &lt;= n;i++)        for(int j = 1;j &lt;= m;j++)            cin &gt;&gt; grid[i][j];    dp[1][1][1] = grid[1][1]; for(int k = 1;k &lt;= n+m-1;k++){       for(int i = 1;i &lt;= min(k,n);i++){            for(int j = 1;j &lt;= min(k,n);j++){                if(k==1&amp;&amp;i==1&amp;&amp;j==1) continue;              if(grid[i][k+1-i]==-1||grid[j][k+1-j]==-1){                  dp[k&amp;1][i][j] = -1e9;                 continue;                }             dp[k&amp;1][i][j] = max({dp[(k-1)&amp;1][i][j],dp[(k-1)&amp;1][i-1][j],dp[(k-1)&amp;1][i][j-1],dp[(k-1)&amp;1][i-1][j-1]});               if(i==j) dp[k&amp;1][i][j] += grid[i][k+1-i];                else dp[k&amp;1][i][j] += grid[i][k+1-i] + grid[j][k+1-j];           }     } } cout &lt;&lt; max(0,dp[(n+m-1)&amp;1][n][n]) &lt;&lt; \"\\n\";}</pre>"},{"location":"%E5%AD%B8%E7%BF%92%E8%B3%87%E6%BA%90/","title":"\u57fa\u790e(APCS 0~3)","text":"<ol> <li>hello\uff01c++\u7a0b\u5f0f\u8a2d\u8a08 \u7b2c\u4e09\u7248</li> </ol> <ol> <li>\u5f9e\u96f6\u958b\u59cb\u7684\u6f14\u7b97\u6cd5\u7af6\u8cfd\u5165\u9580\u6559\u5b78</li> </ol>"},{"location":"%E5%AD%B8%E7%BF%92%E8%B3%87%E6%BA%90/#apcs-35","title":"\u9032\u968e(APCS 3~5)","text":"<ol> <li>AP325 \u8b1b\u7fa9 by \u5433\u90a6\u4e00\u6559\u6388</li> </ol>"},{"location":"%E5%AE%9A%E7%BE%A9%23define/","title":"\u529f\u80fd","text":"<p>\u5728 C++ \u4e2d\uff0c<code>#define</code> \u662f\u4e00\u500b\u9810\u8655\u7406\u6307\u4ee4\uff0c\u7528\u4f86\u5728\u7de8\u8b6f\u968e\u6bb5\u4e4b\u524d\u5b9a\u7fa9\u5b8f\uff08macros\uff09\u3002<code>#define</code> \u53ef\u4ee5\u7528\u65bc\u591a\u7a2e\u4e0d\u540c\u7684\u60c5\u5883\uff0c\u4ee5\u4e0b\u662f\u4e00\u4e9b\u4e3b\u8981\u7684\u7528\u6cd5\uff1a</p> <ol> <li>\u5b9a\u7fa9\u5e38\u6578\uff1a <code>#define</code> \u53ef\u4ee5\u7528\u4f86\u5275\u5efa\u7de8\u8b6f\u6642\u5e38\u6578\u3002\u9019\u7a2e\u7528\u6cd5\u53ef\u4ee5\u4ee3\u66ff <code>const</code> \u6216 <code>constexpr</code>\uff0c\u7279\u5225\u662f\u5728\u9700\u8981\u4fdd\u8b49\u503c\u5728\u7de8\u8b6f\u6642\u5c31\u662f\u5df2\u77e5\u7684\u5834\u5408\u3002</li> </ol> <pre><code>#define MAX_SIZE 100\n#define COMPANY_NAME \"Example Corp.\"\n</code></pre> <ol> <li> <p>\u5275\u5efa\u5b8f\u51fd\u6578\uff1a \u5b8f\u53ef\u4ee5\u88ab\u7528\u4f86\u5275\u5efa\u985e\u4f3c\u51fd\u6578\u7684\u7d50\u69cb\uff0c\u4f46\u5b83\u5011\u4e0d\u6d89\u53ca\u51fd\u6578\u8abf\u7528\u7684\u958b\u92b7\uff0c\u56e0\u70ba\u5b83\u5011\u5728\u7de8\u8b6f\u6642\u5c31\u88ab\u5c55\u958b\u3002</p> <p>\u6ce8\u610f\u8b8a\u6578\u5728\u904b\u7b97\u6642\u8981\u6ce8\u610f\u5148\u52a0\u6e1b\u5f8c\u4e58\u9664\u554f\u984c\uff0c\u5982\u679c#define SQUARE(x) ((x) * (x))\uff0c\u50b3\u5165x=2+1\uff0c\u5982\u679c\u6c92\u6709\u62ec\u865f\uff0c\u6703\u8b8a\u6210(2+1*2+1)\uff0c\u7b54\u6848\u70ba5\uff0c\u4e0d\u662f3*3=9</p> </li> </ol> <pre><code>#define SQUARE(x) ((x) * (x))\n#define MIN(a, b) ((a) &lt; (b) ? (a) : (b))\n</code></pre> <ol> <li>\u689d\u4ef6\u7de8\u8b6f\uff1a <code>#define</code> \u53ef\u7528\u65bc\u63a7\u5236\u54ea\u4e9b\u4ee3\u78bc\u6bb5\u88ab\u7de8\u8b6f\u3002\u9019\u5e38\u7528\u65bc\u4f9d\u64da\u4e0d\u540c\u7684\u7de8\u8b6f\u74b0\u5883\u6216\u914d\u7f6e\u4f86\u5305\u542b\u6216\u6392\u9664\u7279\u5b9a\u4ee3\u78bc\u3002</li> </ol> <pre><code>#define DEBUG\n\n#ifdef DEBUG\nstd::cout &lt;&lt; \"Debug mode is on.\" &lt;&lt; std::endl;\n#endif\n</code></pre> <ol> <li>\u9632\u6b62\u982d\u6587\u4ef6\u91cd\u8907\u5305\u542b\uff1a \u901a\u904e\u4f7f\u7528\u5b8f\u4f86\u9632\u6b62\u982d\u6587\u4ef6\u88ab\u591a\u6b21\u5305\u542b\uff0c\u9019\u662f\u9810\u9632\u7de8\u8b6f\u5668\u591a\u6b21\u8655\u7406\u540c\u4e00\u982d\u6587\u4ef6\u7684\u5e38\u7528\u6280\u8853\u3002</li> </ol> <pre><code>#ifndef MY_HEADER_H\n#define MY_HEADER_H\n// \u982d\u6587\u4ef6\u5167\u5bb9\n#endif\n</code></pre> <ol> <li>\u5e73\u53f0\u7279\u5b9a\u4ee3\u78bc\uff1a \u4f7f\u7528 <code>#define</code> \u4f86\u6839\u64da\u4e0d\u540c\u64cd\u4f5c\u7cfb\u7d71\u6216\u786c\u4ef6\u914d\u7f6e\u555f\u7528\u6216\u7981\u7528\u4ee3\u78bc\u584a\u3002</li> </ol> <pre><code>#ifdef WINDOWS\n#define OS_NAME \"Windows\"\n#elif defined(LINUX)\n#define OS_NAME \"Linux\"\n#else\n#define OS_NAME \"Unknown\"\n#endif\n</code></pre> <ol> <li>\u7c21\u5316\u8907\u96dc\u7684\u4ee3\u78bc\uff1a \u6709\u6642 <code>#define</code> \u7528\u4f86\u7c21\u5316\u8907\u96dc\u6216\u5197\u9577\u7684\u4ee3\u78bc\u7d50\u69cb\uff0c\u4f7f\u5176\u66f4\u5bb9\u6613\u95b1\u8b80\u548c\u7ba1\u7406\u3002</li> </ol> <pre><code>#define LOG_ERROR(msg) std::cerr &lt;&lt; \"Error: \" &lt;&lt; msg &lt;&lt; std::endl\n</code></pre> <p>\u6bcf\u7a2e\u7528\u6cd5\u90fd\u6709\u5176\u7279\u5b9a\u7684\u5834\u666f\u548c\u8003\u616e\u56e0\u7d20\u3002\u4f7f\u7528 <code>#define</code> \u9700\u8981\u8b39\u614e\uff0c\u56e0\u70ba\u5b83\u53ea\u9032\u884c\u6587\u672c\u66ff\u63db\uff0c\u4e0d\u9032\u884c\u985e\u578b\u6aa2\u67e5\uff0c\u4e14\u53ef\u80fd\u5c0e\u81f4\u96e3\u4ee5\u8ffd\u8e64\u7684\u932f\u8aa4\u3002\u5728\u73fe\u4ee3 C++ \u4e2d\uff0c\u901a\u5e38\u63a8\u85a6\u4f7f\u7528\u66f4\u5b89\u5168\u7684\u66ff\u4ee3\u65b9\u6848\uff0c\u5982 <code>const</code>\u3001<code>constexpr</code> \u548c\u6a21\u677f\uff0c\u9019\u4e9b\u90fd\u63d0\u4f9b\u66f4\u597d\u7684\u985e\u578b\u5b89\u5168\u548c\u932f\u8aa4\u6aa2\u67e5\u3002</p>"},{"location":"%E5%AE%9A%E7%BE%A9%23define/#_2","title":"\u512a\u7f3a\u9ede","text":"<p>\u5728 C++ \u4e2d\uff0c\u9078\u64c7\u4f7f\u7528\u5b8f\u51fd\u6578\u9084\u662f\u76f4\u63a5\u5275\u5efa\u51fd\u6578\uff0c\u5404\u6709\u5176\u512a\u7f3a\u9ede\uff0c\u4ee5\u4e0b\u662f\u6bd4\u8f03\u5169\u8005\u7684\u4e3b\u8981\u56e0\u7d20\uff1a</p>"},{"location":"%E5%AE%9A%E7%BE%A9%23define/#define","title":"\u5b8f\u51fd\u6578 (\u4f7f\u7528 <code>#define</code>)","text":"<p>\u512a\u9ede\uff1a</p> <ol> <li>\u7121\u984d\u5916\u8abf\u7528\u958b\u92b7\uff1a\u5b8f\u662f\u5728\u7de8\u8b6f\u671f\u9032\u884c\u6587\u672c\u66ff\u63db\uff0c\u6240\u4ee5\u4f7f\u7528\u5b8f\u53ef\u4ee5\u907f\u514d\u51fd\u6578\u8abf\u7528\u7684\u958b\u92b7\uff0c\u7279\u5225\u662f\u5728\u5fae\u512a\u5316\u662f\u91cd\u8981\u7684\u5834\u666f\u4e2d\u3002</li> <li>\u985e\u578b\u7368\u7acb\uff1a\u5b8f\u53ef\u4ee5\u7528\u65bc\u4efb\u4f55\u985e\u578b\u7684\u6578\u64da\uff0c\u56e0\u70ba\u5b83\u5011\u9032\u884c\u7684\u662f\u6587\u672c\u66ff\u63db\uff0c\u800c\u4e0d\u6aa2\u67e5\u985e\u578b\u3002</li> <li>\u689d\u4ef6\u7de8\u8b6f\uff1a\u53ef\u4ee5\u5728\u5b8f\u4e2d\u5d4c\u5165\u9810\u8655\u7406\u5668\u6307\u4ee4\uff0c\u4f7f\u5f97\u4ee3\u78bc\u7684\u67d0\u4e9b\u90e8\u5206\u53ea\u5728\u7279\u5b9a\u689d\u4ef6\u4e0b\u7de8\u8b6f\u3002</li> </ol> <p>\u7f3a\u9ede\uff1a</p> <ol> <li>\u6613\u65bc\u5f15\u8d77\u932f\u8aa4\uff1a\u5b8f\u4e0d\u9032\u884c\u985e\u578b\u6aa2\u67e5\uff0c\u4e14\u56e0\u70ba\u6587\u672c\u66ff\u63db\u7684\u7279\u6027\uff0c\u53ef\u80fd\u5c0e\u81f4\u5982\u904b\u7b97\u512a\u5148\u7d1a\u7b49\u932f\u8aa4\u3002</li> <li>\u8abf\u8a66\u56f0\u96e3\uff1a\u5b8f\u5c55\u958b\u5f8c\u7684\u4ee3\u78bc\u53ef\u80fd\u5f88\u96e3\u7406\u89e3\u548c\u8abf\u8a66\uff0c\u56e0\u70ba\u5b83\u5011\u5728\u7de8\u8b6f\u6642\u5c55\u958b\uff0c\u932f\u8aa4\u5b9a\u4f4d\u901a\u5e38\u4e0d\u76f4\u89c0\u3002</li> <li>\u4ee3\u78bc\u81a8\u8139\uff1a\u6bcf\u6b21\u4f7f\u7528\u5b8f\u6642\uff0c\u4ee3\u78bc\u90fd\u6703\u5728\u8a72\u8655\u5c55\u958b\uff0c\u53ef\u80fd\u5c0e\u81f4\u751f\u6210\u7684\u4e8c\u9032\u5236\u6587\u4ef6\u589e\u5927\u3002</li> </ol>"},{"location":"%E5%AE%9A%E7%BE%A9%23define/#_3","title":"\u76f4\u63a5\u5275\u5efa\u51fd\u6578","text":"<p>\u512a\u9ede\uff1a</p> <ol> <li>\u985e\u578b\u5b89\u5168\uff1a\u51fd\u6578\u63d0\u4f9b\u985e\u578b\u6aa2\u67e5\uff0c\u6e1b\u5c11\u985e\u578b\u932f\u8aa4\u7684\u98a8\u96aa\u3002</li> <li>\u6613\u65bc\u7dad\u8b77\u548c\u8abf\u8a66\uff1a\u51fd\u6578\u7684\u884c\u70ba\u66f4\u6e05\u6670\uff0c\u6613\u65bc\u7dad\u8b77\u548c\u8abf\u8a66\uff0c\u56e0\u70ba\u5b83\u5011\u5728\u7de8\u8b6f\u5f8c\u4fdd\u6301\u7d50\u69cb\u6e05\u6670\u3002</li> <li>\u91cd\u7528\u548c\u5c01\u88dd\uff1a\u51fd\u6578\u5141\u8a31\u4ee3\u78bc\u91cd\u7528\u548c\u66f4\u597d\u7684\u5c01\u88dd\uff0c\u63d0\u9ad8\u4e86\u4ee3\u78bc\u7684\u6a21\u7d44\u5316\u3002</li> </ol> <p>\u7f3a\u9ede\uff1a</p> <ol> <li>\u53ef\u80fd\u6709\u984d\u5916\u958b\u92b7\uff1a\u6bcf\u6b21\u8abf\u7528\u51fd\u6578\u6642\u53ef\u80fd\u6709\u984d\u5916\u7684\u958b\u92b7\uff08\u5982\u5806\u758a\u64cd\u4f5c\uff09\uff0c\u4f46\u5728\u73fe\u4ee3\u7de8\u8b6f\u5668\u512a\u5316\u548c <code>inline</code> \u51fd\u6578\u7684\u5e6b\u52a9\u4e0b\uff0c\u9019\u901a\u5e38\u4e0d\u662f\u554f\u984c\u3002</li> <li>\u4e0d\u5982\u5b8f\u9748\u6d3b\uff1a\u51fd\u6578\u7121\u6cd5\u50cf\u5b8f\u90a3\u6a23\u9032\u884c\u689d\u4ef6\u7de8\u8b6f\u6216\u5305\u542b\u9810\u8655\u7406\u5668\u6307\u4ee4\u3002</li> </ol>"},{"location":"%E5%AE%9A%E7%BE%A9%23define/#_4","title":"\u7e3d\u7d50","text":"<p>\u5728\u73fe\u4ee3 C++ \u7a0b\u5e8f\u8a2d\u8a08\u4e2d\uff0c\u9664\u975e\u6709\u7279\u5b9a\u7684\u7406\u7531\uff08\u5982\u5fae\u512a\u5316\u6216\u9700\u8981\u5728\u5b8f\u4e2d\u4f7f\u7528\u9810\u8655\u7406\u5668\u6307\u4ee4\uff09\uff0c\u5426\u5247\u901a\u5e38\u63a8\u85a6\u4f7f\u7528\u51fd\u6578\u800c\u4e0d\u662f\u5b8f\u3002\u51fd\u6578\u63d0\u4f9b\u66f4\u597d\u7684\u985e\u578b\u5b89\u5168\u3001\u6613\u65bc\u7dad\u8b77\u548c\u8abf\u8a66\u3002\u4f7f\u7528 <code>inline</code> \u51fd\u6578\u53ef\u4ee5\u7d50\u5408\u5b8f\u7684\u6027\u80fd\u512a\u52e2\u548c\u51fd\u6578\u7684\u5b89\u5168\u7279\u6027\uff0c\u901a\u5e38\u662f\u4e00\u7a2e\u66f4\u597d\u7684\u9078\u64c7\u3002</p>"},{"location":"%E5%AE%9A%E7%BE%A9%E6%AF%94%E8%BC%83%E8%A6%8F%E5%89%87/","title":"\u5b9a\u7fa9\u6bd4\u8f03\u898f\u5247","text":"<p>\u5148\u4e0d\u7d30\u8ac7 \u5b9a\u7fa9st\u8207st\u4e4b\u9593\u5982\u4f55\u4e92\u76f8\u6bd4\u8f03</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define nn \"\\n\";\n\nstruct st{\n    int x,y;\n    bool operator== (const st&amp; other) const {\n        return x == other.x;\n    }\n    bool operator&lt; (const st&amp; other) const {\n        return x &lt; other.x;\n    }\n    bool operator&gt; (const st&amp; other) const {\n        return x &gt; other.x;\n    }   \n};\n\nint main(){\n    st a={3,5};\n    st b={3,4};\n\n    cout&lt;&lt;(a==b);\n\n    return 0;\n}\n</code></pre>"},{"location":"%E5%B0%8F%E6%95%B8%E9%BB%9E%E5%BE%8C%E5%B9%BE%E4%BD%8D/","title":"\u5c0f\u6578\u9ede\u5f8c\u5e7e\u4f4d","text":""},{"location":"%E5%B0%8F%E6%95%B8%E9%BB%9E%E5%BE%8C%E5%B9%BE%E4%BD%8D/#_1","title":"\u5c0f\u6578\u9ede\u5f8c\u5e7e\u4f4d","text":""},{"location":"%E5%B0%8F%E6%95%B8%E9%BB%9E%E5%BE%8C%E5%B9%BE%E4%BD%8D/#a862-2-my-dear-friend-vir","title":"a862. 2. My Dear Friend VIR","text":"<p>https://zerojudge.tw/ShowProblem?problemid=a862</p> <p>\u6709\u5169\u500b\u65b9\u6cd5\uff1a cout&lt;&lt;fixed&lt;&lt;setprecision(\u5c0f\u6578\u9ede\u5f8c\u5e7e\u4f4d)&lt;&lt;\u6578\u5b57&lt;&lt;endl; printf(\"%.4\u4f4d\u6578\\n\", \u8b8a\u6578);</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define nn \"\\n\"\n\nint main(){\n\n    double n,m;\n    while(cin&gt;&gt;n&gt;&gt;m){\n        int h=1000;\n        cout&lt;&lt;fixed&lt;&lt;setprecision(4)&lt;&lt;n/m*h&lt;&lt;endl;\n    }\n}\n</code></pre> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define nn \"\\n\"\n\nint main(){\n\n    double n,m;\n    while(cin&gt;&gt;n&gt;&gt;m){\n        int h=1000;\n        printf(\"%.4f\\n\", n/m*h);\n    }\n}\n</code></pre>"},{"location":"%E5%BE%85%E8%BE%A6%E4%BA%8B%E9%A0%85/","title":"\u5f85\u8fa6\u4e8b\u9805","text":"<ul> <li> \u77e9\u9663\u4e58\u6cd5</li> <li> \u770b\u5b8cionc\u6578\u8ad6\u7bc7\u7ae0(\u4e0d\u80fd\u7528\u96fb\u8166\u6642\u518d\u770b)</li> <li> \u7406\u89e3\u984c\u76ee\uff1aa007. \u5224\u65b7\u8cea\u6578</li> <li> \u7dda\u6bb5\u6a39</li> <li> DP\uff1a\u5207\u63db\u9ede</li> <li> \u8cea\u56e0\u6578\u5206\u89e3</li> <li> N\u7687\u540e\u554f\u984c</li> <li> \u5176\u4ed6\u6280\u5de7\uff1a\u555f\u767c\u662f\u5408\u4f75</li> <li> \u57c3\u5f0f\u7be9\u6cd5</li> <li> \u6578\u8ad6 a^b mod p</li> <li> pbds</li> <li> bitset\u4f7f\u7528</li> <li> \u4e09\u5206\u641c\u5c0b</li> <li> \u96e2\u6563\u5316\u719f\u7df4</li> <li> \u5f80\u5f8c\u6574\u7406\uff0c\u4e0d\u8981\u7528istream</li> <li> \u4e00\u7b46\u756b\u554f\u984c</li> <li> \u6a39\u7684\u5713\u5fc3</li> </ul>"},{"location":"%E5%BF%AB%E9%80%9F%E5%86%AA/","title":"\u5feb\u901f\u51aa","text":"<p>\u6578\u5b57\u592a\u5927\u8981\u6c42mod\u7684\u984c\u76ee\u6703\u9700\u8981\u5728\u904e\u7a0b\u4e2dmod \u6240\u4ee5\u6709\u6642\u5019\u5fc5\u9808\u81ea\u5df1\u5beb</p>"},{"location":"%E5%BF%AB%E9%80%9F%E5%86%AA/#_2","title":"\u4e00\u3001\u57fa\u672c\u5beb\u6cd5","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nint po(int x,int y){\n    if(y==0){\n        return 1;\n    }\n    if(y&amp;1){\n        return po(x,y-1)*x;//\u5947\u6578\u51aa\u6b21\n    }\n    else{\n        int x=po(x,y/2);//\u907f\u514d\u904b\u7b97\u5169\u6b21\n        return x*x;//\u5076\u6578\u51aa\u6b21\n    }\n}\n\nint main(){\n    //2\u768410\u6b21\u65b9(1024)\n    cout&lt;&lt;po(2,10);\n}\n</code></pre>"},{"location":"%E5%BF%AB%E9%80%9F%E5%86%AA/#_3","title":"\u4e8c\u3001\u8ff4\u5708\u5beb\u6cd5","text":"<p>\u6bcf\u6b21\u905e\u8ff4\u8abf\u7528\u90fd\u9700\u8981\u984d\u5916\u7684\u958b\u92b7\uff0c\u5305\u62ec\u51fd\u6578\u8abf\u7528\u548c\u8fd4\u56de\u5730\u5740\u7684\u4fdd\u5b58\u3002\u9019\u4e9b\u958b\u92b7\u5728\u8ff4\u5708\u7248\u672c\u4e2d\u662f\u4e0d\u5b58\u5728\u7684\u3002\u4f7f\u7528\u8ff4\u5708\u6bd4\u8f03\u5feb\u3002</p>"},{"location":"%E5%BF%AB%E9%80%9F%E5%86%AA/#_4","title":"\u8b1b\u89e3\uff1a","text":"<p>\u4ee5 $2^{10}$ \u70ba\u4f8b\uff0c$10$ \u4e8c\u9032\u5236\u70ba $1010$</p> 1 0 1 0 8 4 2 1 $2^8$ $2^4$ $2^2$ $2^1$ <p>\u7531\u8868\u500b\u4e2d\u53ef\u4ee5\u77e5\u9053$10=8+2$ \u82e5$10$\u5728\u6307\u6578\u70ba $a^{10}$ \uff0c \u90a3 $a^8 *a^2 = a^{2+8}=a^{10}$</p> <p>\u6240\u4ee5\u6211\u5011\u53ea\u8981\u88fd\u4f5c\u51fa\u4e00\u500b\u5708\u53ef\u4ee5\u8dd1$2^8 , 2^4  ,2^2 , 2^1$</p> <p>\u63a5\u8457\u7528\u4f4d\u5143\u904b\u7b97\uff0c\u7576\u4f4d\u7f6e\u70ba $1$ \u6642\uff0c\u5c31\u4e58\u4e0a\u5c0d\u61c9\u7684\u6578\u5b57\u3002</p>"},{"location":"%E5%BF%AB%E9%80%9F%E5%86%AA/#28-24-22-21","title":"\u8dd1$2^8 , 2^4  ,2^2 , 2^1$\u7a0b\u5f0f\uff1a","text":"<p>code: <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nint main(){\n    int n,x=2;\n    cin&gt;&gt;n;\n    for(int i=0;i&lt;n;i++){\n        cout&lt;&lt;x&lt;&lt;\" \";\n        x*=x;\n    }\n}\n</code></pre> output: <pre><code>2 4 16 256 \n</code></pre></p>"},{"location":"%E5%BF%AB%E9%80%9F%E5%86%AA/#_5","title":"\u63a5\u4e0b\u4f86\u4f7f\u7528\u4f4d\u5143\u904b\u7b97\u5c0d\u61c9\u9700\u8981\u76f8\u4e58\u7684\u6578\u5b57\uff1a","text":"<p>code: <pre><code>int po(int x, int y) {\n    int ans = 1;//\u90fd\u6c92\u6709\u4e58\u7684\u8a71\u70ba1\n    while (y &gt; 0) {\n        if (y &amp; 1) {\n            ans *= x;//\u9700\u8981\u4e58\u4e0a\u53bb\n        }\n\n        x = (x * x);//\u8dd12 4 16 256...\n        y &gt;&gt;=1;//\u53f3\u79fb\uff0c\u5c071010\u8b8a\u6210101\n    }\n    return ans;\n}\n</code></pre></p>"},{"location":"%E5%BF%AB%E9%80%9F%E5%86%AA/#_6","title":"\u6700\u5f8c\u5c31\u53ef\u4ee5\u4f7f\u7528\u6b64\u65b9\u6cd5\u4f5c\u70ba\u5feb\u901f\u5e42\u8ff4\u5708\u65b9\u6cd5","text":"<p>all  code\uff1a</p> <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nint po(int x, int y) {\n    int ans = 1;\n    while (y &gt; 0) {\n        if (y &amp; 1) {\n            ans *= x;\n        }\n        x *= x;\n        y &gt;&gt;=1 ;\n    }\n    return ans;\n}\nint main(){\n    //2\u768410\u6b21\u65b9(1024)\n    cout&lt;&lt;po(2,10);\n}\n</code></pre> <p>output: <pre><code>1024\n</code></pre></p>"},{"location":"%E5%BF%AB%E9%80%9F%E5%86%AA/#mod","title":"\u6c42mod\u5beb\u6cd5(\u6839\u64da\u6a21\u904b\u7b97\u6027\u8cea)","text":""},{"location":"%E5%BF%AB%E9%80%9F%E5%86%AA/#p-2-3","title":"P-2-3. \u5feb\u901f\u51aa","text":"<p>\u984c\u76ee\uff1ahttps://judge.tcirc.tw/ShowProblem?problemid=d012</p> <p>\u8f38\u5165\u6b63\u6574\u6578 x, y, \u8207 p\uff0c\u8a08\u7b97 x y (mod p)\u3002x, y, p \u7686\u4e0d\u8d85\u904e 1e9+9\u3002\u4f8b\u5982 x=2, y=5, p=11\uff0c\u5247\u7b54\u6848\u662f 10\u3002 Time limit: 1 \u79d2 \u8f38\u5165\u683c\u5f0f\uff1a\u8f38\u5165 x, y, \u8207 p \u5728\u540c\u4e00\u884c\uff0c\u4ee5\u7a7a\u767d\u9593\u9694\u3002 \u8f38\u51fa\u683c\u5f0f\uff1a\u8f38\u51fa\u8a08\u7b97\u7d50\u679c\u3002 \u7bc4\u4f8b\u8f38\u5165\uff1a 2 5 11 \u7bc4\u4f8b\u8f38\u51fa\uff1a 10 <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long LL;\n\nLL po(LL x,LL y,LL z){\n    if(y==0){\n        return 1;\n    }\n    if(y&amp;1){\n        return po(x,y-1,z)*x%z;\n    }\n    else{\n        LL t=po(x,y/2,z);\n        return (t%z)*(t%z);\n    }\n}\n\nint main(){\n    LL x,y,z;\n    cin&gt;&gt;x&gt;&gt;y&gt;&gt;z;\n    cout&lt;&lt;po(x,y,z);\n}\n</code></pre></p>"},{"location":"%E5%BF%AB%E9%80%9F%E5%86%AA/#q-2-4-200","title":"Q-2-4. \u5feb\u901f\u51aa--200 \u4f4d\u6574\u6578","text":"<p>\u984c\u76ee\uff1ahttps://judge.tcirc.tw/ShowProblem?problemid=d013</p> <p>\u984c\u76ee\u8207\u8f38\u5165\u7686\u540c\u65bc P-2-3\uff0c\u4f46 x \u7684\u7bc4\u570d\u662f\u4e0d\u8d85\u904e 200 \u4f4d\u7684\u6b63\u6574\u6578  \u7bc4\u4f8b\u8f38\u5165\uff1a 123456789012345678901234567890 5 11  \u7bc4\u4f8b\u8f38\u51fa\uff1a 10</p> <p>\u6211\u5011\u53ef\u4ee5\u5728\u5b57\u4e32\u8f49\u6578\u5b57\u6642\u9806\u4fbfmod(\u6839\u64da\u6a21\u904b\u7b97\u6027\u8cea) \u539f\u672c\u8f49\u5b57\u4e32\u5beb\u6cd5\u5982\u4e0b\uff1a <pre><code>//\u88fd\u4f5c\u53d6\u9918\u6578\u5f8c\u7684\u5b57\u4e32\nLL mack(string s,LL z){\n    LL ans=0;\n    LL ssize=s.size();\n    for(LL i=0;i&lt;ssize;i++){\n        ans*=10;\n        ans%=z;\n        ans+=s[i]-'0';\n    }\n    return ans%z;\n}\n</code></pre></p> <p>\u89e3\u7b54\uff1a</p> <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define nn \"\\n\";\ntypedef long long LL;\n\n//\u88fd\u4f5c\u53d6\u9918\u6578\u5f8c\u7684\u5b57\u4e32\nLL mack(string s,LL z){\n    LL ans=0;\n    LL ssize=s.size();\n    for(LL i=0;i&lt;ssize;i++){\n        ans*=10;\n        ans%=z;\n        ans+=s[i]-'0';\n    }\n    return ans%z;\n}\n\n\nLL po(LL x,LL y,LL z){\n    if(y==0){\n        return 1;\n    }\n    if(y&amp;1){\n        return po(x,y-1,z)*x%z;\n    }\n    else{\n        return po(x,y/2,z)*po(x,y/2,z)%z;\n    }\n}\n\nint main(){\n    LL x,y,z;\n    string s;\n    cin&gt;&gt;s;\n    cin&gt;&gt;y&gt;&gt;z;\n    x=mack(s,z);\n    cout&lt;&lt;po(x,y,z);\n}\n</code></pre>"},{"location":"%E6%87%B6%E4%BA%BA%E8%BC%B8%E5%85%A5%E6%B3%95%EF%BC%8C%E6%AF%94%E8%B3%BD%E6%99%82%E7%94%A8/","title":"\u61f6\u4eba\u8f38\u5165\u6cd5\uff0c\u6bd4\u8cfd\u6642\u7528","text":""},{"location":"%E6%87%B6%E4%BA%BA%E8%BC%B8%E5%85%A5%E6%B3%95%EF%BC%8C%E6%AF%94%E8%B3%BD%E6%99%82%E7%94%A8/#_1","title":"\u61f6\u4eba\u8f38\u5165\u6cd5\uff0c\u6bd4\u8cfd\u6642\u7528","text":"<p>https://zerojudge.tw/ShowProblem?problemid=m372</p> <p>\u4ee5\u4e0b\u70baAPCS\u57282023/10/22\u7684\u7b2c\u4e09\u984c\u6e2c\u8cc7</p> <pre><code>\u8f38\u5165\uff1a\n3 4\nFHH7\nIIII\nLHHJ\n\n\u8f38\u51fa\uff1a\n10\n\n\u8f38\u5165\uff1a\n4 7\n0F70000\nFXJ0000\nII700X7\nLJ0HHLJ\n\n\u8f38\u51fa\uff1a\n9\n</code></pre> <p>APCS\u63d0\u4f9b\u7684 Codeblocks \u4e0d\u652f\u63f4\u8907\u88fd\u3001\u8cbc\u4e0a \uff0c\u5c0d\u65bc\u6253\u5b57\u6162\u7684\u4eba\u975e\u5e38\u4e0d\u53cb\u5584\u3002 \u50cf\u9019\u500b\u984c\u76ee\uff0c\u6e2c\u8cc7\u4e00\u5927\u4e32\uff0c\u9084\u82f1\u6587\u8207\u6578\u5b57\u6df7\u548c\uff0c\u5982\u679c\u6211\u5011\u60f3\u8981\u4e00\u76f4\u6e2c\u8a66\u7684\u8a71\u53ef\u4ee5\u600e\u9ebc\u8fa6\u5462?</p>"},{"location":"%E6%87%B6%E4%BA%BA%E8%BC%B8%E5%85%A5%E6%B3%95%EF%BC%8C%E6%AF%94%E8%B3%BD%E6%99%82%E7%94%A8/#istringstream","title":"istringstream\u8f38\u5165","text":"<p>\u5ba3\u544a<code>istringstream cin</code>\uff0c\u8986\u84cb\u539f\u672c\u7684cin</p> <p>\u81ea\u52d5\u8f38\u5165\uff1a <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nint main(){\n\n    istringstream cin(\"123456\");//\u8a3b\u89e3\u9019\u4e00\u884c\n\n    string s;\n    cin&gt;&gt;s;\n    cout&lt;&lt;s;\n}\n</code></pre></p> <p>\u63db\u884c(\u6574\u7406)\u81ea\u52d5\u8f38\u5165\uff1a <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nint main(){\n\n    istringstream cin(\"123456 \\\n7 8 9 10 \\\n11 12\");//\u8a3b\u89e3\u9019\u4e00\u884c\n\n    string s;\n    cin&gt;&gt;s;\n    cout&lt;&lt;s;\n}\n</code></pre></p> <p>\u624b\u52d5\u8f38\u5165\uff1a(\u8a18\u5f97\u9001\u51fa\u7a0b\u5f0f\u78bc\u6642\u8981\u5207\u56de\u624b\u52d5\u8f38\u5165 <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nint main(){\n\n    //istringstream cin(\"123456\");//\u8a3b\u89e3\u9019\u4e00\u884c\n\n    string s;\n    cin&gt;&gt;s;\n    cout&lt;&lt;s;\n}\n</code></pre></p>"},{"location":"%E6%89%93%E5%AD%97%E9%9F%B3%E6%95%88/","title":"\u6253\u5b57\u97f3\u6548","text":"<p>https://www.jb51.net/softs/876775.html#downintro2</p>"},{"location":"%E6%8C%87%E6%A8%99/","title":"\u6307\u6a19(\\*\u3001\\&)","text":"<p>\u5148\u770b\u5230\u7a0b\u5f0f\u78bc</p> <p>code <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define nn \"\\n\"\n\nvoid square(vector&lt;int&gt;&amp;arr){\n    arr.push_back(21);\n    return;\n}\n\nint main() {\n    int n=9;\n    int*k=&amp;n;\n    cout&lt;&lt;\"k_it: \"&lt;&lt;k&lt;&lt;nn; //k: 0x61fee8\n    cout&lt;&lt;\"k_val: \"&lt;&lt;*k&lt;&lt;nn; //k_val: 9\n    int&amp;m=n; //\u53d6\u5225\u540d\n    cout&lt;&lt;\"m: \"&lt;&lt;m&lt;&lt;nn; //m: 9\n    n+=1;     //\u4e0d\u52a0\u5728m\uff0c\u52a0\u5728n\n    cout&lt;&lt;\"m: \"&lt;&lt;m&lt;&lt;nn; //m: 10\n    pair&lt;int,int&gt;* p= new pair&lt;int,int&gt;{1,2};\n    cout&lt;&lt;\"p: \"&lt;&lt;p&lt;&lt;nn; //p: 0x11d7b80\n\n\n    vector&lt;int&gt;v={37};\n    square(v);\n\n    cout&lt;&lt;\"v: \";\n    for(int i:v){\n        cout&lt;&lt;i&lt;&lt;\" \"; //v: 37 21 \n    }\n\n}\n</code></pre> output <pre><code>k_it: 0x61fedc\nk_val: 9\nm: 9\nm: 10\np: 0x10c7b80\nv: 37 21 \n</code></pre></p> <p>\u770b\u5b8c\u7a0b\u5f0f\u78bc\uff0c\u63a5\u4e0b\u4f86\u4ecb\u7d39</p> <ol> <li>*</li> <li>&amp;</li> <li>new</li> </ol> <p>\u7684\u7528\u6cd5</p>"},{"location":"%E6%8C%87%E6%A8%99/#_1","title":"*\u3001&amp;\u7528\u6cd5","text":"<p>\u5206\u70ba\u300c\u5ba3\u544a\u6a21\u5f0f\u300d\u3001\u300c\u547c\u53eb\u6a21\u5f0f\u300d(\u975e\u6b63\u5f0f\u540d\u7a31\uff0c\u672c\u6587\u4e82\u6559)\u5982\u4e0b\u8868</p> \u7269\u4ef6 \u5ba3\u544a\u6a21\u5f0f \u547c\u53eb\u6a21\u5f0f * \u88fd\u4f5c\u5b58\u4f4d\u7f6e\u7684\u8b8a\u6578\u3002  [\u8a3b\u4e00] \u56de\u50b3\u8b8a\u6578(\u8a72\u8b8a\u6578\u70ba\u4f4d\u7f6e)\u7684\u503c\u3002  [\u8a3b\u4e8c] &amp; \u88fd\u4f5c\u5c0d\u65bc\u67d0\u8b8a\u6578\u7684\u5225\u540d\u3002   [\u8a3b\u4e09] \u53d6\u5f97\u8b8a\u6578(\u8a72\u8b8a\u6578\u70ba\u503c)\u7684\u5740(\u4f4d\u7f6e)\u3002  [\u8a3b\u56db] <p>\u4ee5\u4e0b\u70ba\u65b9\u4fbf\u8b1b\u89e3\uff0c\u4e0d\u6309\u7167\u9806\u5e8f</p>"},{"location":"%E6%8C%87%E6%A8%99/#_2","title":"[\u8a3b\u4e09]","text":"<p>$\u300c\\&amp;\u300d$ \u547c\u53eb\u6a21\u5f0f\uff0c\u53d6\u5f97\u8b8a\u6578(\u8a72\u8b8a\u6578\u70ba\u503c)\u7684\u5740(\u4f4d\u7f6e)\u3002</p> <ul> <li>\u683c\u5f0f\uff1a \\&amp;{\u8b8a\u6578} </li> <li>\u7bc4\u4f8b(\\&amp;\u8207\u8b8a\u6578\u9593\u6709\u7a7a\u683c\u4e0d\u5f71\u97ff\uff0c\u4f46\u5225\u4e82\u641e     <pre><code>int n=10;\ncout&lt;&lt; &amp; n; //0x61ff0c\n</code></pre></li> </ul>"},{"location":"%E6%8C%87%E6%A8%99/#_3","title":"[\u8a3b\u4e00]","text":"<p>$\u300c*\u300d$ \u5ba3\u544a\u6a21\u5f0f\uff0c\u88fd\u4f5c\u5b58\u4f4d\u7f6e\u7684\u8b8a\u6578\u3002</p> <ul> <li>\u683c\u5f0f\uff1a {\u8cc7\u6599\u578b\u614b}*{\u8b8a\u6578} </li> <li>\u7bc4\u4f8b(*\u9760\u8fd1\u8cc7\u6599\u578b\u614b\u6216\u662f\u8b8a\u6578\u4e0d\u5f71\u97ff\u7d50\u679c     :::danger     \u6ce8\u610f\u4e0d\u80fd <code>int * n, * k</code>\uff0c\u4e0d\u80fd\u9023\u7e8c\u4f7f\u7528\uff0c\u6b64\u6642\u7684k\u4e0d\u6703\u5982\u9810\u671f\u3002     :::     <pre><code>int n=10;\nint * k = &amp;n;\ncout&lt;&lt;k; //0x61ff08\n</code></pre></li> </ul>"},{"location":"%E6%8C%87%E6%A8%99/#_4","title":"[\u8a3b\u4e8c]","text":"<p>$\u300c*\u300d$ \u547c\u53eb\u6a21\u5f0f\uff0c\u56de\u50b3\u8b8a\u6578(\u8a72\u8b8a\u6578\u70ba\u4f4d\u7f6e)\u7684\u503c\u3002</p> <ul> <li>\u683c\u5f0f\uff1a *{\u8b8a\u6578} </li> <li>\u7bc4\u4f8b(*\u8207\u8b8a\u6578\u9593\u6709\u7a7a\u683c\u4e0d\u5f71\u97ff\uff0c\u4f46\u5225\u4e82\u641e     <pre><code>int n=10;\nint * k = &amp;n\ncout&lt;&lt; * k; //10\n</code></pre></li> </ul>"},{"location":"%E6%8C%87%E6%A8%99/#_5","title":"[\u8a3b\u56db]","text":"<p>$\u300c\\&amp;\u300d$ \u5ba3\u544a\u6a21\u5f0f\uff0c\u88fd\u4f5c\u5c0d\u65bc\u67d0\u8b8a\u6578\u7684\u5225\u540d\u3002</p> <ul> <li>\u683c\u5f0f\uff1a \\&amp;{\u8b8a\u6578} </li> <li>\u7bc4\u4f8b(\\&amp;\u8207\u8b8a\u6578\u9593\u6709\u7a7a\u683c\u4e0d\u5f71\u97ff\uff0c\u4f46\u5225\u4e82\u641e     <pre><code>int n=10;\nint &amp; c = n;\ncout&lt;&lt;c;  //10\nn+=1;\ncout&lt;&lt;c;  //11\n</code></pre></li> </ul>"},{"location":"%E6%8C%87%E6%A8%99/#new","title":"new \u7528\u6cd5","text":"<p>\u62ff\u4e00\u500b\u4f4d\u7f6e\u653e\u8b8a\u6578\uff0c\u56de\u50b3\u6307\u6a19 <pre><code>pair&lt;int,int&gt;* p= new pair&lt;int,int&gt;{1,2};\ncout&lt;&lt;p&lt;&lt;nn; //0x11d7b80\n</code></pre></p>"},{"location":"%E6%8E%92%E5%88%97%E7%94%9F%E6%88%90permutation%E7%AA%AE%E8%88%89/","title":"\u6392\u5217\u751f\u6210permutation","text":"<p>\u8cc7\u6599\u4f86\u6e90</p> <p>\u6709\u4e09\u500b\u51fd\u6578\u53ef\u4f7f\u7528</p> <p>\u652f\u63f4\u9663\u5217\u8cc7\u6599\u7d50\u69cb ( \u8a18\u61b6\u9ad4\u4f4d\u7f6e\u9023\u7e8c\u5132\u5b58 ) \u5982\uff1a - int v[N] - vector\\&lt;int&gt; v</p>"},{"location":"%E6%8E%92%E5%88%97%E7%94%9F%E6%88%90permutation%E7%AA%AE%E8%88%89/#is_permutation","title":"is_permutation( )","text":"<p>is_permutation( \u9663\u5217A\u958b\u982d\u6307\u91dd , \u9663\u5217A\u7d50\u5c3e\u6307\u91dd , \u9663\u5217B );</p> <p>\u5224\u65b7\u9663\u5217 B \u662f\u5426\u70ba\u9663\u5217 A \u6392\u5e8f\u5f8c\u7684\u7d50\u679c</p> <p>\u4e5f\u53ef\u628a\u5b83\u770b\u6210\u96c6\u5408\u6bd4\u5c0d\u5668(\u96c6\u5408\u4e0d\u770b\u9806\u5e8f)\uff0c\u5982\u4e0b\uff1a</p> <pre><code>bool is_permutation( \u9663\u5217A\u958b\u982d\u6307\u91dd , \u9663\u5217A\u7d50\u5c3e\u6307\u91dd , \u9663\u5217B ){\n\n    if A\u96c6\u5408\u5305\u542b\u65bcB\u96c6\u5408 {\n      return true;\n    }\n\n    reurn false;\n\n}\n</code></pre>"},{"location":"%E6%8E%92%E5%88%97%E7%94%9F%E6%88%90permutation%E7%AA%AE%E8%88%89/#_1","title":"\u8209\u4f8b\uff1a","text":"\u56de\u50b3true\uff1a  \u7a0b\u5f0f\u78bc\uff1a  <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nint main(){\n\n    char c[](\"123\");\n    char v[](\"132\");\n    cout&lt;&lt;is_permutation(c,c+3,v);\n\n}\n</code></pre>  \u8f38\u51fa\uff1a <pre><code>1\n</code></pre> \u56de\u50b3false\uff1a \u7a0b\u5f0f\u78bc\uff1a  <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nint main(){\n\n    char c[](\"123\");\n    char v[](\"133\");\n    cout&lt;&lt;is_permutation(c,c+3,v);\n\n}\n</code></pre>  \u8f38\u51fa\uff1a <pre><code>0\n</code></pre> \u4e0d\u540c\u9577\u5ea6\uff0c\u56de\u50b3true\uff1a  \u7a0b\u5f0f\u78bc\uff1a  <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nint main(){\n    char c[](\"123\");\n    char v[](\"1234\");\n    cout&lt;&lt;is_permutation(c,c+3,v);\n\n}\n</code></pre>  \u8f38\u51fa\uff1a <pre><code>1\n</code></pre>"},{"location":"%E6%8E%92%E5%88%97%E7%94%9F%E6%88%90permutation%E7%AA%AE%E8%88%89/#prev_permutation","title":"prev_permutation( )","text":"<p>prev_permutation( \u9663\u5217\u958b\u982d\u6307\u91dd , \u9663\u5217\u7d50\u5c3e\u6307\u91dd );</p> <p>\u627e\u51fa\u524d\u4e00\u500b\u5b57\u5178\u5e8f\u6392\u5217\uff0c\u627e\u5230\u56de\u50b3true\uff0c\u6c92\u627e\u5230\u56de\u50b3false</p> <p>\u7a0b\u5f0f\u78bc <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nint main(){\n    char c[](\"321\");\n    while(prev_permutation(c,c+3)){\n        cout&lt;&lt;c&lt;&lt;\"\\n\";\n    }\n}\n</code></pre> \u8f38\u51fa\uff1a <pre><code>312\n231\n213\n132\n123\n</code></pre></p>"},{"location":"%E6%8E%92%E5%88%97%E7%94%9F%E6%88%90permutation%E7%AA%AE%E8%88%89/#next_permutation","title":"next_permutation( )","text":"<p>next_permutation( \u9663\u5217\u958b\u982d\u6307\u91dd , \u9663\u5217\u7d50\u5c3e\u6307\u91dd );</p> <p>\u627e\u51fa\u524d\u4e00\u500b\u5b57\u5178\u5e8f\u6392\u5217\uff0c\u627e\u5230\u56de\u50b3true\uff0c\u6c92\u627e\u5230\u56de\u50b3false</p> <p>\u7a0b\u5f0f\u78bc <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nint main(){\n    char c[](\"123\");\n    while(next_permutation(c,c+3)){\n        cout&lt;&lt;c&lt;&lt;\"\\n\";\n    }\n}\n</code></pre> \u8f38\u51fa\uff1a <pre><code>132\n213\n231\n312\n321\n</code></pre></p>"},{"location":"%E6%8E%92%E5%88%97%E7%94%9F%E6%88%90permutation%E7%AA%AE%E8%88%89/#_2","title":"\u88fd\u4f5c\u7aae\u8209","text":"<p>\u7a0b\u5f0f\u78bc\uff1a <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nint main(){\n    char c[](\"12345\");\n    while(next_permutation(c,c+strlen(c))){\n        cout&lt;&lt;c&lt;&lt;\";\";\n    }\n}\n</code></pre></p> \u8f38\u51fa  <pre><code>12354;12435;12453;12534;12543;13245;13254;13425;13452;13524;13542;14235;14253;14325;14352;14523;14532;15234;15243;15324;15342;15423;15432;21345;21354;21435;21453;21534;21543;23145;23154;23415;23451;23514;23541;24135;24153;24315;24351;24513;24531;25134;25143;25314;25341;25413;25431;31245;31254;31425;31452;31524;31542;32145;32154;32415;32451;32514;32541;34125;34152;34215;34251;34512;34521;35124;35142;35214;35241;35412;35421;41235;41253;41325;41352;41523;41532;42135;42153;42315;42351;42513;42531;43125;43152;43215;43251;43512;43521;45123;45132;45213;45231;45312;45321;51234;51243;51324;51342;51423;51432;52134;52143;52314;52341;52413;52431;53124;53142;53214;53241;53412;53421;54123;54132;54213;54231;54312;54321;\n</code></pre>"},{"location":"%E6%8E%92%E5%BA%8Fsort/","title":"\u6392\u5e8f","text":"<p>\u8cc7\u6599\u4f86\u6e90\uff1ahttps://openhome.cc/zh-tw/algorithm/sort/abc/</p>"},{"location":"%E6%8E%92%E5%BA%8Fsort/#_2","title":"\u9078\u64c7\u6392\u5e8f","text":"<p>\u5982\u679c\u6392\u5e8f\u662f\u7531\u5c0f\u800c\u5927\uff0c\u5f9e\u5f8c\u7aef\u672a\u6392\u5e8f\u90e8\u4efd\u9078\u64c7\u4e00\u500b\u6700\u5c0f\u503c\uff0c\u4e26\u653e\u5165\u524d\u7aef\u5df2\u6392\u5e8f\u90e8\u4efd\u7684\u6700\u5f8c\u4e00\u500b\u3002\u4f8b\u5982\u6392\u5e8f\u524d 70\u300180\u300131\u300137\u300110\u30011\u300148\u300160\u300133\u300185\u3002</p> <p>[1] 80 31 37 10 70 48 60 33 85\uff08\u9078\u51fa\u6700\u5c0f\u503c 1\uff0c1\u820770\u4ea4\u63db\uff09</p> <p>[1 10] 31 37 80 70 48 60 33 85\uff08\u9078\u51fa\u6700\u5c0f\u503c 10\uff0c10\u820780\u4ea4\u63db\uff09</p> <p>[1 10 31] 37 80 70 48 60 33 85\uff08\u9078\u51fa\u6700\u5c0f\u503c 31\uff09</p> <p>[1 10 31 33] 80 70 48 60 37 85\uff08\u9078\u51fa\u6700\u5c0f\u503c 33\uff0c33\u820737\u4ea4\u63db\uff09</p> <p>[1 10 31 33 37] 70 48 60 80 85\uff08\u9078\u51fa\u6700\u5c0f\u503c 37\uff0c37\u820780\u4ea4\u63db\uff09</p> <p>[1 10 31 33 37 48] 70 60 80 85\uff08\u9078\u51fa\u6700\u5c0f\u503c 48\uff0c48\u820770\u4ea4\u63db\uff09</p> <p>[1 10 31 33 37 48 60] 70 80 85\uff08\u9078\u51fa\u6700\u5c0f\u503c 60\uff0c60\u820770\u4ea4\u63db\uff09</p> <p>[1 10 31 33 37 48 60 70] 80 85\uff08\u9078\u51fa\u6700\u5c0f\u503c 70\uff09</p> <p>[1 10 31 33 37 48 60 70 80] 85\uff08\u9078\u51fa\u6700\u5c0f\u503c 80\uff09</p> <p>[1 10 31 33 37 48 60 70 80 85]\uff08\u9078\u51fa\u6700\u5c0f\u503c 85\uff09</p>"},{"location":"%E6%8E%92%E5%BA%8Fsort/#_3","title":"\u63d2\u5165\u6392\u5e8f","text":"<p>\u6bcf\u6b21\u5f9e\u5f8c\u7aef\u672a\u6392\u5e8f\u90e8\u4efd\u53d6\u5f97\u6700\u524d\u7aef\u7684\u503c\uff0c\u7136\u5f8c\u63d2\u5165\u524d\u7aef\u5df2\u6392\u5e8f\u90e8\u4efd\u7684\u9069\u7576\u4f4d\u7f6e\u3002\u4f8b\u5982\u6392\u5e8f\u524d 92\u300177\u300167\u30018\u30016\u300184\u300155\u300185\u300143\u300167\u3002</p> <p>[77 92] 67 8 6 84 55 85 43 67\uff08\u5c07 77 \u63d2\u5165 92 \u524d\uff09</p> <p>[67 77 92] 8 6 84 55 85 43 67\uff08\u5c07 67 \u63d2\u5165 77 \u524d\uff09</p> <p>[8 67 77 92] 6 84 55 85 43 67\uff08\u5c07 8 \u63d2\u5165 67 \u524d\uff09</p> <p>[6 8 67 77 92] 84 55 85 43 67\uff08\u5c07 6 \u63d2\u5165 8 \u524d\uff09</p> <p>[6 8 67 77 84 92] 55 85 43 67\uff08\u5c07 84 \u63d2\u5165 92 \u524d\uff09</p> <p>[6 8 55 67 77 84 92] 85 43 67\uff08\u5c07 55 \u63d2\u5165 67 \u524d\uff09</p> <p>[6 8 55 67 77 84 85 92] 43 67\uff08\u5c07 85 \u63d2\u5165 92 \u524d\uff09</p> <p>[6 8 43 55 67 77 84 85 92] 67\uff08\u5c07 43 \u63d2\u5165 55 \u524d\uff09</p> <p>[6 8 43 55 67 67 77 84 85 92]\uff08\u5c07 67 \u63d2\u5165 77 \u524d\uff09</p>"},{"location":"%E6%8E%92%E5%BA%8Fsort/#_4","title":"\u6c23\u6ce1\u6392\u5e8f","text":"<p>\u6392\u5e8f\u6642\u82e5\u662f\u5f9e\u5c0f\u5230\u5927\uff0c\u4ee5\u6bd4\u8f03\u76f8\u9130\u5143\u7d20\u7684\u65b9\u5f0f\uff0c\u5c07\u8f03\u5927\u5143\u7d20\u4ea4\u63db\u81f3\u53f3\u7aef\uff0c\u8f03\u5927\u7684\u5143\u7d20\u6703\u4e0d\u65b7\u5f80\u53f3\u79fb\u52d5\uff0c\u50cf\u662f\u6c23\u6ce1\u4e00\u6a23\uff0c\u76f4\u5230\u9069\u7576\u4f4d\u7f6e\u70ba\u6b62\u3002\u4f8b\u5982\u6392\u5e8f\u524d 95\u300127\u300190\u300149\u300180\u300158\u30016\u30019\u300118\u300150\u3002</p> <p>27 90 49 80 58 6 9 18 50 [95]\uff0895 \u6d6e\u51fa\uff09</p> <p>27 49 80 58 6 9 18 50 [90 95]\uff0890 \u6d6e\u51fa\uff09</p> <p>27 49 58 6 9 18 50 [80 90 95]\uff0880 \u6d6e\u51fa\uff09</p> <p>27 49 6 9 18 50 [58 80 90 95]\uff0858 \u6d6e\u51fa\uff09</p> <p>27 6 9 18 49 [50 58 80 90 95]\uff0850 \u6d6e\u51fa\uff09</p> <p>6 9 18 27 [49 50 58 80 90 95]\uff0849 \u6d6e\u51fa\uff09</p> <p>6 9 18 [27 49 50 58 80 90 95]\uff0827 \u6d6e\u51fa\uff09</p> <p>6 9 [18 27 49 50 58 80 90 95]\uff0818 \u6d6e\u51fa\uff09</p> <p>6 [9 18 27 49 50 58 80 90 95]\uff089 \u6d6e\u51fa\uff09</p> <p>[6 9 18 27 49 50 58 80 90 95]\uff086 \u6d6e\u51fa\uff09</p> <p>\u6c23\u6ce1\u6392\u5e8f\u6cd5\u53ef\u4ee5\u5229\u7528\u65d7\u6a19\u65b9\u5f0f\u7a0d\u5fae\u6e1b\u5c11\u6bd4\u8f03\u6642\u9593\uff0c\u7576\u5c0b\u8a2a\u5b8c\u672a\u6392\u5e8f\u90e8\u4efd\u90fd\u6c92\u6709\u767c\u751f\u4efb\u4f55\u4ea4\u63db\u52d5\u4f5c\uff0c\u8868\u793a\u6392\u5e8f\u5df2\u7d93\u5b8c\u6210\uff0c\u4e0d\u518d\u9032\u884c\u5f8c\u7e8c\u7684\u6bd4\u8f03\u8207\u4ea4\u63db\u52d5\u4f5c\u3002</p>"},{"location":"%E6%8E%92%E5%BA%8Fsort/#merge-sot","title":"merge sot \u5408\u4f75\u6f14\u7b97\u6cd5","text":"<p>\u6642\u9593\u8907\u96dc\u5ea6 O(log n) \u5f71\u7247\u4f86\u6e90\uff1ahttps://www.youtube.com/watch?v=C9Xes8wH6Co</p>"},{"location":"%E6%8E%92%E5%BA%8Fsort/#_5","title":"\u81ea\u5b9a\u7fa9\u9806\u5e8f","text":"<p>\u7a0b\u5f0f\u78bc\uff1a</p> <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nbool cmp(int x,int y){\n    return x&gt;y;\n}\n\nint main(){\n    int v[10]={6,4,3,5,8};\n    sort(v,v+5,cmp);\n    for(int i=0;i&lt;5;i++){\n        cout&lt;&lt;v[i]&lt;&lt;\" \";\n    }\n}\n</code></pre> <p>\u8f38\u51fa\uff1a <pre><code>8 6 5 4 3\n</code></pre> \u4e00\u3001 \u5148\u5ba3\u544a\u4e00\u500b\u9663\u5217<code>int v[n]={6,4,3,5,8}</code>\uff0c\u5171n=5\u9805\u3002 \u4e8c\u3001 \u628ax\u60f3\u6210\u5de6\u908a\uff08\u524d\u4e00\u9805\uff09\uff0cy\u60f3\u6210\u53f3\u908a\uff08\u5f8c\u4e00\u9805\uff09\uff0c\u56de\u50b3\u662f\u6700\u5f8c\u7d50\u679c(\u5de6\u908a&gt;\u53f3\u908a) \u8981\u6ce8\u610f\u4e0d\u80fd\u8b93cmp\u8b8a\u6578x\u3001y\u8cc7\u6599\u578b\u614b\u70ba<code>auto</code>\uff0c\u6703\u932f\u8aa4</p> <p>\u8f38\u51fa\uff1a <pre><code>8 6 5 4 3\n</code></pre></p> <p>\u4e5f\u53ef\u4ee5\u591a\u500b\u6b04\u4f4d</p> <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nstruct st{\n    int x;\n    int y;\n}v[10];\nbool cmp(st a,st b){\n    return a.y&gt;b.y;\n}\nint main(){\n    istringstream cin(\"6 4 3 5 8 7\");\n\n    for(int i=0;i&lt;3;i++){\n        cin&gt;&gt;v[i].x&gt;&gt;v[i].y;\n    }\n    sort(v,v+3,cmp);\n    for(int i=0;i&lt;3;i++){\n        cout&lt;&lt;v[i].x&lt;&lt;\" \"&lt;&lt;v[i].y&lt;&lt;\"\\n\";\n    }\n}\n</code></pre> <p>\u8f38\u51fa\uff1a <pre><code>8 7\n3 5\n6 4\n</code></pre> \u4ee5\u4e0a\u662f\u6309\u7167v[]\u4e2d\u6bcf\u500bst\u5143\u7d20\u7684y\u70ba\u4f9d\u64da\uff0c\u4e00\u6a23\u4e0d\u80fd\u7528auto\u70ba\u578b\u614b</p>"},{"location":"%E6%90%9C%E5%B0%8B%E3%80%81%E4%BA%8C%E5%88%86%E6%90%9C%E5%B0%8B%E3%80%81%E8%B7%B3%E8%BA%8D%E4%BA%8C%E5%88%86%E6%90%9C/","title":"\u641c\u5c0b\u3001\u4e8c\u5206\u641c\u5c0b\u3001\u8df3\u8e8d\u4e8c\u5206\u641c","text":""},{"location":"%E6%90%9C%E5%B0%8B%E3%80%81%E4%BA%8C%E5%88%86%E6%90%9C%E5%B0%8B%E3%80%81%E8%B7%B3%E8%BA%8D%E4%BA%8C%E5%88%86%E6%90%9C/#_1","title":"\u524d\u63d0","text":"<p>distance(it_a , it_b); \u8a08\u7b97\u5169\u500b\u8fed\u4ee3\u5668\u4e4b\u9593\u7684\u8ddd\u96e2 <pre><code>distance(v.begin(),find(v.begin(),v.end(),5))\n</code></pre> \u56de\u50b3\u627e\u5230\u7684\u4f4d\u7f6e</p>"},{"location":"%E6%90%9C%E5%B0%8B%E3%80%81%E4%BA%8C%E5%88%86%E6%90%9C%E5%B0%8B%E3%80%81%E8%B7%B3%E8%BA%8D%E4%BA%8C%E5%88%86%E6%90%9C/#_2","title":"\u641c\u5c0b","text":"<p>\u4f7f\u7528\u65bc\u672a\u6392\u5e8f\u4e4b\u8cc7\u6599 \u51fd\u6578\u7684find\u70baO(n) (\u82e5\u5728\u5df2\u7d93\u6392\u5e8f(set\u3001map)\u7684find\u70baO(log n)</p> <p>\u51fd\u6578\u641c\u5c0b\uff1a <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define nn \"\\n\";\nint main(){\n    vector&lt;int&gt;v;\n    v.push_back(2);\n    v.push_back(3);\n    v.push_back(1);\n    v.push_back(5);\n    v.push_back(6);\n    for(int i:v){\n        cout&lt;&lt;i&lt;&lt;\" \";\n    }cout&lt;&lt;nn;\n    cout&lt;&lt;\"5\u7684\u4f4d\u7f6e\uff1a \"&lt;&lt; distance(v.begin(),find(v.begin(),v.end(),5));\n}\n</code></pre> output\uff1a <pre><code>2 3 1 5 6 \n5\u7684\u4f4d\u7f6e\uff1a 3\n</code></pre></p>"},{"location":"%E6%90%9C%E5%B0%8B%E3%80%81%E4%BA%8C%E5%88%86%E6%90%9C%E5%B0%8B%E3%80%81%E8%B7%B3%E8%BA%8D%E4%BA%8C%E5%88%86%E6%90%9C/#_3","title":"\u4e8c\u5206\u641c\u5c0b","text":"<p>\u53ea\u53ef\u7528\u65bc\u5df2\u6392\u5e8f\u4e4b\u8cc7\u6599 \u4f8b\u5982\uff1aset\u3001map\u3001multiset\u3001multiset\u3001\u5df2\u6392\u5e8f\u9663\u5217</p>"},{"location":"%E6%90%9C%E5%B0%8B%E3%80%81%E4%BA%8C%E5%88%86%E6%90%9C%E5%B0%8B%E3%80%81%E8%B7%B3%E8%BA%8D%E4%BA%8C%E5%88%86%E6%90%9C/#find","title":"\u81ea\u88fdfind","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define nn \"\\n\";\nint fi(int v[],int size,int n){\n    int L=0,R=size-1;\n    int mi;\n    while(L&lt;=R){//\u5224\u5b9a\u662f\u5426\u80fd\u627e\u5230\n        mi=(L+R)/2;\n        if(v[mi]==n){\n            return mi;\n        }\n        if(v[mi]&gt;n){\n            R=mi-1;\n        }\n        else{\n            L=mi+1;\n        }\n    }\n    return -1;//\u6c92\u627e\u5230\n}\n\nint main(){\n    int v[10]={1,3,5,7,9,8,6,4,2,0};\n    sort(v,v+10);\n    cout&lt;&lt;fi(v,10,7);\n}\n</code></pre>"},{"location":"%E6%90%9C%E5%B0%8B%E3%80%81%E4%BA%8C%E5%88%86%E6%90%9C%E5%B0%8B%E3%80%81%E8%B7%B3%E8%BA%8D%E4%BA%8C%E5%88%86%E6%90%9C/#_4","title":"\u975e\u81ea\u88fd","text":"<p>\u7a2e\u985e\u6709: 1. find \u76f4\u63a5\u56de\u50b3\u4f4d\u7f6e 2. lower_bound \u56de\u50b3\u5927\u65bc\u7b49\u65bcn\u7684\u300c\u6700\u5c0f\u503c\u300d 3. upper_bound \u56de\u50b3\u5927\u65bcn\u7684\u300c\u6700\u5c0f\u503c\u300d</p> <p>\u7db2\u7ad9\u8cc7\u6599\uff1a https://blog.csdn.net/tjpuacm/article/details/26389441</p>"},{"location":"%E6%90%9C%E5%B0%8B%E3%80%81%E4%BA%8C%E5%88%86%E6%90%9C%E5%B0%8B%E3%80%81%E8%B7%B3%E8%BA%8D%E4%BA%8C%E5%88%86%E6%90%9C/#find_1","title":"find","text":"<ol> <li>\u82e5\u8cc7\u6599\u7d50\u69cb\u70ba\u9663\u5217\uff0c\u76f4\u63a5\u4f7f\u7528lower_bound\uff0c\u56e0\u70balower_bound\u5305\u542b=\uff0c\u518d\u6392\u9664\u5927\u65bc\u7684\u5373\u53ef\u3002</li> <li>set\u3001map\uff1a <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define nn \"\\n\";\nint main(){\n    set&lt;int&gt;s;\n    s.insert(1);\n    s.insert(5);\n    s.insert(6);\n    s.insert(7);\n    s.insert(4);\n\n    if(s.find(5)!=s.end()){\n        cout&lt;&lt;\"found\";\n    }\n    else{\n        cout&lt;&lt;\"Not found\";\n    }\n\n    cout&lt;&lt;nn;\n\n    if(s.find(2)!=s.end()){\n        cout&lt;&lt;\"found\";\n    }\n    else{\n        cout&lt;&lt;\"Not found\";\n    }\n}\n</code></pre></li> </ol>"},{"location":"%E6%90%9C%E5%B0%8B%E3%80%81%E4%BA%8C%E5%88%86%E6%90%9C%E5%B0%8B%E3%80%81%E8%B7%B3%E8%BA%8D%E4%BA%8C%E5%88%86%E6%90%9C/#lower_boundupper_boundolog-n","title":"lower_bound\u3001upper_bound\uff1aO(log n)","text":"<p>lower\u7684\u610f\u7fa9\u662f\u5c0d\u65bc\u7d66\u5b9a\u7684\u5df2\u7d93\u6392\u597d\u5e8f\u7684a\uff0c key\u6700\u65e9\u80fd\u63d2\u5165\u5230\u90a3\u500b\u4f4d\u7f6e 0 1 | 2 2 3 \u6240\u4ee52\u6700\u65e9\u63d2\u5165\u52302\u865f\u4f4d\u7f6e\u3002</p> <p>upper\u7684\u610f\u7fa9\u662f\u5c0d\u65bc\u7d66\u5b9a\u7684\u5df2\u7d93\u6392\u597d\u5e8f\u7684a\uff0c key\u6700\u665a\u80fd\u63d2\u5165\u5230\u90a3\u500b\u4f4d\u7f6e 0 1 2 2 | 3 \u6240\u4ee52\u6700\u665a\u63d2\u5165\u52304\u865f\u4f4d\u7f6e\u3002</p>"},{"location":"%E6%90%9C%E5%B0%8B%E3%80%81%E4%BA%8C%E5%88%86%E6%90%9C%E5%B0%8B%E3%80%81%E8%B7%B3%E8%BA%8D%E4%BA%8C%E5%88%86%E6%90%9C/#_5","title":"\u57fa\u672c","text":"<p>\u9663\u5217\uff1a</p> <p><pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define nn \"\\n\";\nint main(){\n    vector &lt;int&gt; v={1,2,5,4,7,8,9};\n    sort(v.begin(),v.end());\n    cout&lt;&lt;*lower_bound(v.begin(),v.end(),7);\n    cout&lt;&lt;nn;\n    cout&lt;&lt;*upper_bound(v.begin(),v.end(),7);\n}\n</code></pre> <pre><code>7\n8\n</code></pre></p> <p>sort\u3001map <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define nn \"\\n\";\nint main(){\n    set&lt;int&gt;s;\n    s.insert(1);\n    s.insert(5);\n    s.insert(6);\n    s.insert(7);\n    s.insert(4);\n    cout&lt;&lt;*s.lower_bound(4);\n    cout&lt;&lt;nn;\n    cout&lt;&lt;*s.upper_bound(4);\n}\n</code></pre> output: <pre><code>4\n5\n</code></pre></p>"},{"location":"%E6%90%9C%E5%B0%8B%E3%80%81%E4%BA%8C%E5%88%86%E6%90%9C%E5%B0%8B%E3%80%81%E8%B7%B3%E8%BA%8D%E4%BA%8C%E5%88%86%E6%90%9C/#_6","title":"\u4f7f\u7528\u51fd\u6578\u9078\u64c7\u898f\u5247","text":"<p><pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define nn \"\\n\";\n\nstruct st{\n    int x;\n    string y;\n};\nvector&lt;st&gt;v;\n\nbool cmp(st a,st b){\n    return a.x&lt;b.x;// \u544a\u8a34\u7a0b\u5f0f\u8981\u6839\u64daX\u4f86\u5c0b\u627e\uff0clower_bound\u3001upper_bound\u6b63\u5e38\u4f7f\u7528\u6642\uff0c\u90fd\u4f7f\u7528&lt;\n}\n\nint main(){\n    v.push_back({1,\"111\"});\n    v.push_back({5,\"5555\"});\n    v.push_back({6,\"666\"});\n    v.push_back({10,\"1010\"});\n    v.push_back({20,\"2020\"});\n    cout&lt;&lt; (lower_bound(v.begin(),v.end(),st{10,\"\"},cmp)-&gt;y);\n    cout&lt;&lt;nn;\n    cout&lt;&lt; (upper_bound(v.begin(),v.end(),st{10,\"\"},cmp)-&gt;y);\n}\n</code></pre> output: <pre><code>1010\n2020\n</code></pre></p> <p>\u66ff\u63db\u6210\u5927\u5230\u5c0f\u6392\u5e8f</p> <p><pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define nn \"\\n\";\n\nstruct st{\n    int x;\n    string y;\n};\nvector&lt;st&gt;v;\n\nbool cmp(st a,st b){\n    return a.x&gt;b.x;// \u544a\u8a34\u7a0b\u5f0f\u8981\u6839\u64daX\u4f86\u5c0b\u627e\uff0c\u800c\u4e14\u662f\u5927\u5230\u5c0f\u6392\u5e8f\n}\n\nint main(){\n    v.push_back({1,\"111\"});\n    v.push_back({5,\"5555\"});\n    v.push_back({6,\"666\"});\n    v.push_back({10,\"1010\"});\n    v.push_back({20,\"2020\"});\n\n    reverse(v.begin(),v.end());\n\n\n    cout&lt;&lt; (lower_bound(v.begin(),v.end(),st{10,\"\"},cmp)-&gt;y);\n    cout&lt;&lt;nn;\n    cout&lt;&lt; (upper_bound(v.begin(),v.end(),st{10,\"\"},cmp)-&gt;y);\n}\n</code></pre> output: <pre><code>1010\n666\n</code></pre></p> <p>\u767c\u73fe\u4e86\u55ce\uff0cupper_bound\u5c31\u8b8a\u6210\u300c\u627e\u5230\u7b2c\u4e00\u500b\u5c0f\u65bcX\u7684\u6578\u5b57\u300d</p>"},{"location":"%E6%90%9C%E5%B0%8B%E3%80%81%E4%BA%8C%E5%88%86%E6%90%9C%E5%B0%8B%E3%80%81%E8%B7%B3%E8%BA%8D%E4%BA%8C%E5%88%86%E6%90%9C/#p-2-6-two-number-problem","title":"P-2-6. Two-Number problem","text":"<p>\u984c\u76ee\uff1ahttps://judge.tcirc.tw/ShowProblem?problemid=d015</p> <p>\u5047\u8a2d A \u70ba m \u500b\u76f8\u7570\u6574\u6578\u7684\u96c6\u5408\uff0cB \u70ba n \u500b\u76f8\u7570\u6574\u6578\u7684\u96c6\u5408\uff0c\u800c K \u662f\u4e00\u500b\u6574\u6578\u3002\u8acb\u8a08\u7b97\u6709\u591a\u5c11\u5c0d(a, b)\u7684\u7d44\u5408\u6eff\u8db3 a \u5c6c\u65bc A, b \u5c6c\u65bc B \u4e14 a+b = K\u3002 Time limit: 1 \u79d2 \u8f38\u5165\u683c\u5f0f\uff1a\u8f38\u5165\u53ef\u80fd\u6709\u591a\u884c\uff0c\u7b2c\u4e00\u884c\u6709\u4e09\u500b\u6574\u6578 m, n \u8207 K\uff0c\u7b2c\u4e8c\u884c\u6709 m \u500b\u6574\u6578\u662f A \u4e2d\u7684\u5143\u7d20\uff0c\u7b2c\u4e09\u884c\u6709 n \u500b\u6574\u6578 B \u4e2d\u7684\u5143\u7d20\u4e00\u7b46\u6e2c\u8cc7\u3002\u540c\u4e00\u884c\u76f8\u9130\u6578\u5b57\u9593\u4ee5\u7a7a\u767d\u9593\u9694\u3002 \u5169\u96c6\u5408\u5143\u7d20\u500b\u6578\u5747\u4e0d\u8d85\u904e 10 \u842c\uff0c\u6574\u6578\u7684\u7d55\u5c0d\u503c\u4e0d\u8d85\u904e 10 \u5104\u3002 \u8f38\u51fa\u683c\u5f0f\uff1a\u8f38\u51fa\u7d44\u5408\u500b\u6578\u3002 \u7bc4\u4f8b\u8f38\u5165\uff1a 3 4 2 1 6 -3 5 1 -1 -3 \u7bc4\u4f8b\u8f38\u51fa\uff1a 2</p> <p>\u89e3\u7b54 <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nint main(){\n    ios::sync_with_stdio(0),cin.tie(0);\n    int m,n,k;\n    cin&gt;&gt;m&gt;&gt;n&gt;&gt;k;\n\n    //a\u653e\u9663\u5217\n    int v[m];\n    for(int i=0;i&lt;m;i++){\n        cin&gt;&gt;v[i];\n    }\n\n    //b\u653eset(\u8981\u6392\u5e8f)\n    set&lt;int&gt;s;\n    for(int i=0;i&lt;n;i++){\n        int x;\n        cin&gt;&gt;x;\n        s.insert(x);\n    }\n\n\n    //\u7531a\u641cb\u4e2d\u662f\u5426\u6709k-a\n    int ans=0;\n    for(int i=0;i&lt;m;i++){\n        if(s.find(k-v[i])!=s.end()){\n            ans++;\n        }\n    }\n    cout&lt;&lt;ans;\n}\n</code></pre></p>"},{"location":"%E6%90%9C%E5%B0%8B%E3%80%81%E4%BA%8C%E5%88%86%E6%90%9C%E5%B0%8B%E3%80%81%E8%B7%B3%E8%BA%8D%E4%BA%8C%E5%88%86%E6%90%9C/#_7","title":"\u8df3\u8e8d\u4e8c\u5206\u641c","text":"\u6ce8\u610f!!! \u88e1\u9762\u662fwhile\u4e0d\u662fif  <p>\u9019\u662f\u6bd4\u8f03\u7279\u5225\u7684\u4e8c\u5206\u641c\u5c0b\uff0c\u7528\u4f86\u89e3\u6c7a\u4e00\u500b\u6578\u5217\u53ef\u4ee5\u5206\u5169\u534a\uff0c\u627e\u5230\u524d\u534a\u908a\u7684\u6700\u5f8c\u4e00\u9805(\u4f8b\u5982\uff1a\u5927\u65bc\u76ee\u6a19\u6578\u503c\u3001\u5c0f\u65bc\u76ee\u6a19\u6578\u503c)\u4ed6\u7684\u5c0d\u8c61\u4e5f\u662f\u5df2\u6392\u5e8f\u7684\u9663\u5217\uff0c\u4ee5\u4e8c\u5206\u641c\u627e\u51fa\u5c0f\u65bc\u6216\u662f\u5c0f\u65bc\u7b49\u65bc\u76ee\u6a19\u6578\u503c\u7684index</p> <p>\u6211\u5011\u4f86\u770b\u770b\u5b83\u7684\u904b\u4f5c\u904e\u7a0b\uff1a</p> <p>\u4ed6\u5148\u628a\u8df3\u8e8d\u7684\u8ddd\u96e2(junp)\u8a2d\u70ba\u7e3d\u5927\u5c0f\u7684\u4e00\u534a \u63a5\u8457\u78ba\u8a8d\u8df3\u4e86\u4e4b\u5f8c\u7684 v[junp] \u662f\u5426\u5c0f\u65bc\u76ee\u6a19 \u5982\u679c\u5c0f\u65bc\uff1a\u4ee3\u8868\u53ef\u4ee5\u8df3(\u5c07index\u52a0\u4e0ajunp) \u5982\u679c\u4e0d\u6703\uff1a\u90a3\u5c31\u628a\u8df3\u8e8d\u7684\u8ddd\u96e2\u9664\u4ee5\u4e8c\u76f4\u5230\u53ef\u4ee5\u8df3\uff0c\u6216\u662fjump=0\uff0c\u5982\u679c\u7b49\u65bc\u96f6 \u5c31\u4ee3\u8868\u5df2\u7d93\u627e\u5230\u4e86\u5c0f\u65bc\u76ee\u6a19\u6578\u503c\u7684\u6700\u5927\u503c \u8df3\u4e86\u7b2c\u4e00\u6b21\u4e4b\u5f8c\u5c31\u6703\u9047\u5230\u554f\u984c\uff1a\u6709\u53ef\u80fd\u6703\u8d85\u51fa\u9663\u5217\u7bc4\u570d\uff0c\u5c0e\u81f4\u7121\u6cd5\u627e\u5230v[index]\uff0c</p> <p>\u6240\u4ee5\u5224\u65b7\u53ef\u4ee5\u8df3\u7684\u689d\u4ef6\u70ba\uff1a 1.\u8df3\u4e86\u4e0d\u6703\u8d85\u51fa\u9663\u5217\u7bc4\u570d 2.\u8df3\u4e86\u4e4b\u5f8c\u80fd\u5920\u5c0f\u65bc\u76ee\u6a19\u6578\u503c </p> <p>\u5168\u90e8\u53ef\u5206\u70ba\u5169\u534a\uff1a\u5c0f\u65bc6\u3001\u5927\u65bc6 \u6211\u5011\u4f86\u770b\u627e\u5c0b\u5c0f\u65bc\u7269\u6a19\u6578\u503c(6)\u7684\u6700\u5927\u503c\u4f8b\u5b50\uff1a</p> <p>int v[10]={1,3,4,5,7,9,11,14,15,19};  //\u905e\u589e\u9663\u5217 int L=0,R=10;  //\u8d77\u9ede\u3001\u7d42\u9ede int x=6  //\u76ee\u6a19\u6578\u503c int index;  //\u4f4d\u7f6e</p> <p></p> <p>\u5099\u8a3b\uff1agif\u88fd\u4f5c</p> <p>\u7a0b\u5f0f\u78bc\uff1a <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define nn \"\\n\"\nint main(){\n    int v[10]={1,3,4,5,7,9,11,14,15,19};\n    int L=0,R=10;\n    int x=6;\n    int index=L;\n\n    for (int jump = (R-L)/2; jump ;jump/= 2) {\n        while (index+jump&lt;R &amp;&amp; v[index+jump]&lt;x){\n            index += jump;\n        }\n    }\n    cout&lt;&lt;nn&lt;&lt;index;\n}\n</code></pre> \u8f38\u51fa\uff1a <pre><code>3\n</code></pre></p> <p>\u5224\u65b7\u300c\u662f\u5426\u6709\u627e\u5230\u300d \u7a0b\u5f0f\u78bc\uff1a <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define nn \"\\n\"\n#define int long long\n\nint v[1000];   // index\nint n;\n\nint jumpfind(int x) { // find_the_last(&lt;=x)\n    int i = 0;\n    for (int j = n / 2; j &gt; 0; j &gt;&gt;= 1) {\n        while ((i + j &lt;n) &amp;&amp; (v[i + j] &lt;= x )) {\n            i += j;\n        }\n    }\n    // \u6aa2\u67e5\u662f\u5426\u627e\u5230\u7b26\u5408\u689d\u4ef6\u7684\u5143\u7d20\n    if (v[i] &lt;= x) {\n        return i;\n    } else {\n        return  n; // \u6c92\u627e\u5230\uff0c\u8fd4\u56den\n    }\n}\n\nsigned main() {\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n\n    istringstream cin(\"6 \\\n1 2 5 7 8 9\");\n\n    cin&gt;&gt;n;\n    for (int i = 0; i &lt; 6; i++) {\n        cin &gt;&gt; v[i];\n    }\n\n    int x = 8;\n    cout &lt;&lt; \"x: \" &lt;&lt; jumpfind(x) &lt;&lt; nn;\n\n    return 0;\n}\n</code></pre></p> <p>\u524d\u9762\u63d0\u5230\u53ef\u5206\u70ba\u5169\u534a\uff0c\u5c0f\u65bc6\u3001\u5927\u65bc6 \u5728\u7b2c11\u884c\u7684<code>while (index+jump&lt;R &amp;&amp; v[index+jump]&lt;x){</code>\u4e2d\uff0c<code>v[index+jump]&lt;x</code>\u5c31\u662f\u7528\u4f86\u5206\u8fa8\u662f\u5426\u5c0f\u65bc6\u8981\u5982\u4f55\u601d\u8003\u5beb\u5927\u65bc6\u9084\u662f\u5c0f\u65bc6\u5462\uff1f \u8d77\u9ede\u4f4d\u7f6e\u5c0f\u65bc6\uff0c\u6240\u4ee5\u5c31\u662f\u5c0f\u65bc6</p> <p>\u8df3\u8e8d\u4e8c\u5206\u641c\u9069\u5408\u7528\u65bc\u6709\u55ae\u8abf\u6027\u7684\u984c\u76ee\u5594 </p> <p>\u5728\u8caa\u5fc3\u6f14\u7b97\u6cd5\u6709\u4e00\u984c\u300cP-4-9. \u57fa\u5730\u53f0 (APCS201703) \u300d\u53ef\u4ee5\u7df4\u7fd2\u770b\u770b</p>"},{"location":"%E6%93%B4%E5%B1%95%E6%AD%90%E5%B9%BE%E9%87%8C%E5%BE%97%E6%BC%94%E7%AE%97%E6%B3%95/","title":"\u64f4\u5c55\u6b50\u5e7e\u91cc\u5f97\u6f14\u7b97\u6cd5 Extended Euclidean Algorithm","text":"<p>\u73fe\u5728\u8981\u4f86\u4ecb\u7d39\u8f3e\u8f49\u76f8\u9664\u6cd5\u7684\u64f4\u5145\u7b97\u6cd5\u3002</p>"},{"location":"%E6%93%B4%E5%B1%95%E6%AD%90%E5%B9%BE%E9%87%8C%E5%BE%97%E6%BC%94%E7%AE%97%E6%B3%95/#1","title":"\u5b9a\u74061","text":"<p>$a, b \\in \\mathbb{Z}$ \u82e5 $d = \\gcd(a, b)$\uff0c\u5247\u5b58\u5728 $s, t \\in \\mathbb{Z}$ \u4f7f\u5f97 $as + bt = d$</p>"},{"location":"%E6%93%B4%E5%B1%95%E6%AD%90%E5%B9%BE%E9%87%8C%E5%BE%97%E6%BC%94%E7%AE%97%E6%B3%95/#_1","title":"\u8b49\u660e","text":"<p>\u4f7f\u7528\u8f3e\u8f49\u76f8\u9664\u6cd5\u6642\uff0c\u4ee4\u7b2c $i$ \u6b21\u905e\u8ff4\u4e4b\u5f8c\uff0c$a$ \u8b8a\u6210\u4e86 $a_i$\uff0c$b$ \u8b8a\u6210\u4e86 $b_i$\u3002\u53ef\u4ee5\u767c\u73fe\uff0c\u6700\u5f8c\u4e00\u6b65\u6642 $a$ \u66fe\u8b8a\u6210 $0$\uff0c$b$ \u66fe\u8b8a\u6210 $d$\u3002\u6b64\u6642$0 \\times a + 1 \\times b = d$ \u3002</p> <p>\u4ee4 $a_{i+1}x' + b_{i+1}y' = d$\u3002\u6839\u64da\u8f3e\u8f49\u76f8\u9664\u6cd5\u7684\u5167\u5bb9\uff1a$a_{i+1} = b_i \\mod a_i$\uff0c$b_{i+1} = a_i$\u3002\u56e0\u6b64\u4ee3\u5165\u5f8c\u5f97\u77e5</p> <p>$$ (b_i\\mod a_i)x' + a_iy' = d $$</p> <p>\u6ce8\u610f\u5230 $b_i \\mod a_i = b_i - a_i \\times \\left\\lfloor \\frac{b_i}{a_i} \\right\\rfloor$\uff0c\u4ee3\u5165\u4e26\u4e14\u6574\u7406\u5f8c\u53ef\u4ee5\u767c\u73fe\uff1a</p> <p>$$ a_i \\left( y' - \\left\\lfloor \\frac{b_i}{a_i} \\right\\rfloor x' \\right) + b_ix' = d $$</p> <p>\u8207 $a_ix + b_iy = d$ \u6bd4\u8f03\u5f8c\u53ef\u5f97\uff1a</p> <p>$$ \\begin{cases} x = -\\left\\lfloor \\frac{b_i}{a_i} \\right\\rfloor x' + y' \\ y = x' \\end{cases} $$</p> <p>\u4e5f\u5c31\u662f\u8aaa\uff0c\u6211\u5011\u6709\u4e86 $i+1$ \u5c46\u7684\u7b54\u6848\u5c31\u80fd\u5920\u69cb\u9020\u7b2c $i$ \u5c46\u7684\u7b54\u6848\u3002\u800c\u6211\u5011\u53c8\u77e5\u9053\u6700\u5f8c\u4e00\u5c46\u7684\u7b54\u6848\u662f $x = 0$\uff0c$y = 1$\u3002\u56e0\u6b64\u6211\u5011\u5c31\u4ee5\u69cb\u9020\u8b49\u660e\u4e86\u5b9a\u74061\u3002\u4e0d\u50c5\u5982\u6b64\uff0c\u77e5\u9053\u5982\u4f55\u69cb\u9020\u4e4b\u5f8c\uff0c\u4e5f\u80fd\u5920\u8f15\u6613\u5730\u5c07\u5176\u5beb\u6210\u7a0b\u5f0f\u78bc\u3002</p> <pre><code>pair&lt;int, int&gt; ExtGCD(int a, int b) {\n    if (a == 0)\n        return pair&lt;int, int&gt;(0, 1);\n    auto [x, y] = ExtGCD(b % a, a);\n    return pair&lt;int, int&gt;(-(b / a) * x + y, x);\n}\n</code></pre>"},{"location":"%E6%93%B4%E5%B1%95%E6%AD%90%E5%B9%BE%E9%87%8C%E5%BE%97%E6%BC%94%E7%AE%97%E6%B3%95/#2","title":"\u5b9a\u74062","text":"<p>(\u6b50\u5e7e\u91cc\u5f97\u5f15\u7406). \u5df2\u77e5 $gcd(a, b) = 1$\uff0c\u90a3\u9ebc\u82e5 $a \\mid bc$\uff0c\u5247 $a \\mid c$</p>"},{"location":"%E6%93%B4%E5%B1%95%E6%AD%90%E5%B9%BE%E9%87%8C%E5%BE%97%E6%BC%94%E7%AE%97%E6%B3%95/#_2","title":"\u8b49\u660e","text":"<p>\u5b58\u5728 $s, t$ \u4f7f\u5f97 $as + bt = 1$\uff0c\u5169\u908a\u540c\u4e58\u4ee5 $c$ \u5f97\u5230 $acs + bct = c \\Rightarrow a \\mid c$</p>"},{"location":"%E6%96%87%E5%AD%97%E9%99%A3%E5%88%97/","title":"\u6587\u5b57\u9663\u5217","text":""},{"location":"%E6%96%87%E5%AD%97%E9%99%A3%E5%88%97/#_2","title":"\u5ba3\u544a","text":"\u5132\u5b58n\u500b\u5b57\uff0c\u8981\u7528n+1\u7684\u7a7a\u9593  <pre><code>char v[] = {'h', 'e', 'l', 'l', 'o', '\\0'};\n</code></pre> <p>\u9577\u5ea6\u70ba5\uff0c\u4ee5<code>'\\0'</code>\u70ba\u7d42\u6b62\u5b57\u5143</p>  \u9577\u5ea6\u70ba3\u7684\u5b57\u4e32\u53ea\u80fd\u5132\u5b58\u5169\u500b\u5b57!!!\uff0c\u5982\u4e0b  <pre><code>char s[3];\ns[0]='1';\ns[1]='2';\n</code></pre> <p>\u9019\u6a23<code>s[3]</code>\u5c31\u662f\"\\0\"</p>"},{"location":"%E6%96%87%E5%AD%97%E9%99%A3%E5%88%97/#_3","title":"\u8f38\u5165\u6ce8\u610f\u4e8b\u9805","text":"<p>\u7a0b\u5f0f\u78bc\uff1a <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nint main(){\n    char c[3]=\"\";\n    cin&gt;&gt;c[0]&gt;&gt;c[1];\n    cout&lt;&lt;c;\n}\n</code></pre></p> <p>\u9019\u6bb5\u7a0b\u5f0f\u78bc\u5728\u8f38\u5165\u6642 \u8f38\u5165\uff1a\u300c1 2\u300d\u548c\u300c12\u300d\u5176\u5be6\u662f\u4e00\u6a23\u7684\uff0c\u5b57\u4e32\u8f38\u5165\u4e2d\u9593\u4e0d\u4e00\u5b9a\u9700\u8981\u7a7a\u683c\uff0c\u56e0\u70ba\u4e00\u6b21\u53ea\u6703\u62ff\u4e00\u500b\u5b57\u5143\u3002</p> <p>\u8f38\u5165\uff1a 1 2 \u8f38\u51fa\uff1a 12</p> <p>\u8f38\u5165\uff1a 12 \u8f38\u51fa\uff1a 12</p>"},{"location":"%E6%96%87%E5%AD%97%E9%99%A3%E5%88%97/#0","title":"\\0\u70ba\u7d42\u6b62\u5b57\u5143","text":"<p>\u7a0b\u5f0f\u78bc\uff1a</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define nn \"\\n\"\n\nint main(){\n    char v[] = {'h', 'e', 'l', 'l', 'o', '\\0'};\n    cout&lt;&lt;v&lt;&lt;nn;\n    v[2]='\\0';\n    cout&lt;&lt;v&lt;&lt;nn;\n    cout&lt;&lt;v[3]&lt;&lt;nn;\n    for(int i=0;i&lt;5;i++){\n        cout&lt;&lt;v[i];\n    }\n}\n</code></pre> <p>\u8f38\u51fa\uff1a <pre><code>hello\nhe\nl\nhelo\n</code></pre></p>"},{"location":"%E6%96%87%E5%AD%97%E9%99%A3%E5%88%97/#strlen","title":"\u53d6\u5b57\u4e32\u9577\u5ea6(strlen)","text":"<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define nn \"\\n\"\n\nint main(){\n    char v[] = {'h', 'e', 'l', 'l', 'o', '\\0'};\n    cout&lt;&lt;strlen(v);\n}\n</code></pre> <p>\u8f38\u51fa\uff1a <pre><code>5\n</code></pre></p>"},{"location":"%E6%96%87%E5%AD%97%E9%99%A3%E5%88%97/#atoi","title":"\u5b57\u4e32\u8f49\u6578\u5b57(atoi)","text":"<p>\u7c21\u55ae\u4f86\u8aaa\uff0c<code>atoi</code> \u51fd\u5f0f\u7684\u540d\u7a31\u53ef\u4ee5\u5206\u89e3\u70ba\u4ee5\u4e0b\u90e8\u5206\uff1a</p> <ul> <li>a: ASCII</li> <li>to: to</li> <li>i: integer</li> </ul> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define nn \"\\n\"\n\nint main(){\n    char v[] = {'1','2','3','4','5', '\\0'};\n    cout&lt;&lt;strlen(v)&lt;&lt;nn;\n    cout&lt;&lt;atoi(v);\n}\n</code></pre> <p>\u8f38\u51fa\uff1a</p> <pre><code>5\n12346\n</code></pre>"},{"location":"%E6%96%87%E5%AD%97%E9%99%A3%E5%88%97/#strcpy","title":"\u8907\u88fd(strcpy)","text":"<p>\u770b\u4ee5\u4e0b\u7a0b\u5f0f\u78bc</p> <pre><code>char c[10]=\"123\";\nc=\"456\";\n</code></pre> <p>\u96d6\u7136c\u6703\u56de\u50b3\"123\"\uff0c\u4f46\u662fc\u4e0d\u80fd\u76f4\u63a5\u900f\u904e<code>c=\"456\";</code>\u66f4\u6539(\u50cf\u662f\u6578\u5b57\u9663\u5217\u4e0d\u80fd\u76f4\u63a5\u66f4\u6539\u4e00\u6a23) \u8981\u4f7f\u7528strcpy\uff0c\u5982\u4e0b</p> <p>strcpy(\u8907\u88fd\u76ee\u7684\u5730,\u8907\u88fd\u4f86\u6e90)</p> <p>\u7a0b\u5f0f\u78bc\uff1a <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nint main(){\n    char c[10]=\"123\",v[10]=\"456\";\n    cout&lt;&lt;c&lt;&lt;endl;\n    strcpy(c,v);\n    cout&lt;&lt;c;\n}\n</code></pre></p> <p>\u8f38\u51fa\uff1a <pre><code>123\n456\n</code></pre></p>"},{"location":"%E6%96%87%E5%AD%97%E9%99%A3%E5%88%97/#strcmp","title":"\u5b57\u4e32\u6bd4\u5927\u5c0f(\u8981\u4f7f\u7528strcmp)","text":"<pre><code>char c[100]=\"AB\" ,v[100]=\"Z\";\ncout&lt;&lt; (c&gt;v)\n</code></pre> <p>\u5b57\u4e32\u662f\u4e0d\u80fd\u76f4\u63a5\u9019\u6a23\u6bd4\u5927\u5c0f\u7684 \u8981\u4f7f\u7528strcmp</p> <p>strcmp(A\u5b57\u4e32\uff0cB\u5b57\u4e32)</p> <p>\u9019\u662f\u7528\u4f86\u6bd4\u5927\u5c0f\u7684 \u5982\u679cA&gt;B\uff0c\u56de\u50b31 \u5982\u679cA&lt;B\uff0c\u56de\u50b3-1 \u5982\u679cA=B\uff0c\u56de\u50b30</p> <p>\u53ef\u4ee5\u60f3\u50cf\u6210\uff1a \u5927\u6e1b\u5c0f\uff0c\u56de\u50b31(\u6b63)\uff1a(2)-(1)&gt;0 \u5c0f\u6e1b\u5927\uff0c\u56de\u50b3-1(\u8ca0)\uff1a(-2)-(1)&lt;0 \u76f8\u7b49\u76f8\u6e1b\uff0c\u56de\u50b30\uff1a(2)-(2)=0</p>"},{"location":"%E6%96%87%E5%AD%97%E9%99%A3%E5%88%97/#_4","title":"\u5b57\u5143\u9663\u5217\u8f38\u5165","text":"<p>\u6587\u5b57\u4e8c\u7dad\u9663\u5217\u8f38\u5165\u4e0d\u9700\u8981\u7a7a\u683c\uff0c\u56e0\u70ba\u4e00\u6b21\u53ea\u6703\u53d6\u4e00\u500b\uff0c\u81ea\u52d5\u5206\u958b\u3002</p> <p>\u7a0b\u5f0f\u78bc\uff1a <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nchar c[10][10];\n\nint main(){\n    istringstream cin(\"\\\n12345 \\\n54123 \\\n78945 \\\n14725 \\\n36985\\\n\");\n    for(int i=0;i&lt;5;i++){\n        for(int j=0;j&lt;5;j++){\n            cin&gt;&gt;c[i][j];\n        }\n    }\n    cout&lt;&lt;c[2];\n}\n</code></pre></p> <p>\u8f38\u51fa\uff1a <pre><code>78945\n</code></pre></p>"},{"location":"%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/","title":"\u6700\u5927\u516c\u56e0\u6578gcd","text":""},{"location":"%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/#\u6ce8\u610flong-long\uff01\uff01\uff01","title":"\u6ce8\u610flong long\uff01\uff01\uff01","text":"<p>\u4fdd\u96aa\u8d77\u898b\uff0c\u6bcf\u4e00\u984c\u6700\u5f8cint \u90fd\u8981\u8f49\u6210long long(\u9664\u4e86main)</p>"},{"location":"%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/#codeblocks\u4f7f\u7528\u6280\u5de7","title":"codeblocks\u4f7f\u7528\u6280\u5de7","text":"\u5df2\u719f\u8a18"},{"location":"%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/#\u63db\u884c\u53cd\u659c\u7dda\u300c\u300d\u4e0d\u80fdtab","title":"\u63db\u884c\u53cd\u659c\u7dda\u300c\\\u300d\u4e0d\u80fdtab","text":"<p>\u53ef\u4ee5\u914d\u5408\u61f6\u4eba\u6cd5\u4f7f\u7528</p> <p>\u6ce8\u610f!!\u5728<code>\\</code>\u4e4b\u524d\u8981\u7a7a\u683c\uff0c\u4e0d\u7136\u6703\u9ecf\u5728\u4e00\u8d77\u8b8a\u6210\uff1a \u539f\u672c\uff1a7 6 5 2 4 2 1 1 8 5 1 1 3 1 4 2 0 2 0 3 3 \u8b8a\u6210\uff1a7 65 2 4 2 1 1 85 11 31 42 02 03 3</p> <p></p>"},{"location":"%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/#\u5c0b\u627e\u8207\u53d6\u4ee3-ctrl--R","title":"\u5c0b\u627e\u8207\u53d6\u4ee3 ctrl + R","text":"<p>ctrl + R</p>"},{"location":"%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/#\u591a\u884c\u8a3b\u89e3CtrlShiftC--CtrlShiftx","title":"\u591a\u884c\u8a3b\u89e3Ctrl+Shift+C / Ctrl+Shift+x","text":""},{"location":"%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/#\u6613\u5fd8\u82f1\u6587","title":"\u6613\u5fd8\u82f1\u6587","text":""},{"location":"%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/#\u8cc7\u6599\u578b\u614b","title":"\u8cc7\u6599\u578b\u614b","text":""},{"location":"%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/#istringstream-cin-","title":"istringstream cin(\" \");","text":"<p>istringstream cin(\"5 17  5 5 8 3 10\");</p>"},{"location":"%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/#STL","title":"STL","text":""},{"location":"%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/#priority_queue","title":"priority_queue","text":"<p>\u512a\u5148\u99d0\u5217</p>"},{"location":"%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/#multiset","title":"multiset","text":"<p>\u591a\u5143\u7d20set(\u6703\u6392\u5e8f)</p>"},{"location":"%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/#unordered_set","title":"unordered_set","text":"<p>\u4e0d\u6392\u5e8fset(\u55ae\u5143\u7d20)</p>"},{"location":"%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/#unordered_multiset","title":"unordered_multiset","text":"<p>\u4e0d\u6392\u5e8f\u4e14\u591a\u91cd\u5143\u7d20</p>"},{"location":"%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/#priority_queue13","title":"priority_queue","text":"<p>\u512a\u5148\u99d0\u5217</p>"},{"location":"%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/#prev_permutationnext_permutation","title":"prev_permutation/next_permutation","text":"<p>\u6392\u5217 prev_permutation(v,v+n)</p>"},{"location":"%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/#isdigit\u5b57\u5143isalpha\u5b57\u5143","title":"isdigit(\u5b57\u5143)/isalpha(\u5b57\u5143)","text":"<p>\u6578\u5b57\u3001\u5b57\u6bcd\u5224\u65b7</p>"},{"location":"%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/#toupper\u5b57\u5143tolower\u5b57\u5143","title":"toupper(\u5b57\u5143)/tolower(\u5b57\u5143)","text":"<p>\u5927\u5c0f\u5beb\u8f49\u63db</p>"},{"location":"%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/#priority_queue17","title":"priority_queue","text":"<p>\u512a\u5148\u67f1\u5217</p>"},{"location":"%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/#\u9663\u5217","title":"\u9663\u5217","text":""},{"location":"%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/#\u53d6\u5b57\u4e32\u9577\u5ea6strlen","title":"\u53d6\u5b57\u4e32\u9577\u5ea6(strlen)","text":""},{"location":"%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/#\u5b57\u4e32\u8f49\u6578\u5b57atoi","title":"\u5b57\u4e32\u8f49\u6578\u5b57(atoi)","text":""},{"location":"%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/#\u8907\u88fdstrcpy","title":"\u8907\u88fd(strcpy)","text":""},{"location":"%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/#\u5b57\u4e32\u6bd4\u5927\u5c0f\u8981\u4f7f\u7528strcmp","title":"\u5b57\u4e32\u6bd4\u5927\u5c0f(\u8981\u4f7f\u7528strcmp)","text":""},{"location":"%E6%9C%89%E4%BA%8B%E6%B2%92%E4%BA%8B%E6%89%93%E4%B8%80%E6%AC%A1/","title":"\u6709\u4e8b\u6c92\u4e8b\u6253\u4e00\u6b21","text":"<ul> <li>BFS</li> <li>DFS</li> <li>\u4f75\u67e5\u96c6</li> <li>topological sort(\u62d3\u6a38)</li> <li>\u4e8c\u5206\u641c/\u8df3\u8e8d\u4e8c\u5206\u641c</li> <li>Dijkstra\u6700\u77ed\u8def\u5f91(\u4e0d\u5fc5)</li> <li>\u6700\u5c0f\u751f\u6210\u6a39-\u4f75\u67e5\u96c6</li> <li>\u93c8\u7d50\u7d50\u69cb</li> <li>\u7dda\u6027\u7be9\u8cea\u6578</li> <li>LIS \u6700\u9577\u905e\u589e\u5b50\u5e8f\u5217</li> <li>LCS \u6700\u9577\u5171\u540c\u5b50\u5e8f\u5217(DNA)</li> </ul>"},{"location":"%E6%A8%A1%E9%81%8B%E7%AE%97/","title":"\u57fa\u672c\u4ecb\u7d39","text":"<p>\u6709\u5169\u6578\u5b57$a$\u3001$b$ $a\\%b$\u6642\u56de\u50b3$a/b$\u7684\u9918\u6578</p>"},{"location":"%E6%A8%A1%E9%81%8B%E7%AE%97/#_2","title":"\u4e00\u822c\u904b\u7b97","text":""},{"location":"%E6%A8%A1%E9%81%8B%E7%AE%97/#_3","title":"\u6a21\u904b\u7b97\u7684\u7d50\u679c\u7b26\u865f","text":"<ol> <li>\u7576 $a$ \u70ba\u6b63\u6578\u6642\uff1a</li> <li>\u7121\u8ad6 $b$ \u662f\u6b63\u6578\u9084\u662f\u8ca0\u6578\uff0c\u7d50\u679c $c$ \u90fd\u662f\u975e\u8ca0\u6578\u3002</li> <li> <p>\u5373\uff1a$[ a \\% b \\geq 0 ]$</p> </li> <li> <p>\u7576 $a$ \u70ba\u8ca0\u6578\u6642\uff1a</p> </li> <li>\u6839\u64da\u4e0d\u540c\u7de8\u7a0b\u8a9e\u8a00\u6216\u6578\u5b78\u74b0\u5883\uff0c\u7d50\u679c $c$ \u53ef\u80fd\u662f\u975e\u6b63\u6578\uff08\u5373\u7d50\u679c\u7684\u7b26\u865f\u8207 $a$ \u4e00\u81f4\uff09\uff0c\u4e5f\u53ef\u80fd\u662f\u975e\u8ca0\u6578\uff08\u5373\u7d50\u679c\u7684\u7b26\u865f\u8207 $b$ \u4e00\u81f4\uff09\u3002</li> </ol>"},{"location":"%E6%A8%A1%E9%81%8B%E7%AE%97/#_4","title":"\u4f8b\u5b50\u8aaa\u660e","text":""},{"location":"%E6%A8%A1%E9%81%8B%E7%AE%97/#python-c","title":"Python \u548c C++ \u4e2d\u7684\u6a21\u904b\u7b97","text":"<p>\u5728 Python \u548c C++ \u4e2d\uff0c\u6a21\u904b\u7b97\u7d50\u679c\u7684\u7b26\u865f\u8207\u88ab\u9664\u6578\uff08$a$\uff09\u7684\u7b26\u865f\u4e00\u81f4\u3002</p> <ul> <li>$a = 10$\uff0c$b = 3$   $[ 10 \\% 3 = 1 ]$</li> <li>$a = -10$\uff0c$b = 3$   $[ -10 \\% 3 = -1 ]$</li> <li>$a = 10$\uff0c$b = -3$   $[ 10 \\% -3 = 1 ]$</li> <li>$a = -10$\uff0c$b = -3$   $[ -10 \\% -3 = -1 ]$</li> </ul>"},{"location":"%E6%A8%A1%E9%81%8B%E7%AE%97/#_5","title":"\u6578\u5b78\u4e2d\u7684\u6a21\u904b\u7b97","text":"<p>\u5728\u6578\u5b78\u4e2d\uff0c\u6a21\u904b\u7b97\u7684\u7d50\u679c\u901a\u5e38\u662f\u975e\u8ca0\u6578\u3002</p> <ul> <li>$a = 10$\uff0c$b = 3$   $[ 10 \\mod 3 = 1 ]$</li> <li>$a = -10$\uff0c$b = 3$   $[ -10 \\mod 3 = 2 ]$</li> <li>$a = 10$\uff0c$b = -3$   $[ 10 \\mod -3 = 1 ]$</li> <li>$a = -10$\uff0c$b = -3$   $[ -10 \\mod -3 = 2 ]$</li> </ul>"},{"location":"%E6%A8%A1%E9%81%8B%E7%AE%97/#a-equiv-b-pmodk","title":"\u540c\u9918\u6027\u8cea $a \\equiv b \\pmod{k}$","text":"<p>\u7576\u5169\u500b\u6574\u6578 $a$ \u548c $b$ \u6eff\u8db3\u540c\u9918\u95dc\u4fc2 $a \\equiv b \\pmod{k}$ \u6642\uff0c\u8868\u793a $a$ \u548c $b$ \u5728\u9664\u4ee5 $k$ \u7684\u9918\u6578\u76f8\u540c\u3002\u9019\u500b\u95dc\u4fc2\u6709\u8a31\u591a\u91cd\u8981\u7684\u6027\u8cea\uff1a</p> <ol> <li> <p>\u53cd\u8eab\u6027\uff08Reflexivity\uff09\uff1a\u5c0d\u65bc\u4efb\u4f55\u6574\u6578 $a$ \u548c $k$\uff0c$a \\equiv a \\pmod{k}$\u3002</p> </li> <li> <p>\u5c0d\u7a31\u6027\uff08Symmetry\uff09\uff1a\u5982\u679c $a \\equiv b \\pmod{k}$\uff0c\u5247 $b \\equiv a \\pmod{k}$\u3002</p> </li> <li> <p>\u50b3\u905e\u6027\uff08Transitivity\uff09\uff1a\u5982\u679c $a \\equiv b \\pmod{k}$ \u4e14 $b \\equiv c \\pmod{k}$\uff0c\u5247 $a \\equiv c \\pmod{k}$\u3002</p> </li> <li> <p>\u52a0\u6cd5\u548c\u6e1b\u6cd5\u7684\u9589\u5408\u6027\uff1a</p> </li> <li>\u5982\u679c $a \\equiv b \\pmod{k}$ \u4e14 $c \\equiv d \\pmod{k}$\uff0c\u5247 $a + c \\equiv b + d \\pmod{k}$\u3002</li> <li> <p>\u5982\u679c $a \\equiv b \\pmod{k}$\uff0c\u5247 $a - c \\equiv b - c \\pmod{k}$\u3002</p> </li> <li> <p>\u4e58\u6cd5\u7684\u9589\u5408\u6027\uff1a\u5982\u679c $a \\equiv b \\pmod{k}$ \u4e14 $c \\equiv d \\pmod{k}$\uff0c\u5247 $ac \\equiv bd \\pmod{k}$\u3002</p> </li> <li> <p>\u4e58\u6cd5\u548c\u52a0\u6cd5\u7684\u7d50\u5408\u6027\uff1a</p> </li> <li>\u5982\u679c $a \\equiv b \\pmod{k}$\uff0c\u5247\u5c0d\u65bc\u4efb\u4f55\u6574\u6578 $c$\uff0c$ca \\equiv cb \\pmod{k}$\u3002</li> <li> <p>\u5982\u679c $a \\equiv b \\pmod{k}$\uff0c\u5247 $a+c \\equiv b+c \\pmod{k}$\u3002</p> </li> <li> <p>\u9664\u6cd5\uff1a\u5982\u679c $ac \\equiv bc \\pmod{k}$ \u4e14 $c$ \u8207 $k$ \u4e92\u8cea\uff08$\\gcd(c, k) = 1$\uff09\uff0c\u5247 $a \\equiv b \\pmod{k}$\u3002</p> </li> </ol> <p>\u9019\u4e9b\u6027\u8cea\u4f7f\u5f97\u6a21 $k$ \u540c\u9918\u95dc\u4fc2\u5728\u6578\u5b78\u4e2d\u975e\u5e38\u6709\u7528\uff0c\u7279\u5225\u662f\u5728\u6578\u8ad6\u548c\u5bc6\u78bc\u5b78\u9818\u57df\u3002</p>"},{"location":"%E6%A8%A1%E9%81%8B%E7%AE%97/#_6","title":"\u6a21\u904b\u7b97\u6027\u8cea","text":"<p>\u7576\u9032\u884c\u6a21\u904b\u7b97\uff08\\%\uff09\u6642\uff0c\u6709\u4e00\u4e9b\u91cd\u8981\u7684\u6027\u8cea\u548c\u516c\u5f0f\u53ef\u4ee5\u5e6b\u52a9\u6211\u5011\u66f4\u597d\u5730\u7406\u89e3\u548c\u61c9\u7528\u6a21\u904b\u7b97\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u7528\u7684\u6a21\u904b\u7b97\u6027\u8cea\uff1a</p> <ol> <li> <p>\u4fdd\u7559\u540c\u9918\u6027\u8cea (Congruence Property)</p> <ul> <li>\u82e5 $a \\equiv b \\pmod{m}$\uff0c\u5247 $a \\% m = b \\% m$</li> <li>\u4f8b\u5982\uff0c$14 \\equiv 2 \\pmod{12}$\uff0c\u56e0\u70ba $14 \\% 12 = 2 \\% 12$</li> </ul> </li> <li> <p>\u52a0\u6cd5\u6027\u8cea (Addition Property)</p> <ul> <li>$(a + b) \\% m = ((a \\% m) + (b \\% m)) \\% m$</li> <li>\u4f8b\u5982\uff0c$(7 + 5) \\% 3 = ((7 \\% 3) + (5 \\% 3)) \\% 3 = (1 + 2) \\% 3 = 0$</li> </ul> </li> <li> <p>\u6e1b\u6cd5\u6027\u8cea (Subtraction Property)</p> <ul> <li>$(a - b) \\% m = ((a \\% m) - (b \\% m) + m) \\% m$</li> <li>\u4f8b\u5982\uff0c$(7 - 5) \\% 3 = ((7 \\% 3) - (5 \\% 3) + 3) \\% 3 = (1 - 2 + 3) \\% 3 = 2$</li> </ul> </li> <li> <p>\u4e58\u6cd5\u6027\u8cea (Multiplication Property)</p> <ul> <li>$(a \\times b) \\% m = ((a \\% m) \\times (b \\% m)) \\% m$</li> <li>\u4f8b\u5982\uff0c$(7 \\times 5) \\% 3 = ((7 \\% 3) \\times (5 \\% 3)) \\% 3 = (1 \\times 2) \\% 3 = 2$</li> </ul> </li> <li> <p>\u51aa\u6b21\u6027\u8cea (Exponentiation Property)</p> <ul> <li>$(a^b) \\% m = ((a \\% m)^b) \\% m$</li> <li>\u4f8b\u5982\uff0c$(2^5) \\% 3 = ((2 \\% 3)^5) \\% 3 = 2^5 \\% 3 = 32 \\% 3 = 2$</li> </ul> </li> <li> <p>\u9664\u6cd5\u6027\u8cea (Division Property)</p> <ul> <li>\u82e5\u8981\u8a08\u7b97 $(a / b) \\% m$\uff0c\u6211\u5011\u9700\u8981\u627e\u5230 $b$ \u5728\u6a21 $m$ \u4e0b\u7684\u4e58\u6cd5\u9006\u5143 $b^{-1}$\uff0c\u9019\u6a23 $(a / b) \\% m = (a \\times b^{-1}) \\% m$</li> <li>$b^{-1}$ \u662f\u6eff\u8db3 $(b \\times b^{-1}) \\% m = 1$ \u7684\u6578\u5b57</li> </ul> </li> <li> <p>\u5206\u914d\u6027\u8cea (Distributive Property)</p> <ul> <li>$a \\times (b + c) \\% m = ((a \\times b) \\% m + (a \\times c) \\% m) \\% m$</li> <li>\u4f8b\u5982\uff0c   $3 \\times (4 + 5) \\% 7$   $= ((3 \\times 4) \\% 7 + (3 \\times 5) \\% 7) \\% 7$   $= (12 \\% 7 + 15 \\% 7) \\% 7 = (5 + 1) \\% 7$   $= 6$</li> </ul> </li> </ol>"},{"location":"%E6%A8%A1%E9%81%8B%E7%AE%97/#_7","title":"\u8b49\u660e","text":"<p>\u8b49\u660e\u6a21\u904b\u7b97\u7684\u52a0\u6cd5\u548c\u4e58\u6cd5\u5206\u914d\u5f8b\u9700\u8981\u4e00\u4e9b\u57fa\u672c\u7684\u6578\u5b78\u77e5\u8b58\u3002\u8b93\u6211\u5011\u9010\u6b65\u8b49\u660e\u9019\u4e9b\u6027\u8cea\u3002</p>"},{"location":"%E6%A8%A1%E9%81%8B%E7%AE%97/#_8","title":"\u52a0\u6cd5\u5206\u914d\u5f8b\u8b49\u660e","text":"<p>\u9996\u5148\uff0c\u6211\u5011\u8981\u8b49\u660e\uff1a $$ (a + b) \\% c = [(a \\% c) + (b \\% c)] \\% c $$</p> <ol> <li> <p>\u5b9a\u7fa9\u7b26\u865f\u548c\u7b49\u5f0f\uff1a</p> <ul> <li>\u8a2d $a = kc + r_a$\uff0c\u5176\u4e2d $k$ \u662f\u6574\u6578\uff0c$r_a = a \\% c$ \u4e14 $0 \\le r_a &lt; c$</li> <li>\u8a2d $b = mc + r_b$\uff0c\u5176\u4e2d $m$ \u662f\u6574\u6578\uff0c$r_b = b \\% c$ \u4e14 $0 \\le r_b &lt; c$</li> </ul> </li> <li> <p>\u4ee3\u5165\u52a0\u6cd5\u5206\u914d\u5f8b\u5de6\u908a\uff1a    $$    a + b = (kc + r_a) + (mc + r_b) = (k + m)c + (r_a + r_b)    $$</p> </li> <li> <p>\u53d6\u6a21\u904b\u7b97\uff1a    $$    (a + b) \\% c = [(k + m)c + (r_a + r_b)] \\% c    $$    \u7531\u65bc $(k + m)c$ \u662f $c$ \u7684\u6574\u6578\u500d\uff0c\u5c0d $c$ \u53d6\u6a21\u5f8c\u7d50\u679c\u70ba $0$\u3002\u56e0\u6b64\uff1a    $$    (a + b) \\% c = (r_a + r_b) \\% c    $$</p> </li> <li> <p>\u53f3\u908a\u904b\u7b97\uff1a    $$    [(a \\% c) + (b \\% c)] \\% c = (r_a + r_b) \\% c    $$</p> </li> <li> <p>\u7d50\u8ad6\uff1a    \u5de6\u53f3\u5169\u908a\u76f8\u7b49\uff0c\u56e0\u6b64\uff1a    $$    (a + b) \\% c = [(a \\% c) + (b \\% c)] \\% c    $$</p> </li> </ol>"},{"location":"%E6%A8%A1%E9%81%8B%E7%AE%97/#_9","title":"\u4e58\u6cd5\u5206\u914d\u5f8b\u8b49\u660e","text":"<p>\u63a5\u4e0b\u4f86\uff0c\u6211\u5011\u8981\u8b49\u660e\uff1a $$ (a \\times b) \\% c = [(a \\% c) \\times (b \\% c)] \\% c $$</p> <ol> <li> <p>\u5b9a\u7fa9\u7b26\u865f\u548c\u7b49\u5f0f\uff1a</p> <ul> <li>\u8a2d $a = kc + r_a$\uff0c\u5176\u4e2d $k$ \u662f\u6574\u6578\uff0c$r_a = a \\% c$ \u4e14 $0 \\le r_a &lt; c$\u3002</li> <li>\u8a2d $b = mc + r_b$\uff0c\u5176\u4e2d $m$ \u662f\u6574\u6578\uff0c$r_b = b \\% c$\u4e14 $0 \\le r_b &lt; c$\u3002</li> </ul> </li> <li> <p>\u4ee3\u5165\u4e58\u6cd5\u5206\u914d\u5f8b\u5de6\u908a\uff1a    $$    a \\times b = (kc + r_a) \\times (mc + r_b)    $$</p> </li> <li> <p>\u5c55\u958b\u4e26\u7c21\u5316\uff1a    $$    a \\times b = kcmc + kcr_b + mcr_a + r_a r_b    $$    $$    a \\times b = c(kmc + kr_b + mr_a) + r_a r_b    $$</p> </li> <li> <p>\u53d6\u6a21\u904b\u7b97\uff1a    $$    (a \\times b) \\% c = [c(kmc + kr_b + mr_a) + r_a r_b] \\% c    $$    \u7531\u65bc $c(kmc + kr_b + mr_a)$ \u662f $c$ \u7684\u6574\u6578\u500d\uff0c\u5c0d $c$ \u53d6\u6a21\u5f8c\u7d50\u679c\u70ba $0$\u3002\u56e0\u6b64\uff1a    $$    (a \\times b) \\% c = (r_a r_b) \\% c    $$</p> </li> <li> <p>\u53f3\u908a\u904b\u7b97\uff1a    $$    [(a \\% c) \\times (b \\% c)] \\% c = (r_a \\times r_b) \\% c    $$</p> </li> <li> <p>\u7d50\u8ad6\uff1a    \u5de6\u53f3\u5169\u908a\u76f8\u7b49\uff0c\u56e0\u6b64\uff1a    $$    (a \\times b) \\% c = [(a \\% c) \\times (b \\% c)] \\% c    $$</p> </li> </ol>"},{"location":"%E6%AD%90%E5%B9%BE%E9%87%8C%E5%BE%97%E5%BC%95%E7%90%86/","title":"\u6b50\u5e7e\u91cc\u5f97\u5f15\u7406","text":"<p>\u5982\u679c\u4e00\u500b\u6b63\u6574\u6578\u6574\u9664\u53e6\u5916\u5169\u500b\u6b63\u6574\u6578\u7684\u4e58\u7a4d\uff0c\u7b2c\u4e00\u500b\u6574\u6578\u8207\u7b2c\u4e8c\u500b\u6574\u6578\u4e92\u8cea\uff0c\u90a3\u9ebc\u7b2c\u4e00\u500b\u6574\u6578\u6574\u9664\u7b2c\u4e09\u500b\u6574\u6578\u3002</p> <p>\u53ef\u4ee5\u9019\u6a23\u8868\u9054\u9019\u500b\u5f15\u7406\uff1a</p> <p>$$ \\text{\u5982\u679c } a \\mid bc \\text{ \u4e14 } \\gcd(a,b) = 1 \\text{\uff0c\u90a3\u9ebc } a \\mid c\u3002 $$</p>"},{"location":"%E6%AD%90%E5%B9%BE%E9%87%8C%E5%BE%97%E6%BC%94%E7%AE%97%E6%B3%95%EF%BC%9A%E8%BC%BE%E8%BD%89%E7%9B%B8%E9%99%A4%E6%B3%95%EF%BC%9A%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/","title":"\u6b50\u5e7e\u91cc\u5f97\u6f14\u7b97\u6cd5\uff1a\u8f3e\u8f49\u76f8\u9664\u6cd5\uff1a\u6700\u5927\u516c\u56e0\u6578gcd","text":"<p>from\uff1a2024\u6e05\u83ef\u5927\u5b78IONC\u8b1b\u7fa9</p>"},{"location":"%E6%AD%90%E5%B9%BE%E9%87%8C%E5%BE%97%E6%BC%94%E7%AE%97%E6%B3%95%EF%BC%9A%E8%BC%BE%E8%BD%89%E7%9B%B8%E9%99%A4%E6%B3%95%EF%BC%9A%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/#_1","title":"\u51fd\u6578\u88fd\u4f5c","text":"<p>\u8981\u8a2d\u8a08\u4e00\u500b\u6f14\u7b97\u6cd5\u53bb\u8a08\u7b97 (a, b) \u7684\u6700\u5927\u516c\u56e0\u6578\u3002\u6700\u76f4\u89c0\u7684\u60f3\u6cd5\u662f\u679a\u8209\u6240\u6709\u53ef\u80fd\u7684\u56e0\u6578\u3002</p> <pre><code>int gcd(int a, int b) {\n    for (int i = min(a, b); i &gt;= 1; i--) {\n        if (a % i == 0 &amp;&amp; b % i == 0) return i;\n    }\n    return 1;\n}\n</code></pre> <p>\u4e0d\u5931\u4e00\u822c\u6027\u5047\u8a2d (a \u2264 b)\uff0c\u90a3\u5176\u6642\u9593\u8907\u96dc\u5ea6\u70ba (O(a))\u3002\u4f46\u662f\u6211\u5011\u5e0c\u671b\u80fd\u6709\u66f4\u5feb\u7684\u6f14\u7b97\u6cd5\u4f86\u6c42\u51fa\u6700\u5927\u7684\u516c\u56e0\u6578! \u6211\u5011\u80fd\u5920\u60f3\u5230\u4e00\u500b(\u6240\u4ee5\u5b78\u904e\u7684\u6771\u897f\u4f55\u6545\u8f15\u6613\u76f8\u5fd8\uff0c\u8f3e\u8f49\u9593\u4f60\u6703\u60f3\u5230\u5169\u500b\u5076\u611f)\u6975\u70ba\u7c21\u55ae\u7684\u6578\u5b78\u9053\u7406 \u5176\u4e2d\u8f03\u5c0f\u7684\u6578\u548c\u5169\u6578\u7684\u5dee\u7684\u6700\u5927\u516c\u56e0\u6578\uff0c\u56e0\u6b64\u6211\u5011\u53ef\u4ee5\u5c0e\u51fa\u4e00\u500b\u905e\u8ff4\u516c\u5f0f\u5982\u4e0b\u3002</p> <pre><code>int gcd(int a, int b) {\n    if (a &lt; b) swap(a, b);\n    if (b == 0) return a;\n    return gcd(b, a - b);\n}\n</code></pre> <p>\u9019\u500b\u51fd\u5f0f\u80fd\u7528\u8f03\u5feb\u7684\u901f\u5ea6\u8a08\u7b97\u5982 206 \u548c 100 \u7684\u6700\u5927\u516c\u56e0\u6578\uff0c\u4e26\u4e0d\u9700\u8981\u5f9e 100 \u958b\u59cb\u679a\u8209\u5230 1 \u4f86\u5224\u65b7! \u4f46\u5c0d\u65bc\u6975\u7aef\u60c5\u6cc1 <code>gcd(2, 2000000000)</code>\uff0c\u905e\u8ff4\u547c\u53eb <code>gcd</code> \u9054\u5104\u6b21\u3002</p> <p>\u6211\u5011\u7e7c\u7e8c\u89c0\u5bdf\u4e0a\u8ff0\u7684\u6975\u7aef\u60c5\u6cc1\u3002\u905e\u8ff4\u547c\u53eb <code>gcd</code> \u6642\uff0c(a - b) \u4e00\u76f4\u6c92\u6709\u8b8a\u5316\uff0c\u53cd\u5012\u662f (b) \u4e00\u76f4\u6e1b\u5230 (b &lt; a) \u70ba\u6b62! \u56e0\u6b64\u6211\u5011\u53ef\u4ee5\u767c\u73fe\u5176\u5be6\u4e00\u76f4\u6e1b\u4e0d\u5982\u76f4\u63a5\u7528\u8f3e\u8f49\u76f8\u9664\u6c42\u51fa (b &lt; a) \u7684\u60c5\u5f62\u5176\u6578\u503c\u662f\u6703\u591a\u4e00\u5206\uff0c\u800c\u4e14\u4e00\u500b\u6578\u5b57\u88ab\u6709\u6548\u53d6\u9918\u6642\uff0c\u65b0\u7684\u503c\u81f3\u5c11\u70ba\u539f\u4f86\u7684\u4e00\u534a\uff0c\u6240\u4ee5\u80fd\u63d0\u662f\u8db3\u5feb\u9054\u7684\u6c42\u51fa\u7b54\u6848\u3002\u6700\u5f8c\u6211\u5011\u80fd\u6574\u51fa\u4e0b\u5217\u7684\u5beb\u6cd5\uff0c\u5176\u6642\u9593\u8907\u96dc\u5ea6\u7d04\u70ba (O(log a))\u3002</p> <pre><code>int gcd(int a, int b) {\n    return b == 0 ? a : gcd(b, a % b);\n}\n</code></pre>"},{"location":"%E6%AD%90%E5%B9%BE%E9%87%8C%E5%BE%97%E6%BC%94%E7%AE%97%E6%B3%95%EF%BC%9A%E8%BC%BE%E8%BD%89%E7%9B%B8%E9%99%A4%E6%B3%95%EF%BC%9A%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8gcd/#_2","title":"\u5167\u5efa\u51fd\u6578","text":"<p>\u6ce8\u610f\u524d\u9762\u662f\u5169\u500b\u5e95\u7dda</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define io ios::sync_with_stdio(0);cin.tie(0);\n#define all(x) x.begin(),x.end()\n\n\nint main(){io\n    stringstream cin(\"5,10\");\n\n    int n,m;\n    cin&gt;&gt;n&gt;&gt;m;\n\n    cout&lt;&lt;__gcd(n,m);\n\n\n}\n</code></pre>"},{"location":"%E6%BB%91%E5%8B%95%E8%A6%96%E7%AA%97%28Sliding%20window%29%28%E6%8A%80%E5%B7%A7%29/","title":"\u6ed1\u52d5\u8996\u7a97(Sliding window)(\u6280\u5de7)","text":"<p>\u57fa\u672c\u4e0a\u662f\u4ee5\u5169\u500b\u6307\u6a19\u7dad\u8b77\u4e00\u6bb5\u5340\u9593\uff0c\u7136\u5f8c\u9010\u6b65\u5c07\u9019\u5340\u9593\u5f9e\u524d\u5f80\u5f8c(\u5f9e\u5de6\u5f80\u53f3)\u79fb\u52d5\u3002\u7dad\u8b77\u5169\u500b\u6307\u6a19\u9019\u4e00\u985e\u7684\u65b9\u6cd5\u4e5f\u6709 \u4eba\u7a31\u70ba\u96d9\u6307\u6a19\u6cd5\uff0c\u4f46\u4e5f\u5305\u542b\u5169\u500b\u6307\u6a19\u5f9e\u5169\u7aef\u5f80\u4e2d\u9593\u79fb\u52d5(ap325)</p>"},{"location":"%E6%BB%91%E5%8B%95%E8%A6%96%E7%AA%97%28Sliding%20window%29%28%E6%8A%80%E5%B7%A7%29/#d031-p-3-7","title":"d031: \u4f8b\u984c P-3-7. \u6b63\u6574\u6578\u5e8f\u5217\u4e4b\u6700\u63a5\u8fd1\u7684\u5340\u9593\u548c","text":"<p>https://judge.tcirc.tw/ShowProblem?problemid=d031</p> <p>\u8f38\u5165\u4e00\u500b\u6b63\u6574\u6578\u5e8f\u5217  (A[1],A[2],...,A[n])   \uff0c\u53e6\u5916\u7d66\u4e86\u4e00\u500b\u975e\u8ca0\u6574\u6578  K    \uff0c\u8acb\u8a08\u7b97\u54ea\u4e9b\u9023\u7e8c\u5340\u6bb5\u7684\u548c\u6700\u63a5\u8fd1  K    \u800c\u4e0d\u8d85\u904e  K   \uff0c\u4ee5\u53ca\u9019\u6a23\u7684\u5340\u9593\u6709\u5e7e\u500b\u3002</p> <p>n   \u4e0d\u8d85\u904e 20 \u842c\uff0c\u8f38\u5165\u6578\u5b57\u8207  K    \u7686\u4e0d\u8d85\u904e 10 \u5104\u3002</p> <p>\u8f38\u5165\u8aaa\u660e \u7b2c\u4e00\u884c\u662f  n   \u8207  K   \uff0c \u7b2c\u4e8c\u884c  n   \u500b\u6574\u6578\u662f  A[i]  \uff0c\u540c\u884c\u6578\u5b57\u4ee5\u7a7a\u767d\u9593\u9694\u3002</p> <p>\u8f38\u51fa\u8aaa\u660e \u7b2c\u4e00\u884c\u8f38\u51fa\u6700\u63a5\u8fd1  K    \u4f46\u4e0d\u8d85\u904e  K    \u7684\u548c\uff0c \u7b2c\u4e8c\u884c\u8f38\u51fa\u9019\u6a23\u7684\u5340\u9593\u6709\u5e7e\u500b</p> <p>5 10 4 3 1 7 4</p> <p>8 2</p> <p>\u9019\u984c\u662f\u7528\u5169\u500b\u6307\u91dd\u4e00\u76f4\u7dad\u6301\u4e00\u500b\u5340\u9593\uff0c\u53f3\u6307\u91dd\u4e0d\u505c\u5f80\u53f3\u79fb\u52d5\uff0c\u900f\u904e\u7e2e\u5c0f/\u653e\u5927(\u79fb\u52d5\u5de6\u6307\u91dd)\u5340\u9593\u4f86\u7dad\u6301\u689d\u4ef6</p> <p>\u79fb\u52d5\u53f3\u6307\u91dd\u65b9\u6cd5\u53ef\u4ee5\u7528\u985e\u4f3c\u8caa\u5fc3\u6f14\u7b97\u6cd5\u7684\u65b9\u5f0f \u56e0\u70ba\u53ea\u6703\u5f80\u53f3\u4e00\u500b\u4f4d\u7f6e\uff0c\u7528for\u8ff4\u5708\u6bd4\u8f03\u65b9\u4fbf</p> <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define nn \"\\n\"\nint v[300000];\nint main(){\n  int n,m,ans=0;\n  cin&gt;&gt;n&gt;&gt;m;\n  for(int i=0;i&lt;n;i++){\n    cin&gt;&gt;v[i];\n  }\n  int sum=0;\n  map&lt;int,int&gt;mp;\n  for(int l=0,r=0;r&lt;n;r++){\n    sum+=v[r];\n    while(sum&gt;m){\n      sum-=v[l];\n      l++;\n    }\n    mp[sum]++;\n  }\n  cout&lt;&lt;nn&lt;&lt;mp.rbegin()-&gt;first;   //\u8f38\u51fa\u6700\u5f8c\u4e00\u500b\u7684first\n  cout&lt;&lt;nn&lt;&lt;mp.rbegin()-&gt;second;  //\u8f38\u51fa\u6700\u5f8c\u4e00\u500b\u7684second\n}\n</code></pre>"},{"location":"%E6%BB%91%E5%8B%95%E8%A6%96%E7%AA%97%28Sliding%20window%29%28%E6%8A%80%E5%B7%A7%29/#a175-p-3-8","title":"a175: P-3-8. \u56fa\u5b9a\u9577\u5ea6\u5340\u9593\u7684\u6700\u5927\u5340\u6bb5\u5dee","text":"<p>\u5167\u5bb9 \u5c0d\u65bc\u5e8f\u5217\u7684\u4e00\u500b\u9023\u7e8c\u5340\u6bb5\u4f86\u8aaa\uff0c\u5340\u6bb5\u5dee\u662f\u6307\u5340\u6bb5\u5167\u7684\u6700\u5927\u503c\u6e1b\u53bb\u5340\u6bb5\u5167\u7684\u6700\u5c0f\u503c\u3002</p> <p>\u6709N\u500b\u975e\u8ca0\u6574\u6578\u7d44\u6210\u7684\u5e8f\u5217seq\uff0c\u8acb\u8a08\u7b97\u5728\u6240\u6709\u9577\u5ea6\u70baL\u7684\u9023\u7e8c\u5340\u6bb5\u4e2d\uff0c\u6700\u5927\u7684\u5340\u6bb5\u5dee\u70ba\u4f55\u3002</p> <p>\u8f38\u5165\u8aaa\u660e \u7b2c\u4e00\u884c\u662fN\u8207L\uff0c\u7b2c\u4e8c\u884c\u662f\u5e8f\u5217\u5167\u5bb9\uff0c\u76f8\u9130\u6578\u5b57\u9593\u4ee5\u7a7a\u767d\u9694\u958b\u3002</p> <p>L\u2264N\u22642e5\uff0c\u6578\u5b57\u4e0d\u8d85\u904e1e9\u3002</p> <p>\u8f38\u51fa\u8aaa\u660e \u8f38\u51fa\u6240\u6c42\u7684\u6700\u5927\u5340\u9593\u5dee\u3002</p> <p>\u7bc4\u4f8b\u8f38\u5165 #1 9 4 1 4 3 6 9 8 5 7 1 \u7bc4\u4f8b\u8f38\u51fa #1 7</p> multiset  \u6703\u6709\u91cd\u8907\u6240\u4ee5\u7528multiset  <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define pii pair&lt;int,int&gt;\n#define all(x) x.begin(),x.end()\n#define nn \"\\n\"\n#define int long long\n\n\nsigned main(){\n    //istringstream cin(\"9 4 \\\n1000 4 3 1 9 1 5 7 100\");\n    int n,m;\n    cin&gt;&gt;n&gt;&gt;m;\n\n\n    vector&lt;int&gt;v(n);\n\n    for(int i=0;i&lt;n;i++){\n        cin&gt;&gt;v[i];\n    }\n\n\n    multiset&lt;int&gt;s;\n\n\n\n    // \u521d\u59cb\u5316\u524d m \u500b\u5143\u7d20\n    for (int i = 0; i &lt; m; i++) {\n        s.insert(v[i]);\n    }\n\n    int ans=-1;\n\n    ans=max(ans,abs(*s.begin()-*s.rbegin()));\n\n    for(int i=m;i&lt;n;i++){\n        s.insert(v[i]);\n        auto it=s.lower_bound(v[i-m]);\n        s.erase(it);\n\n        ans=max(ans,abs(*s.begin()-*s.rbegin()));\n    }\n\n    cout&lt;&lt;ans;\n\n}\n</code></pre> <p>\u4f7f\u7528dequue</p> deque <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\nint main(){\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n\n    int n, m;\n    cin &gt;&gt; n &gt;&gt; m;\n    vector&lt;int&gt; v(n);\n\n    for (int i = 0; i &lt; n; i++) {\n        cin &gt;&gt; v[i];\n    }\n\n    deque&lt;int&gt; madq;  // \u7ef4\u62a4\u6700\u5927\u503c\u7684\u53cc\u7aef\u961f\u5217\n    deque&lt;int&gt; midq;  // \u7ef4\u62a4\u6700\u5c0f\u503c\u7684\u53cc\u7aef\u961f\u5217\n\n    int ans = INT_MIN;\n\n    for (int i = 0; i &lt; n; i++) {\n        // \u7ef4\u62a4\u6700\u5927\u503c\u961f\u5217\n        if (!madq.empty() &amp;&amp; madq.front() &lt;= i - m) {\n            madq.pop_front();\n        }\n        while (!madq.empty() &amp;&amp; v[madq.back()] &lt;= v[i]) {\n            madq.pop_back();\n        }\n        madq.push_back(i);\n\n        // \u7ef4\u62a4\u6700\u5c0f\u503c\u961f\u5217\n        if (!midq.empty() &amp;&amp; midq.front() &lt;= i - m) {\n            midq.pop_front();\n        }\n        while (!midq.empty() &amp;&amp; v[midq.back()] &gt;= v[i]) {\n            midq.pop_back();\n        }\n        midq.push_back(i);\n\n        // \u5f53\u7a97\u53e3\u7684\u5927\u5c0f\u8fbe\u5230m\u65f6\uff0c\u8ba1\u7b97\u5f53\u524d\u7684\u6700\u5927\u533a\u6bb5\u5dee\n        if (i &gt;= m - 1) {\n            ans = max(ans, v[madq.front()] - v[midq.front()]);\n        }\n    }\n\n    cout &lt;&lt; ans &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"%E7%87%9F%E9%9A%8A/","title":"\u71df\u968a","text":"<p>\u6e05\u5927 ION Camp</p> <p>\u4ea4\u5927 PCCA Winter Camp</p> <p>\u53f0\u5927 IOICamp</p> <p>\u8cc7\u8a0a\u4e4b\u82bd</p>"},{"location":"%E7%88%86%E6%90%9C/","title":"\u7206\u641c","text":""},{"location":"%E7%88%86%E6%90%9C/#a160-p-2-9","title":"a160: P-2-9. \u5b50\u96c6\u5408\u4e58\u7a4d","text":"<p>\u5167\u5bb9</p> <p>\u8f38\u5165n\u500b\u6b63\u6574\u6578A[1..n]\uff0c\u4ee5\u53ca\u4e00\u500b\u8cea\u6578P\uff0c\u8acb\u8a08\u7b97A\u4e2d\u5143\u7d20\u5404\u7a2e\u7d44\u5408\u4e2d\uff0c\u6709\u591a\u5c11\u7a2e\u7d44\u5408\u5176\u76f8\u4e58\u7a4d\u9664\u4ee5P\u7684\u9918\u6578\u7b49\u65bc1\u3002</p> <p>\u6bcf\u500b\u5143\u7d20\u53ef\u4ee5\u9078\u53d6\u6216\u4e0d\u9078\u53d6\u4f46\u4e0d\u53ef\u91cd\u8907\u9078\uff0cA\u4e2d\u7684\u6578\u5b57\u53ef\u80fd\u91cd\u8907\u3002P&lt;=1000000009\uff0c0 &lt; n &lt; 37\uff0c\u4e14\u5047\u8a2dA\u4e2d\u5143\u7d20\u7686\u5c0f\u65bcP\u3002</p> <p>\u8f38\u5165\u8aaa\u660e</p> <p>\u7b2c\u4e00\u884c\u662fn\u8207P\uff0c\u7b2c\u4e8c\u884cn\u500b\u6574\u6578\u662fA[i]\uff0c\u540c\u884c\u6578\u5b57\u4ee5\u7a7a\u767d\u9593\u9694\u3002</p> <p>\u8f38\u51fa\u8aaa\u660e</p> <p>\u6eff\u8db3\u689d\u4ef6\u7684\u7d44\u5408\u6578\uff0c\u56e0\u70ba\u6578\u5b57\u53ef\u80fd\u592a\u5927\uff0c\u8acb\u8f38\u51fa\u8a72\u7d44\u5408\u6578\u9664\u4ee5P\u7684\u9918\u6578</p> <p>\u7bc4\u4f8b\u8f38\u5165 #1</p> <p>5 11 1 1 2 6 10</p> <p>\u7bc4\u4f8b\u8f38\u51fa #1</p> <p>7</p> <p>\u89e3\u984c\u65b9\u6cd5\uff1a</p>"},{"location":"%E7%88%86%E6%90%9C/#_1","title":"\u4e00\u3001\u4f7f\u7528\u4f4d\u5143\u7aae\u8209","text":"\u4f4d\u5143\u7aae\u8209 \u300cNA (score:20%)(AC (0. 7s, 340KB))\u300d <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define nn \"\\n\"\n#define N 100001\n#define int long long \n\n\nint v[N];\n\n#undef int \nint main(){\n#define int long long \n\n\n    int n,P,ans=0;\n    cin&gt;&gt;n&gt;&gt;P;\n\n    for(int i=0;i&lt;n;i++){\n        cin&gt;&gt;v[i];\n    }\n\n    int _one=1;\n\n\n    for(int i=1;i&lt;(_one&lt;&lt;n);i++){\n        int pow=1;\n        for(int j=0;j&lt;n;j++){\n            if(i &amp; _one&lt;&lt;j){\n                pow*=v[j]%P;\n                pow%=P;\n            }\n        }\n        if(pow==1){\n            ans++;\n        }\n    }\n    cout&lt;&lt;ans;\n}\n</code></pre> NA (score:20%) #0: 20% TLE (1s) Killed #1: 20% AC (0.7s, 340KB) \u901a\u904e\u6aa2\u6e2c #2: 20% TLE (1s) Killed #3: 20% TLE (1s) Killed #4: 20% TLE (1s) Killed"},{"location":"%E7%88%86%E6%90%9C/#_2","title":"\u4e8c\u3001\u905e\u8ff4","text":"<p>\u5beb\u905e\u8ff4\u76f4\u63a5\u60f3\u50cf\u6a39\u72c0\u5716\uff0c\u6bcf\u4e00\u500b\u6578\u5b57\u6709\u5169\u500b\u9078\u64c7\uff1a\u9078\u3001\u4e0d\u9078 \u6240\u4ee5\u662f\uff1a</p> <p>\u524d\u4e00\u500b\u6578\u5b57 | |------------\u9078\u4e0b\u4e00\u500b\u6578\u5b57(\u52a0\u5165\u8a08\u7b97) | | |------------\u4e0d\u9078\u4e0b\u4e00\u500b\u6578\u5b57(\u4e0d\u52a0\u5165\u8a08\u7b97) </p> \u905e\u8ff4 \u300cNA (score:20%)(AC (0. 32s, 360KB))\u300d <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define nn \"\\n\"\n#define N 100001\n\n\nint v[N],ans=0;\nint n,P;\n\n\nint a(int i,int p){\n    if(i&gt;=n){//\u8dd1\u5b8c\u5168\u90e8\n        if(p==1){\n            ans++;\n        }\n        return 0;\n    }\n    a(i+1,(v[i]*p)%P);\n    a(i+1,p);\n    return 0;\n}\n\n\nint main(){\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n    cin&gt;&gt;n&gt;&gt;P;\n    for(int i=0;i&lt;n;i++){\n        cin&gt;&gt;v[i];\n    }\n    a(0,1);\n    cout&lt;&lt;ans-1;//\u6e1b\u53bb\u7a7a\u96c6\u5408\n}\n</code></pre> NA (score:20%) #0: 20% TLE (1s) Killed #1: 20% AC (32ms, 360KB) \u901a\u904e\u6aa2\u6e2c #2: 20% TLE (1s) Killed #3: 20% TLE (1s) Killed #4: 20% TLE (1s) Killed"},{"location":"%E7%88%86%E6%90%9C/#_3","title":"\u4e09\u3001\u6298\u534a\u679a\u8209","text":"<p>\u5206\u6210\u5169\u5806\uff0c\u518d\u5f9e\u5176\u4e2d\u4e00\u5806\u627e\u53e6\u4e00\u5806</p> NA (score:80%)  map\u89e3 <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define nn \"\\n\"\n#define N 100001\n#define int long long\nint v[N];\nint n,p;\nint ans=0;\nmap&lt;int,int&gt;m1,m2;\n\n\nint mod(int a,int y){\n    if(y==0){\n        return 1;\n    }\n    else if(y%2==0){//2\n        return (mod(a,y/2))%p*(mod(a,y/2))%p;\n    }\n    else{//1\n        return (mod(a,y-1))%p*(a)%p;\n    }\n}\n\nint make1(int it,int sum,bool is_o){\n    if(it&gt;=n/2){\n        if(is_o){\n            m1[sum%p]++;\n        }\n        return 0;\n    }\n    make1(it+1,(sum*v[it])%p,true);\n    make1(it+1,sum%p,is_o);\n    return 0;\n}\nint make2(int it,int sum,bool is_o){\n    if(it&gt;=n){\n        if(is_o){\n            m2[sum%p]++;\n        }\n        return 0;\n    }\n    make2(it+1,(sum*v[it])%p,true);\n    make2(it+1,sum%p,is_o);\n    return 0;\n}\n\n#undef int\nint main(){\n#define int long long\n\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n\n\n    //istringstream cin(\"5 11 1 1 2 6 10\");\n\n\n    cin&gt;&gt;n&gt;&gt;p;\n    for(int i=0;i&lt;n;i++){\n        cin&gt;&gt;v[i];\n    }\n\n    //\u5206\u5169\u534a\u5b58\u5230map&lt;\u4e58\u7a4d,\u500b\u6578&gt;\n    make1(0,1,false);//  0~n/2-1\n    make2(n/2,1,false);//  n/2~n-1\n\n    ans=m1[1]+m2[1];//\u5169\u534a\u9918\u6578\u662f1\u7684\u500b\u6578\n\n    for(auto i:m1){\n        int x=i.first, num=i.second;\n        int y=mod(x,p-2);\n        auto it=m2.find(y);\n        if (it!=m2.end()){\n            ans = (ans + num*it-&gt;second)%p; //\u6578\u5b571\u7684\u500b\u6578 \u4e58\u4ee5 \u6578\u5b572\u7684\u500b\u6578\n        }\n    }\n\n    cout&lt;&lt;ans;\n}\n</code></pre> NA (score:80%) #### #0: 20% [AC (39ms, 336KB)](https://zerojudge.cchs.chc.edu.tw/Submissions#collapseOne)  \u901a\u904e\u6aa2\u6e2c  #### #1: 20% [AC (14ms, 484KB)](https://zerojudge.cchs.chc.edu.tw/Submissions#collapseOne)  \u901a\u904e\u6aa2\u6e2c  #### #2: 20% [AC (63ms, 2.3MB)](https://zerojudge.cchs.chc.edu.tw/Submissions#collapseOne)  \u901a\u904e\u6aa2\u6e2c  #### #3: 20% [TLE (1s)](https://zerojudge.cchs.chc.edu.tw/Submissions#collapseOne)  Killed  #### #4: 20% [AC (40ms, 332KB)](https://zerojudge.cchs.chc.edu.tw/Submissions#collapseOne)  \u901a\u904e\u6aa2\u6e2c   AC (0. 9s, 26. 6MB) map\u89e3\uff0c\u5feb\u901f\u5e42\u6539\u6210\u8ff4\u5708 <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define nn \"\\n\"\n#define N 100001\n#define int long long\n\nint v[N];\nint n, p;\nint ans = 0;\nunordered_map&lt;int, int&gt; m1, m2;\n\nint mod(int a, int y, int p) {\n    int res = 1;\n    while (y &gt; 0) {\n        if (y % 2 == 1) {\n            res = (res * a) % p;\n        }\n        a = (a * a) % p;\n        y /= 2;\n    }\n    return res;\n}\n\nvoid make1(int it, int sum, bool is_o) {\n    if (it &gt;= n / 2) {\n        if (is_o) {\n            m1[sum % p]++;\n        }\n        return;\n    }\n    make1(it + 1, (sum * v[it]) % p, true);\n    make1(it + 1, sum % p, is_o);\n}\n\nvoid make2(int it, int sum, bool is_o) {\n    if (it &gt;= n) {\n        if (is_o) {\n            m2[sum % p]++;\n        }\n        return;\n    }\n    make2(it + 1, (sum * v[it]) % p, true);\n    make2(it + 1, sum % p, is_o);\n}\n\n#undef int\nint main() {\n#define int long long\n\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n\n    cin &gt;&gt; n &gt;&gt; p;\n    for (int i = 0; i &lt; n; i++) {\n        cin &gt;&gt; v[i];\n    }\n\n    // \u5206\u5169\u534a\u5b58\u5230map&lt;\u4e58\u7a4d,\u500b\u6578&gt;\n    make1(0, 1, false); // 0 ~ n/2-1\n    make2(n / 2, 1, false); // n/2 ~ n-1\n\n    ans = m1[1] + m2[1]; // \u5169\u534a\u9918\u6578\u662f1\u7684\u500b\u6578\n\n    for (auto i : m1) {\n        int x = i.first, num = i.second;\n        int y = mod(x, p - 2, p);\n        auto it = m2.find(y);\n        if (it != m2.end()) {\n            ans = (ans + num * it-&gt;second) % p; // \u6578\u5b571\u7684\u500b\u6578\u4e58\u4ee5\u6578\u5b572\u7684\u500b\u6578\n        }\n    }\n\n    cout &lt;&lt; ans &lt;&lt; nn;\n    return 0;\n}\n</code></pre> AC (0. 7s, 6. 3MB) \u9663\u5217\u89e3 <pre><code>// subset product = 1 mod P, O(n*2^(n/2)), sort\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long LL;\nLL sa[1&lt;&lt;19], sb[1&lt;&lt;19]; // subset product of a and b\n\n// generate all products of subsets of v[]\n// save result in prod[], return length of prod[]\nint subset(LL v[], int len, LL prod[], LL p) {\n    int k=0; // size of prod[]\n    for (int i=0;i&lt;len;i++) {\n        for (int j=0;j&lt;k;j++) { // (each subset)*v[i]\n            prod[k+j]=(prod[j]*v[i])%p;\n        }\n        prod[k+k]=v[i]; // for subset {v[i]}\n        k += k+1;\n    }\n    return k;\n}\n// find x^y mod P\nLL exp(LL x, LL y, LL p) {\n    if (y==0) return 1;\n    if (y &amp; 1) return (exp(x, y-1,p)*x)%p;\n    // otherwise y is even\n    LL t=exp(x, y/2, p);\n    return (t*t)%p;\n}\n\nint main() {\n    int i, n;\n    LL a[30], b[30]; // input data\n    LL p;\n    scanf(\"%d%lld\", &amp;n, &amp;p);\n    int len_a=n/2;\n    int len_b=n-len_a;\n    for (i=0;i&lt;len_a;i++)  // half in a\n        scanf(\"%lld\", &amp;a[i]);\n    for (i=0;i&lt;len_b;i++)  // half in b\n        scanf(\"%lld\", &amp;b[i]);\n    int len_sa=subset(a,len_a,sa,p); // all subsets of a\n    int len_sb=subset(b,len_b,sb,p); // all subsets of a\n    sort(sb, sb+len_sb);\n    // merge same element of sb, assume not empty\n    LL num[1&lt;&lt;19], len_sb2=1;\n    num[0]=1; //its multiplicity\n    for (i=1;i&lt;len_sb;i++) {\n        if (sb[i]!=sb[i-1]) { // new element\n            sb[len_sb2]=sb[i];\n            num[len_sb2]=1;\n            len_sb2++;\n        }\n        else {\n            num[len_sb2-1]++;\n        }\n    }\n    LL ans = (sb[0]==1) ? num[0]%p : 0; // the number of 1 in sb2\n    // compute 1 in sa and cross the two sides\n    // for each x in sa, find its inverse in sb2\n    for (i=0; i&lt;len_sa; i++) {\n        if (sa[i]==1) ans=(ans+1)%p;\n        LL y = exp(sa[i], p-2, p); // inverse\n        int it = lower_bound(sb, sb+len_sb2, y) - sb;\n        if (it&lt;len_sb2 &amp;&amp; sb[it]==y)  // found\n            ans = (ans + num[it])%p;\n    }\n    printf(\"%lld\\n\", ans);\n    return 0;\n}\n</code></pre>"},{"location":"%E7%9F%A9%E9%99%A3%E9%81%8B%E7%AE%97/","title":"\u9ad8\u65af\u6d88\u53bb\u6cd5","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nvoid gaussianElimination(vector&lt;vector&lt;double&gt;&gt; &amp;matrix, vector&lt;double&gt; &amp;solutions) {\n    int n = matrix.size();\n\n    // \u9032\u884c\u9ad8\u65af\u6d88\u53bb\u6cd5\n    for (int i = 0; i &lt; n; i++) {\n        // \u5c0b\u627e\u5217\u7684\u6700\u5927\u503c\uff0c\u4ee5\u4fbf\u9032\u884c\u90e8\u5206\u9078\u4e3b\u5143\u6cd5\n        int maxRow = i;\n        for (int k = i + 1; k &lt; n; k++) {\n            if (abs(matrix[k][i]) &gt; abs(matrix[maxRow][i])) {\n                maxRow = k;\n            }\n        }\n\n        // \u4ea4\u63db\u6700\u5927\u503c\u6240\u5728\u7684\u5217\u8207\u7576\u524d\u5217\n        for (int k = i; k &lt; n + 1; k++) {\n            swap(matrix[maxRow][k], matrix[i][k]);\n        }\n\n        // \u6d88\u53bb\u4e0b\u65b9\u7684\u5217\n        for (int k = i + 1; k &lt; n; k++) {\n            double c = -matrix[k][i] / matrix[i][i];\n            for (int j = i; j &lt; n + 1; j++) {\n                if (i == j) {\n                    matrix[k][j] = 0;\n                } else {\n                    matrix[k][j] += c * matrix[i][j];\n                }\n            }\n        }\n    }\n\n    // \u56de\u4ee3\u6c42\u89e3\u672a\u77e5\u6578\n    for (int i = n - 1; i &gt;= 0; i--) {\n        solutions[i] = matrix[i][n] / matrix[i][i];\n        for (int k = i - 1; k &gt;= 0; k--) {\n            matrix[k][n] -= matrix[k][i] * solutions[i];\n        }\n    }\n}\n\nint main() {\n    // \u793a\u4f8b\u77e9\u9663\n    vector&lt;vector&lt;double&gt;&gt; matrix = {\n        {5, 3, 2,170},\n        {4,6,0,160},\n        {2,7,1,190}\n    };\n\n    int n = matrix.size();\n    vector&lt;double&gt; solutions(n);\n\n    // \u547c\u53eb\u9ad8\u65af\u6d88\u53bb\u6cd5\u51fd\u6578\n    gaussianElimination(matrix, solutions);\n\n    // \u8f38\u51fa\u7d50\u679c\n    cout &lt;&lt; \"\u89e3\u70ba\uff1a\" &lt;&lt; endl;\n    for (int i = 0; i &lt; n; i++) {\n        cout &lt;&lt; \"x\" &lt;&lt; i + 1 &lt;&lt; \" = \" &lt;&lt; setprecision(10) &lt;&lt; solutions[i] &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\nvoid gaussianEliminationDiagonal(vector&lt;vector&lt;double&gt;&gt;&amp; matrix) {\n    int n = matrix.size();\n\n    for (int i = 0; i &lt; n; ++i) {\n        // \u5c07\u4e3b\u5143\u5316\u70ba1\n        double diagElement = matrix[i][i];\n        for (int j = 0; j &lt; n + 1; ++j) {\n            matrix[i][j] /= diagElement;\n        }\n\n        // \u6d88\u53bb\u8a72\u5217\u7684\u5176\u4ed6\u5143\u7d20\n        for (int k = 0; k &lt; n; ++k) {\n            if (k != i) {\n                double factor = matrix[k][i];\n                for (int j = 0; j &lt; n + 1; ++j) {\n                    matrix[k][j] -= factor * matrix[i][j];\n                }\n            }\n        }\n    }\n\n    // \u8f38\u51fa\u7d50\u679c\n    for (int i = 0; i &lt; n; ++i) {\n        cout &lt;&lt; \"x\" &lt;&lt; i + 1 &lt;&lt; \" = \" &lt;&lt; matrix[i][n] &lt;&lt; endl;\n    }\n}\n\nint main() {\n    // \u5b9a\u7fa9\u589e\u5ee3\u77e9\u9663\n    vector&lt;vector&lt;double&gt;&gt; matrix = {\n        {5, 3, 2, 170},\n        {4, 6, 0, 160},\n        {2, 7, 1, 190}\n    };\n\n    gaussianEliminationDiagonal(matrix);\n\n    return 0;\n}\n</code></pre>"},{"location":"%E7%A8%8B%E5%BC%8F%E7%A2%BC%E7%AF%84%E4%BE%8B/","title":"\u7a0b\u5f0f\u78bc\u7bc4\u4f8b","text":"<p>from\uff1a2024\u6e05\u83ef\u5927\u5b78IONC\u8b1b\u7fa9</p>"},{"location":"%E7%A8%8B%E5%BC%8F%E7%A2%BC%E7%AF%84%E4%BE%8B/#_1","title":"\u51fd\u6578\u88fd\u4f5c","text":"<p>\u8981\u8a2d\u8a08\u4e00\u500b\u6f14\u7b97\u6cd5\u53bb\u8a08\u7b97 (a, b) \u7684\u6700\u5927\u516c\u56e0\u6578\u3002\u6700\u76f4\u89c0\u7684\u60f3\u6cd5\u662f\u679a\u8209\u6240\u6709\u53ef\u80fd\u7684\u56e0\u6578\u3002\u8981\u8a2d\u8a08\u4e00\u500b\u6f14\u7b97\u6cd5\u53bb\u8a08\u7b97 (a, b) \u7684\u6700\u5927\u516c\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u56e0\u6578\u3002\u6700\u76f4\u89c0\u7684\u60f3\u6cd5\u662f\u679a\u8209\u6240\u6709\u53ef\u80fd\u7684\u56e0\u6578\u3002\u8981\u8a2d\u8a08\u4e00\u500b\u6f14\u7b97\u6cd5\u53bb\u8a08\u7b97 (a, b) \u7684\u6700\u5927\u516c\u56e0\u6578\u3002\u6700\u76f4\u89c0\u7684\u60f3\u6cd5\u662f\u679a\u8209\u6240\u6709\u53ef\u80fd\u7684\u56e0\u6578\u3002\u8981\u8a2d\u8a08\u4e00\u500b\u6f14\u7b97\u6cd5\u53bb\u8a08\u7b97 (a, b) \u7684\u6700\u5927\u516c\u56e0\u6578\u3002\u6700\u76f4\u89c0\u7684\u60f3\u6cd5\u662f\u679a\u8209\u6240\u6709\u53ef\u80fd\u7684\u56e0\u6578\u3002</p> \u8907\u88fd <pre><code>int gcd(int a, int b) {\n    for (int i = min(a, b); i &gt;= 1; i--) {\n        if (a % i == 0 &amp;&amp; b % i == 0) return i;\n    }\n    return 1;\n}</code></pre> <p>\uff01\uff01\uff01\uff1f\uff1f\uff1f\uff1f</p> <p>\u5f15\u7528</p>"},{"location":"%E7%A8%8B%E5%BC%8F%E7%A2%BC%E7%AF%84%E4%BE%8B/#h1","title":"h1","text":""},{"location":"%E7%A8%8B%E5%BC%8F%E7%A2%BC%E7%AF%84%E4%BE%8B/#h2","title":"h2","text":""},{"location":"%E7%A8%8B%E5%BC%8F%E7%A2%BC%E7%AF%84%E4%BE%8B/#h3","title":"h3","text":""},{"location":"%E7%A8%8B%E5%BC%8F%E7%A2%BC%E7%AF%84%E4%BE%8B/#h4","title":"h4","text":""},{"location":"%E7%A8%8B%E5%BC%8F%E7%A2%BC%E7%AF%84%E4%BE%8B/#h5","title":"h5","text":""},{"location":"%E7%A8%8B%E5%BC%8F%E7%A2%BC%E7%AF%84%E4%BE%8B/#h1_1","title":"\u4e3b\u8981\u6807\u9898 (h1)","text":""},{"location":"%E7%A8%8B%E5%BC%8F%E7%A2%BC%E7%AF%84%E4%BE%8B/#h2_1","title":"\u6b21\u7ea7\u6807\u9898 (h2)","text":""},{"location":"%E7%A8%8B%E5%BC%8F%E7%A2%BC%E7%AF%84%E4%BE%8B/#h3_1","title":"\u7b2c\u4e09\u7ea7\u6807\u9898 (h3)","text":""},{"location":"%E7%A8%8B%E5%BC%8F%E7%A2%BC%E7%AF%84%E4%BE%8B/#h4_1","title":"\u7b2c\u56db\u7ea7\u6807\u9898 (h4)","text":"<ul> <li>\u51fd\u6578\u88fd\u4f5c</li> <li>h1<ul> <li>h2<ul> <li>h3<ul> <li>h4<ul> <li>h5</li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li>\u4e3b\u8981\u6807\u9898 (h1)<ul> <li>\u6b21\u7ea7\u6807\u9898 (h2)<ul> <li>\u7b2c\u4e09\u7ea7\u6807\u9898 (h3)<ul> <li>\u7b2c\u56db\u7ea7\u6807\u9898 (h4)</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"%E7%B6%93%E5%85%B8%E5%A0%B1%E9%8C%AF/","title":"undefined reference to `WinMain@16'|","text":"<p>main\u6253\u932f\u4e86\uff0c\u7a0b\u5f0f\u627e\u4e0d\u5230main()</p>"},{"location":"%E7%B6%93%E5%85%B8%E5%A0%B1%E9%8C%AF/#segmentation-fault","title":"\u8a18\u61b6\u9ad4\u5340\u6bb5\u932f\u8aa4\uff01 Segmentation fault","text":"<p>\u8a18\u61b6\u9ad4\u932f\u8aa4 1. \u9663\u5217\u8a2d\u5b9a\u592a\u5927 2. \u9663\u5217\u641c\u5c0b\u6642\u8d85\u51fa\u9663\u5217\u7bc4\u570d</p> <p>\u51fd\u6578\u6c92\u6709 return 0;</p> <p>\u4e5f\u6709\u53ef\u80fd\u662fmax\u4e0d\u5920\u5927</p>"},{"location":"%E7%B6%93%E5%85%B8%E5%A0%B1%E9%8C%AF/#abort-terminate-called-after-throwing-an-instance-of-stdbad_alloc-what-stdbad_allocaborted-core-dumped","title":"\u7cfb\u7d71\u547c\u53eb\u4e86 abort \u51fd\u5f0f\uff01 terminate called after throwing an instance of 'std::bad_alloc'  what():  std::bad_allocAborted (core dumped)","text":""},{"location":"%E7%B6%93%E5%85%B8%E5%A0%B1%E9%8C%AF/#terminate-called-after-throwing-an-instance-of-stdbad_alloc-what-stdbad_alloc","title":"terminate called after throwing an instance of 'std::bad_alloc' what():  std::bad_alloc","text":"<p>\u8017\u76e1\u7cfb\u7d71\u8a18\u61b6\u9ad4\u4e26\u5f15\u767c std::bad_alloc \u7570\u5e38</p>"},{"location":"%E7%B7%9A%E6%AE%B5%E6%A8%B9/","title":"\u7dda\u6bb5\u6a39","text":"\u5927\u5e2b\u5beb\u7684\u4e8c\u5143\u6a39 \u984c\u76ee\uff1ahttps://codeforces.com/group/f0XUnFzgmg/contest/539362/problem/F  <pre><code>#include &lt;bits/stdc++.h&gt;\n#define Weakoying ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n#define int long long\n#define ll long long\n#define pii pair&lt;int, int&gt;hi\n#define vi vector&lt;int&gt;\n#define vii vector&lt;pair&lt;int, int&gt;&gt;\n#define pqueue priority_queue\n#define pb push_back\n#define F first\n#define S second\n// #define max(a, b) (a &gt; b ? a : b)\n// #define min(a, b) (a &lt; b ? a : b)\n#define cmax(a, b) a = (a &gt; b ? a : b)\n#define cmin(a, b) a = (a &lt; b ? a : b)\n#define put(x) cout &lt;&lt; x &lt;&lt; endl;\n#define DB(x) cerr &lt;&lt; #x &lt;&lt; \" \" &lt;&lt; x &lt;&lt; endl\n#define all(v) v.begin(), v.end()\n#define stop system(\"pause\");\n#define MEM(x, n) memset(x, n, sizeof(x));\n#define lowbit(x) x &amp;(-x)\n#define SZ(v) ((int)v.size())\n#if !LOCAL\n#define endl \"\\n\"\n#pragma GCC optimize(\"Ofast\", \"unroll-all-loops\")\n#endif\nconst int INF = 0x3f3f3f3f;\nconst ll INFLL = 0x3f3f3f3f3f3f3f3f;\nconst int P = 1e9+7;\n\nusing namespace std;\n/******************************************************************************/\n#define MAXN 200005\n#define MAXM 1000005 \n\nint n, q;\n\n// seg1: status = 1: even +, odd -\n// seg2: status = -1: even -, odd +\nstruct Node {\n    int sum, pre, suf, mx, tag, status;\n    Node(): sum(0), pre(0), suf(0), mx(0), tag(0) {}\n    Node(int status): sum(0), pre(0), suf(0), mx(0), tag(0), status(status) {}\n\n    void update(int val, int l, int r) {\n        int flag;\n        if (l % 2 == 0  &amp;&amp; r % 2 == 0)\n            flag = 1;\n        else if (l % 2 == 1 &amp;&amp; r % 2 == 1)\n            flag = -1;\n        else\n            flag = 0;\n        flag *= status;\n        sum += val * flag;\n        if (l % 2 == 0)\n            pre += val * (status == 1);\n        else\n            pre += val * (status == -1);\n        if (r % 2 == 0)\n            suf += val * (status == 1);\n        else\n            suf += val * (status == -1);\n        if (l != r || flag == 1)\n            mx += val;\n        tag += val;\n    }\n\n    Node operator +(const Node rhs) {\n        Node ret(status);\n        ret.sum = sum + rhs.sum;\n        ret.pre = max(pre, sum + rhs.pre);\n        ret.suf = max(rhs.suf, suf + rhs.sum);\n        ret.mx = max({mx, rhs.mx, suf + rhs.pre});\n        return ret;\n    }\n    void operator *=(const Node rhs) {\n        sum = rhs.sum;\n        pre = rhs.pre;\n        suf = rhs.suf;\n        mx = rhs.mx;\n    }\n};\n\ntemplate&lt;typename T&gt;\nstruct Segment_Tree {\n    vector&lt;T&gt; arr;\n    int status;\n    Segment_Tree(int status): status(status) {}\n\n    void init() {\n        arr.resize(MAXN &lt;&lt; 2, Node(status)); \n    }\n\n    void push(int i, int l, int r) {\n        if (l == r || arr[i].tag == 0)\n            return;\n        int mid = (l + r) / 2;\n        arr[i * 2].update(arr[i].tag, l, mid);\n        arr[i * 2 + 1].update(arr[i].tag, mid + 1, r);\n        arr[i].tag = 0;\n    }\n\n    void update(int ql, int qr, int val, int i = 1, int l = 1, int r = n) {\n        if (ql &lt;= l &amp;&amp; r &lt;= qr) {\n            arr[i].update(val, l, r);\n            return;\n        }\n        if (l &gt; qr || r &lt; ql)\n            return;\n        int mid = (l + r) / 2;\n        push(i, l, r);\n        update(ql, qr, val, i * 2, l, mid);\n        update(ql, qr, val, i * 2 + 1, mid + 1, r);\n        arr[i] *= arr[i * 2] + arr[i * 2 + 1];\n    }\n\n    T query(int ql, int qr, int i = 1, int l = 1, int r = n) {\n        if (ql &lt;= l &amp;&amp; r &lt;= qr)\n            return arr[i];\n        if (l &gt; qr || r &lt; ql)\n            return T();\n        push(i, l, r);\n        int mid = (l + r) / 2;\n        auto q1 = query(ql, qr, i * 2, l, mid);\n        auto q2 = query(ql, qr, i * 2 + 1, mid + 1, r);\n        auto tmp = q1 + q2;\n        return q1 + q2;\n    }\n};\n\nSegment_Tree&lt;Node&gt; seg1(1);\nSegment_Tree&lt;Node&gt; seg2(-1);\n\nvoid sol() {\n    cin &gt;&gt; n &gt;&gt; q;\n    seg1.init();\n    seg2.init();\n\n    int flag1 = 1, flag2 = -1;\n    for (int i = 1; i &lt;= n; i++) {\n        int x;\n        cin &gt;&gt; x;\n        seg1.update(i, i, x);\n        seg2.update(i, i, x);\n        flag1 *= -1;\n        flag2 *= -1;\n    }\n\n    while (q--) {\n        int op, l, r, x;\n        cin &gt;&gt; op &gt;&gt; l &gt;&gt; r;\n        if (op == 1) {\n            cin &gt;&gt; x;\n            seg1.update(l, r, x);\n            seg2.update(l, r, x);\n        }\n        else {\n            auto q1 = seg1.query(l, r);\n            auto q2 = seg2.query(l, r);\n            cout &lt;&lt; max(q1.mx, q2.mx) &lt;&lt; endl;\n        }\n    }\n}\n\nsigned main() {\n    Weakoying;\n    int t = 1;\n    //while (cin &gt;&gt; t)\n    {\n        while (t--) {\n            sol();\n        }\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"%E7%B7%9A%E6%AE%B5%E6%A8%B9/#_1","title":"\u57fa\u672c\u4e8c\u5143\u6a39","text":"<p>from 2024 IONC</p>"},{"location":"%E7%B7%9A%E6%AE%B5%E6%A8%B9/#_2","title":"\u7c21\u4ecb","text":"<p>\u4ee5\u4e8c\u5143\u6a39\u70ba\u57fa\u672c\u67b6\u69cb</p> <p>\u7dda\u6bb5\u6a39\u53ef\u4ee5\u5728\u5c0d\u6578\u6642\u9593 $O(log n)$ \u5167\u5b8c\u6210\u300c\u67d0\u4e00\u5340\u9593\u7684\u300d * \u5beb\u5165\u8cc7\u6599 * \u67e5\u8a62\u8cc7\u6599(\u67d0\u904b\u7b97) * \u4fee\u6539\u8cc7\u6599</p> <p>\u5148\u770b\u5230\u984c\u76ee\uff1a \u6709\u4e00\u500b\u6578\u5217 $a_1, a_2, a_3, \\cdots, a_n$\uff0c\u60f3\u5c0d\u9019\u500b\u6578\u5217\u505a\u4e00\u4e9b\u4e8b\uff1a</p> <ol> <li> <p>sum L R: \u8a08\u7b97 $a_L + a_{L+1} + \\cdots + a_R$</p> </li> <li> <p>add P V: \u5c07 $a_P$ \u7684\u503c\u52a0\u4e0a\u6574\u6578 $V$</p> </li> </ol> <p>$n, q \\leq 10^6$\uff0c$q$ \u662f\u64cd\u4f5c\u6578\u91cf\u3002</p> <p>\u6211\u5011\u5148\u5047\u8a2d$a_1, a_2, a_3, \\cdots, a_n$ \u70ba ${1,9,6,5,5,4,1,3}\uff0cn=8$</p> <p></p> <p>\u6211\u5011\u5148\u770b\u7dda\u6bb5\u6a39\u5982\u4f55\u904b\u4f5c</p>"},{"location":"%E7%B7%9A%E6%AE%B5%E6%A8%B9/#_3","title":"\u67e5\u8a62\u5340\u9593\u548c","text":"<p>\u5047\u8a2d\u6211\u5011\u8981\u8a08\u7b97\u52a0\u7e3d\u7684\u7bc4\u570d\u70ba $[1,4]$ \u3002 \u7528dfs\u67e5\u627e\uff0cbutton\u50b3\u905e\u7b54\u6848</p>"},{"location":"%E7%B7%9A%E6%AE%B5%E6%A8%B9/#_4","title":"\u66f4\u65b0\u6578\u64da","text":"<p>\u5047\u8a2d\u6211\u5011\u4fee\u6539\u7684\u4f4d\u7f6e\u70ba $4$ \u3002 \u7528dfs\u67e5\u627e\uff0cbutton\u50b3\u905e\u4fee\u6539</p>"},{"location":"%E7%B7%9A%E6%AE%B5%E6%A8%B9/#_5","title":"\u4e8c\u5143\u6a39\u7684\u7279\u6027","text":"<p>\u5be6\u4f5c\u524d\u6211\u5011\u9700\u8981\u5148\u77e5\u9053\u4e8c\u5143\u6a39\u7684\u7279\u6027</p> <ol> <li>\u4e00\u500b\u7236\u7bc0\u9ede\u6709\u5169\u500b\u5b50\u7bc0\u9ede</li> <li>\u5982\u679c\u628a\u4e00\u9846\u5b8c\u6574\u7684\u4e8c\u5143\u6a39\u7de8\u865f\uff0c\u6839\u7bc0\u9ede\u70ba1\uff0c\u7236\u7bc0\u9ede\u70bax\uff0c\u5247\u5de6\u5b50\u7bc0\u9ede\u70ba2*x\uff0c\u53f3\u5b50\u7bc0\u9ede\u70ba2*x+1\u3002\u5982\u5716\u4e00</li> <li>\u7576\u8cc7\u6599\u91cf\u70ban\u6642(\u8449\u7bc0\u7e3d\u6578\u91cf\u70ban)\uff0c\u7e3d\u7bc0\u9ede\u6578\u70ba n*2-1\u3002\u5982\u5716\u4e00</li> </ol>"},{"location":"%E7%B7%9A%E6%AE%B5%E6%A8%B9/#_6","title":"\u5716\u4e00\uff1a\u56db\u5c64\u4e8c\u5143\u6a39","text":"<p>\u6211\u5011\u53ef\u4ee5\u4f7f\u7528\u4e00\u7dad\u9663\u5217\u5132\u5b58\u4e0d\u540c\u7bc0\u9ede\u7684\u503c\u3002 \u90a3\u9ebc\u554f\u984c\u4f86\u4e86\uff0c\u5132\u5b58\u4e8c\u5143\u6a39\u7684\u9663\u5217\u5927\u5c0f\u8981\u8a2d\u5b9a\u591a\u5c11\u5462\uff1f</p> <p>\u4f60\u53ef\u80fd\u6703\u60f3\uff1a \u300c\u6839\u64da\u7279\u6027\uff0c\u5b8c\u6574\u7684\u4e8c\u5143\u6a39\u7e3d\u7bc0\u9ede\u6578\u70ba $n*2-1$ \uff0c\u90a3\u5c31\u8a2d\u5b9a\u70ba $2n$ \u5427\u3002\u300d</p> <p>\u842c\u842c\u4e0d\u53ef\uff01\uff01\u770b\u5230\u5716\u4e8c\uff0c\u539f\u9663\u5217\u6578\u91cf $n=6$ \u4f46\u537b\u8d85\u904e\u7684 $2n$ \u6700\u5927\u503c\u70ba $13$</p>"},{"location":"%E7%B7%9A%E6%AE%B5%E6%A8%B9/#n6","title":"\u5716\u4e8c\uff1a $n=6$ \u7684\u4e8c\u5143\u6a39\uff0c\u7da0\u8272\u70ba\u5132\u5b58\u5e95\u5c64\u8cc7\u6599\u4f4d\u7f6e","text":"<pre><code>v={1,2,3,4,5,6};\n</code></pre> <p>\u65bc\u662f\uff0c\u6211\u5011\u4e0d\u80fd\u8a2d\u5b9a\u592a\u5c0f\uff0c\u8a2d\u5b9a\u70ba $4n$ \u3002(\u6211\u4e5f\u4e0d\u77e5\u9053\u70ba\u4f55\uff0c\u591a\u65b9\u8cc7\u6599\u90fd\u8aaa\u9019\u662f\u5b89\u5168\u7684\u5927\u5c0f</p>"},{"location":"%E7%B7%9A%E6%AE%B5%E6%A8%B9/#_7","title":"\u5ba3\u544a","text":"<p><pre><code>int seg[4*N];\n</code></pre> \u7dda\u6bb5\u6a39\u5206\u6210\u4e09\u500b\u4e3b\u8981\u7684\u90e8\u4efd\uff0c\u4ee5\u53ca\u5169\u500b\u64cd\u4f5c\u51fd\u6578\uff1a</p> <ul> <li>Build\uff1a\u5efa\u7acb\u7dda\u6bb5\u6a39</li> <li>pull()\uff1a\u5408\u4f75\u7bc0\u9ede\uff0c\u7dda\u6bb5\u6a39\u6700\u95dc\u9375\u7684\u6b65\u9a5f</li> <li>Query\uff1a\u67e5\u8a62\u7dda\u6bb5\u6a39</li> <li>Modify\uff1a\u4fee\u6539\u7dda\u6bb5\u6a39</li> <li>push()\uff1a\u4e0b\u653e\u7bc0\u9ede\uff0c\u65bc\u4e0b\u5c0f\u7bc0\u624d\u6703\u4f7f\u7528</li> </ul> <p>\u63a5\u4e0b\u4f86\u4e00\u4e00\u4ecb\u7d39\u4e0d\u540c\u90e8\u5206</p>"},{"location":"%E7%B7%9A%E6%AE%B5%E6%A8%B9/#build","title":"Build(\u5275\u9020\u7dda\u6bb5\u6a39)","text":"<p>\u4f7f\u7528dfs\u9032\u5165\u5de6\u53f3\u5b50\u7bc0\u9ede\uff0c\u6700\u5f8c\u7528button\u50b3\u905e\u6bcf\u500b\u7bc0\u9ede\u7684sum</p> <pre><code>void build(int l, int r, int id = 1) {//l:\u5b50\u6a39\u5de6\u908a\u754c r:\u5b50\u6a39\u53f3\u908a\u754c id:\u5b50\u6a39id\n    if (l == r) {    //\u5982\u679c\u627e\u5230\u5e95\u5c64\uff0c\u653e\u5165\u539f\u672c\u9663\u5217\u8cc7\u6599\n        seg[id] = v[l];\n        return;\n    }\n    int m = (l + r) / 2;  //\u627e\u5230\u4e2d\u9593\u9032\u884c\u5206\u5272\n    build(l, m, id * 2);  //\u9032\u5165\u5de6\u5b50\u7bc0\u9ede\n    build(m + 1, r, id * 2 + 1); //\u9032\u5165\u53f3\u5b50\u7bc0\u9ede\n    seg[id] = seg[id*2]+seg[id*2+1];//buttonup \u5b50\u6a39\u7d2f\u7a4d\u7684sum\uff0c\u7236\u7bc0\u9ede\u70ba\u5169\u500b\u5b50\u7bc0\u9ede\u7684\u548c\n}\n</code></pre>"},{"location":"%E7%B7%9A%E6%AE%B5%E6%A8%B9/#pull","title":"pull(\u5408\u4f75\u7bc0\u9ede)","text":"<p>\u5728 build \u7684\u6700\u5f8c\u90e8\u5206 <code>seg[id] = seg[id*2]+seg[id*2+1];</code> \u662f\u70ba\u4e86\u5408\u4f75\u7bc0\u9ede\u8cc7\u8a0a\uff0c\u56e0\u70ba\u64cd\u4f5c\u4e0d\u4e00\u5b9a\u662f\u76f8\u52a0\uff0c\u4e5f\u53ef\u80fd\u662f\u76f8\u6e1b\uff0c\u6216\u662f\u53d6min\uff0c\u4e5f\u56e0\u70ba\u4e0d\u53ea\u6709 build\u6703\u9700\u8981\u5408\u4f75\u7bc0\u9ede\uff0c\u6240\u4ee5\u5c07\u5176\u88fd\u4f5c\u70ba\u4e00\u500b\u51fd\u6578\u3002</p> <p>pull\u51fd\u6578\uff1a <pre><code>void pull (int id){ //id:\u5b50\u6a39id\n    seg[id] = seg[id*2]+seg[id*2+1]; // \u4e0d\u4e00\u5b9a\u662f\u52a0\u6cd5\n}\n</code></pre></p> <p>\u65bc\u662f\u53ef\u4ee5\u5c07build\u51fd\u6578\u66f4\u6539\u5982\u4e0b\uff1a <pre><code>void build(int l, int r, int id = 1) {\n    if (l == r) {\n        seg[id] = v[l];\n        return;\n    }\n    int m = (l + r) / 2;\n    build(l, m, id * 2); \n    build(m + 1, r, id * 2 + 1); \n    pull(id);\n}\n</code></pre></p>"},{"location":"%E7%B7%9A%E6%AE%B5%E6%A8%B9/#query","title":"Query(\u67e5\u8a62\u7dda\u6bb5\u6a39)","text":"<pre><code>int query(int ql, int qr, int l, int r, int id = 1) { //ql:\u67e5\u8a62\u7684\u5de6\u908a\u754c qr:\u67e5\u8a62\u7684\u53f3\u908a\u754c  l:\u5b50\u6a39\u5de6\u908a\u754c r:\u5b50\u6a39\u53f3\u908a\u754c id:\u5b50\u6a39id\n    if (qr &lt; l || r &lt; ql) return 0;    //\u7bc4\u570d\u5167\u7121\u7b54\u6848\uff0c\u4e1f\u6389\uff0c\u505c\u6b62\u905e\u8ff4\n    if (ql &lt;= l &amp;&amp; r &lt;= qr) return seg[id];  //\u7bc4\u570d\u5c6c\u65bc\u7b54\u6848\u4e4b\u4e00\uff0c\u56de\u50b3\u6578\u503c\uff0c\u505c\u6b62\u905e\u8ff4\n    int m = (l + r) / 2;\n    //\u7bc4\u570d\u5167\u6709\u7b54\u6848\uff0c\u9032\u5165\u905e\u8ff4\n    return query(ql, qr, l, m, id * 2) + query(ql, qr, m + 1, r, id * 2 + 1); \n}\n</code></pre> <ol> <li>$r &lt; ql$ \u6216 $qr &lt; l$\uff1a\u9019\u7a2e\u60c5\u6cc1\u8868\u793a\u7576\u524d\u7bc0\u9ede\u7684\u5340\u9593 $[l, r]$ \u548c\u8981\u67e5\u8a62\u7684\u5340\u9593 $[ql, qr]$ \u5b8c\u5168\u6c92\u6709\u4ea4\u96c6\u3002\u6b64\u6642\u53ef\u4ee5\u6839\u64da\u984c\u76ee\u7684\u8981\u6c42\u6c7a\u5b9a\u56de\u50b3\u503c\uff0c\u4f8b\u5982\u672c\u984c\u662f\u67e5\u8a62\u5340\u9593\u7e3d\u548c\u56e0\u6b64\u53ef\u4ee5 $return  0$\u3002</li> <li>$ql \\le l$ \u4e14 $r \\le qr$\uff1a\u6b64\u6642\u7576\u524d\u7bc0\u9ede\u7684\u5340\u9593\u6b63\u597d\u88ab\u8981\u67e5\u8a62\u7684\u5340\u9593\u5b8c\u5168\u5305\u542b\uff0c\u76f4\u63a5 $return$ \u7576\u524d\u7bc0\u9ede\u7684\u7d00\u9304\u7684\u5340\u9593\u503c\u5373\u53ef\u3002</li> <li>\u5176\u4ed6\u60c5\u6cc1\uff1a\u9664\u4e86\u4e0a\u8ff0\u5169\u7a2e\u60c5\u6cc1\u5916\uff0c\u5269\u4e0b\u7684\u60c5\u6cc1\u5c31\u662f\u7576\u524d\u7bc0\u9ede\u7684\u5340\u9593 $[l, r]$ \u548c\u8981\u67e5\u8a62\u7684\u5340\u9593 $[ql, qr]$ \u6709\u4ea4\u96c6\u4f46\u662f\u6c92\u6709\u5b8c\u5168\u5305\u542b\uff0c\u6b64\u6642\u76f4\u63a5\u905e\u8ff4\u5169\u908a\u518d\u5408\u4f75\u7b54\u6848\u5373\u53ef\u3002\u5982\u6b64\u4e0d\u65b7\u905e\u8ff4\u4e0b\u53bb\u6700\u7d42\u4e00\u5b9a\u6703\u8b8a\u6210\u524d\u9762\u5169\u7a2e\u60c5\u6cc1\u3002</li> </ol> <p>\u4ee5\u4e0b\u70ba\u67e5\u8a62\u5340\u9593\u548c\u7684\u5f71\u7247</p>"},{"location":"%E7%B7%9A%E6%AE%B5%E6%A8%B9/#update","title":"Update(\u66f4\u65b0\u6578\u64da)","text":"<p>\u5c07\u7b2c $p$ \u500b\u8cc7\u6599\u4fee\u6539\u6210 $v$\u3002\u8207\u524d\u9762\u7684 build \u5f88\u50cf\uff0c\u5148\u627e\u51fa\u7b2c $p$ \u500b\u8cc7\u6599\u6240\u5728\u7684\u4f4d\u7f6e\uff0c\u518d\u7531\u4e0b\u800c\u4e0a\u7684\u66f4\u65b0\u7dda\u6bb5\u6a39\u3002\u540c\u6a23\u7684\u66f4\u65b0\u7bc0\u9ede\u4e5f\u53ea\u9700\u8981\u82b1\u8cbb $\\mathcal{O}(\\log n)$ \u7684\u6642\u9593\u3002\u4f46\u6bd4\u66b4\u529b\u65b9\u6cd5\u7684 $\\mathcal{O}(1)$ \u9084\u8981\u5dee\u3002</p> <pre><code>void update(int p, int v, int l, int r, int id = 1) {//p:\u76ee\u6a19\u7269\u4f4d\u7f6e v:\u4fee\u6539\u7684\u6578\u503c l:\u5b50\u6a39\u5de6\u908a\u754c r:\u5b50\u6a39\u53f3\u908a\u754c id:\u5b50\u6a39id\n    if (p &lt; l || r &lt; p) return; //\u7bc4\u570d\u5167\u7121\u76ee\u6a19\u4f4d\u7f6e\uff0c\u4e0d\u9032\u5165\u905e\u8ff4\n    if (l == r) {      //\u627e\u5230\u76ee\u6a19\u4f4d\u7f6e\uff0c\u4fee\u6539\n        seg[id] = v;\n        return;\n    }\n    int m = (l + r) / 2;\n    update(p, v, l, m, id*2);  //\u5230\u5de6\u5b50\u7bc0\u9ede\n    update(p, v, m + 1, r, id*2+1); //\u5230\u53f3\u5b50\u7bc0\u9ede\n    pull(id);  //\u5408\u4f75\u5b50\u7bc0\u9ede\u8cc7\u8a0a\u5230\u7236\u7bc0\u9ede\n}\n</code></pre> <p>\u9019\u6a23\u6211\u5011\u5c31\u5b8c\u6210\u4e86\u7b2c\u4e00\u968e\u6bb5\uff0c\u4e86\u89e3\u4e86\u7dda\u6bb5\u6a39\u7684\u57fa\u672c\u67b6\u69cb\u3002 * \u5beb\u5165\u8cc7\u6599 $O(n)$ * \u67e5\u8a62\u8cc7\u6599(\u67d0\u904b\u7b97) $O(log (n))$ * \u4fee\u6539\u8cc7\u6599 $O(log (n)))$</p> <p>\u76ee\u524d\u5b8c\u6574\u4ee3\u78bc\uff1a <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define MAXN 100\n\nint seg[4*MAXN];\nint n=0;\nvector&lt;int&gt;v;\n\nvoid pull (int id){\n    seg[id] = seg[id*2]+seg[id*2+1];\n}\nvoid build(int l, int r, int id = 1) {\n    if (l == r) {\n        seg[id] = v[l];\n        return;\n    }\n    int m = (l + r) / 2;\n    build(l, m, id * 2); \n    build(m + 1, r, id * 2 + 1); \n    pull(id);\n}\nint query(int ql, int qr, int l, int r, int id = 1) {\n    if (qr &lt; l || r &lt; ql) return 0; \n    if (ql &lt;= l &amp;&amp; r &lt;= qr) return seg[id]; \n    int m = (l + r) / 2;\n    return query(ql, qr, l, m, id * 2) + query(ql, qr, m + 1, r, id * 2 + 1);\n}\nvoid update(int p, int v, int l, int r, int id = 1) {\n    if (p &lt; l || r &lt; p) return; \n    if (l == r) {      \n        seg[id] = v;\n        return;\n    }\n    int m = (l + r) / 2;\n    update(p, v, l, m, id*2);\n    update(p, v, m + 1, r, id*2+1);\n    pull(id);\n}\nint main() {\n    v={1,9,6,5,5,4,1,3};\n    n=v.size();\n    build(0,n-1);\n    cout&lt;&lt;query(1,4,0,n-1)&lt;&lt;\"\\n\"; //\u67e5\u8a62[1,4]\n    update(4,8,0,n-1);  //\u4fee\u6539[4]\u7684 5 \u70ba 8\n    cout&lt;&lt;query(1,4,0,n-1); //\u67e5\u8a62[1,4]\n}\n</code></pre></p> <p>\u525b\u63d0\u5230\uff1a * \u5beb\u5165\u8cc7\u6599 $O(n)$ * \u67e5\u8a62\u8cc7\u6599 $O(log (n))$ * \u4fee\u6539\u8cc7\u6599 $O(log (n)))$</p> <p>\u53ef\u4ee5\u770b\u5230\u4fee\u6539\u8cc7\u6599\u7684\u901f\u5ea6\u70ba$O(log (n)))$\uff0c\u90a3\u5047\u8a2d\u6211\u5011\u9700\u8981\u4fee\u6539\u4e00\u500b\u5340\u9593\u7684\u8cc7\u6599\uff0c\u901f\u5ea6\u4e0d\u5c31\u662f$O((n)log (n)))$\uff1f\u9019\u6bd4\u66b4\u529b\u6cd5\u9084\u7cdf\u7cd5\u3002</p> <p>\u5982\u679c\u6211\u5011\u80fd\u628a\u4e00\u4e9b\u4e8b\u60c5\u5148\u4e0d\u8981\u505a\uff0c\u653e\u5230\u665a\u9ede\u771f\u6b63\u9700\u8981\u7684\u6642\u5019\u518d\u505a\u6703\u4e0d\u6703\u66f4\u5feb\uff1f\u9019\u5c31\u662f\u61f6\u60f0\u6a19\u8a18\u7684\u7cbe\u795e\uff01</p> <p>\u8aaa\u7c21\u55ae\u4e00\u9ede\uff0c\u5c31\u662f\u7528 top down \u7684\u65b9\u5f0f\u4f86\u4fee\u6539\u6578\u503c\u3002\u5982\u679c\u8a62\u554f\u7684\u5340\u9593\u4e0d\u9700\u8981\u5230\u6700\u5e95\u5c64\uff0c\u5c31\u4e0d\u4fee\u6539\u6700\u5e95\u5c64\u6578\u503c\uff0c\u4e0d\u505a\u591a\u9918\u7684\u4e8b\u60c5\u3002</p> <p>\u5047\u8a2d\u6307\u4ee4\u70ba\uff1a\u5c07 $[3,5]$ \u5340\u9593\u6240\u6709\u6578\u5b57\u52a0\u4e0a $5$</p> <p>\u7b2c\u4e00\u6b65\uff1a \u9032\u5165\u6839\u905e\u8ff4\uff0c\u8b8a\u66f4\u6578\u503c\uff0c\u50b3\u905e\u6a19\u7c64\u81f3\u5b50\u7bc0\u9ede</p> <p>\u6307\u4ee4\u4e2d\uff0c\u5340\u9593\u70ba $[3,5]$ \u4e5f\u5c31\u662f\u7e3d\u5171\u6709 $5-3+1=3$ \u500b\u7bc0\u9ede\u6703\u52a0 $5$ \uff0c\u90a3\u9ebc\u7e3d\u5171\u6703\u52a0\u591a\u5c11\u5462\uff1f\u7b54\u6848\u662f(\u88ab\u66f4\u6539\u7bc0\u9ede\u6578)*(\u589e\u52a0\u6578\u503c)\uff0c\u4e5f\u5c31\u662f $3*5=15$ \u3002 \u66f4\u65b0\u5b8c\u6839\u7bc0\u9ede\u6578\u503c\u5f8c\uff0c\u628a\u6839\u7bc0\u9ede\u7684tag\u6e05\u9664\uff0c\u50b3\u905etag\u7d66\u5b50\u7bc0\u9ede\u3002</p> <p></p> <p>\u63a5\u4e0b\u4f86\u5047\u8a2d\u8981\u67e5\u8a62 $[4,6]$ \u5340\u9593\u7e3d\u548c\uff0c\u76f4\u63a5\u770b\u7684\u8a71\uff0c\u6211\u5011\u5176\u5be6\u9700\u8981\u7684\u662f $[4\u30015]$ \u5340\u9593\u7684\u503c\uff0c\u4ee5\u53ca$[6]$\u7684\u503c\uff0c\u5982\u4e0b\u5716\u7d05\u8272\u5340\u57df</p> <p></p> <p>\u63a5\u4e0b\u4f86\u76f4\u63a5DFS\u67e5\u8a62\u6578\u503c\uff0c\u5728\u5f80\u4e0b\u67e5\u8a62\u6642\u9806\u4fbf\u50b3\u905etag</p>"},{"location":"%E8%80%83%E5%89%8D%E5%BF%85%E7%9C%8B/","title":"\u6ce8\u610flong long","text":"<p>\u4fdd\u96aa\u8d77\u898b\uff0c\u6bcf\u4e00\u984c\u6700\u5f8cint \u90fd\u8981\u8f49\u6210long long(\u9664\u4e86main)</p>"},{"location":"%E8%80%83%E5%89%8D%E5%BF%85%E7%9C%8B/#codeblocks","title":"codeblocks\u4f7f\u7528\u6280\u5de7","text":"\u5df2\u719f\u8a18"},{"location":"%E8%80%83%E5%89%8D%E5%BF%85%E7%9C%8B/#\u63db\u884c\u53cd\u659c\u7dda\u300c\u300d\u4e0d\u80fdtab","title":"\u63db\u884c\u53cd\u659c\u7dda\u300c\\\u300d\u4e0d\u80fdtab","text":"<p>\u53ef\u4ee5\u914d\u5408\u61f6\u4eba\u6cd5\u4f7f\u7528</p> <p>\u6ce8\u610f!!\u5728<code>\\</code>\u4e4b\u524d\u8981\u7a7a\u683c\uff0c\u4e0d\u7136\u6703\u9ecf\u5728\u4e00\u8d77\u8b8a\u6210\uff1a \u539f\u672c\uff1a7 6 5 2 4 2 1 1 8 5 1 1 3 1 4 2 0 2 0 3 3 \u8b8a\u6210\uff1a7 65 2 4 2 1 1 85 11 31 42 02 03 3 </p> <p></p>"},{"location":"%E8%80%83%E5%89%8D%E5%BF%85%E7%9C%8B/#ctrl-r","title":"\u5c0b\u627e\u8207\u53d6\u4ee3 ctrl + R","text":"<p>ctrl + R</p>"},{"location":"%E8%80%83%E5%89%8D%E5%BF%85%E7%9C%8B/#ctrlshiftc-ctrlshiftx","title":"\u591a\u884c\u8a3b\u89e3Ctrl+Shift+C / Ctrl+Shift+x","text":""},{"location":"%E8%80%83%E5%89%8D%E5%BF%85%E7%9C%8B/#_1","title":"\u6613\u5fd8\u82f1\u6587","text":""},{"location":"%E8%80%83%E5%89%8D%E5%BF%85%E7%9C%8B/#_2","title":"\u8cc7\u6599\u578b\u614b","text":""},{"location":"%E8%80%83%E5%89%8D%E5%BF%85%E7%9C%8B/#istringstream-cin","title":"istringstream cin(\" \");","text":"<p>istringstream cin(\"5 17 \\ 5 5 8 3 10\");</p>"},{"location":"%E8%80%83%E5%89%8D%E5%BF%85%E7%9C%8B/#stl","title":"STL","text":""},{"location":"%E8%80%83%E5%89%8D%E5%BF%85%E7%9C%8B/#priority_queue","title":"priority_queue","text":"<p>\u512a\u5148\u99d0\u5217 </p>"},{"location":"%E8%80%83%E5%89%8D%E5%BF%85%E7%9C%8B/#multiset","title":"multiset","text":"<p>\u591a\u5143\u7d20set(\u6703\u6392\u5e8f) </p>"},{"location":"%E8%80%83%E5%89%8D%E5%BF%85%E7%9C%8B/#unordered_set","title":"unordered_set","text":"<p>\u4e0d\u6392\u5e8fset(\u55ae\u5143\u7d20)</p>"},{"location":"%E8%80%83%E5%89%8D%E5%BF%85%E7%9C%8B/#unordered_multiset","title":"unordered_multiset","text":"<p>\u4e0d\u6392\u5e8f\u4e14\u591a\u91cd\u5143\u7d20</p>"},{"location":"%E8%80%83%E5%89%8D%E5%BF%85%E7%9C%8B/#priority_queue_1","title":"priority_queue","text":"<p>\u512a\u5148\u99d0\u5217</p>"},{"location":"%E8%80%83%E5%89%8D%E5%BF%85%E7%9C%8B/#prev_permutationnext_permutation","title":"prev_permutation/next_permutation","text":"<p>\u6392\u5217 prev_permutation(v,v+n)</p>"},{"location":"%E8%80%83%E5%89%8D%E5%BF%85%E7%9C%8B/#isdigitisalpha","title":"isdigit(\u5b57\u5143)/isalpha(\u5b57\u5143)","text":"<p>\u6578\u5b57\u3001\u5b57\u6bcd\u5224\u65b7</p>"},{"location":"%E8%80%83%E5%89%8D%E5%BF%85%E7%9C%8B/#touppertolower","title":"toupper(\u5b57\u5143)/tolower(\u5b57\u5143)","text":"<p>\u5927\u5c0f\u5beb\u8f49\u63db</p>"},{"location":"%E8%80%83%E5%89%8D%E5%BF%85%E7%9C%8B/#priority_queue_2","title":"priority_queue","text":"<p>\u512a\u5148\u67f1\u5217</p>"},{"location":"%E8%80%83%E5%89%8D%E5%BF%85%E7%9C%8B/#_3","title":"\u9663\u5217","text":""},{"location":"%E8%80%83%E5%89%8D%E5%BF%85%E7%9C%8B/#strlen","title":"\u53d6\u5b57\u4e32\u9577\u5ea6(strlen)","text":""},{"location":"%E8%80%83%E5%89%8D%E5%BF%85%E7%9C%8B/#atoi","title":"\u5b57\u4e32\u8f49\u6578\u5b57(atoi)","text":""},{"location":"%E8%80%83%E5%89%8D%E5%BF%85%E7%9C%8B/#strcpy","title":"\u8907\u88fd(strcpy)","text":""},{"location":"%E8%80%83%E5%89%8D%E5%BF%85%E7%9C%8B/#strcmp","title":"\u5b57\u4e32\u6bd4\u5927\u5c0f(\u8981\u4f7f\u7528strcmp)","text":""},{"location":"%E8%A4%87%E9%9B%9C%E5%BA%A6/","title":"\u8907\u96dc\u5ea6","text":""},{"location":"%E8%A4%87%E9%9B%9C%E5%BA%A6/#_1","title":"\u8907\u96dc\u5ea6","text":""},{"location":"%E8%B3%87%E6%96%99%E4%BE%86%E6%BA%90/","title":"\u8cc7\u6599\u4f86\u6e90","text":""},{"location":"%E8%B3%87%E6%96%99%E4%BE%86%E6%BA%90/#ap325","title":"AP325","text":"<p>https://drive.google.com/drive/u/0/folders/10hZCMHH0YgsfguVZCHU7EYiG8qJE5f-m</p>"},{"location":"%E8%B3%AA%E6%95%B8%E3%80%81%E6%89%BE%E8%B3%AA%E5%9B%A0%E6%95%B8%28%E5%9F%83%E5%BC%8F%E7%AF%A9%29/","title":"\u8cea\u6578\u3001\u627e\u8cea\u56e0\u6578(\u57c3\u5f0f\u7be9)","text":"<p>from 2024 IONC</p>"},{"location":"%E8%B3%AA%E6%95%B8%E3%80%81%E6%89%BE%E8%B3%AA%E5%9B%A0%E6%95%B8%28%E5%9F%83%E5%BC%8F%E7%AF%A9%29/#_1","title":"\u8cea\u6578\u5b9a\u7fa9","text":"<p>\u5c0d\u65bc\u4e00\u500b\u5927\u65bc $1$ \u7684\u6574\u6578\uff0c\u5982\u679c\u5176\u56e0\u6578\u53ea\u6709\u81ea\u5df1\u548c $1$\uff0c\u5247\u7a31\u9019\u500b\u6578\u662f\u8cea\u6578\uff0c\u5426\u5247\u7a31\u70ba\u5408\u6578\u3002\u5728\u6b64\u5b9a\u7fa9\u4e2d $1$ \u65e2\u4e0d\u662f\u8cea\u6578\u4e5f\u4e0d\u662f\u5408\u6578\u3002</p>"},{"location":"%E8%B3%AA%E6%95%B8%E3%80%81%E6%89%BE%E8%B3%AA%E5%9B%A0%E6%95%B8%28%E5%9F%83%E5%BC%8F%E7%AF%A9%29/#_2","title":"\u5224\u65b7\u8cea\u6578","text":"<p>\u6642\u9593\u8907\u96dc\u5ea6\u70ba $O(\\sqrt{n})$</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define io ios::sync_with_stdio(0);cin.tie(0);\n#define all(x) x.begin(),x.end()\n\nstring isp(int n){\n    if(n&lt;2)return \"\u975e\u8cea\u6578\\n\";\n    for(int i=2;i*i&lt;=n;i++){\n        if(n%i==0){\n            return \"\u975e\u8cea\u6578\\n\";\n        }\n    }\n    return \"\u8cea\u6578\\n\";\n}\n\nint main(){io\n    // stringstream cin(\"13 14\");\n    int n;\n\n    while(cin&gt;&gt;n){\n        cout&lt;&lt;isp(n);\n    }\n}\n</code></pre>"},{"location":"%E8%B3%AA%E6%95%B8%E3%80%81%E6%89%BE%E8%B3%AA%E5%9B%A0%E6%95%B8%28%E5%9F%83%E5%BC%8F%E7%AF%A9%29/#_3","title":"\u57c3\u5f0f\u7be9\u6cd5","text":""},{"location":"%E8%B3%AA%E6%95%B8%E3%80%81%E6%89%BE%E8%B3%AA%E5%9B%A0%E6%95%B8%28%E5%9F%83%E5%BC%8F%E7%AF%A9%29/#_4","title":"\u9806\u4fbf\u627e\u8cea\u56e0\u6578\u7684\u89e3","text":"<p>\u5224\u65b7\u5340\u9593\u5167\u7684\u8cea\u6578 <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define nn \"\\n\"\n#define io ios::sync_with_stdio(0);cin.tie(0);\n\nvector&lt;vector&lt;int&gt;&gt; p(int n) {\n    vector&lt;vector&lt;int&gt;&gt; v(n + 1);\n    for (int i = 2; i &lt;= n; ++i) { //\u5c0d\u65bc\u6bcf\u500b\u6578\n        if (v[i].size()==0) {\n            for (int j = i; j &lt;= n; j += i) { // \u627e\u500d\u6578\n                v[j].push_back(i);\n            }\n        }\n    }\n    return v;\n}\n\n\nint main(){io\n    //stringstream cin(\"10\");\n\n    int n;\n    cin&gt;&gt;n;\n    vector&lt;vector&lt;int&gt;&gt; v=p(n);\n\n    for(int i=1;i&lt;=n;i++){\n        cout&lt;&lt;i&lt;&lt;\":\";\n        for(int i:v[i]){\n            cout&lt;&lt;i&lt;&lt;\" \";\n        }\n        cout&lt;&lt;nn;\n    }\n\n}\n</code></pre></p>"},{"location":"%E8%B3%AA%E6%95%B8%E3%80%81%E6%89%BE%E8%B3%AA%E5%9B%A0%E6%95%B8%28%E5%9F%83%E5%BC%8F%E7%AF%A9%29/#_5","title":"\u7dda\u6027","text":"<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define nn \"\\n\"\n#define io ios::sync_with_stdio(0);cin.tie(0);\n#define int long long\n\n\nvector&lt;int&gt; p(const int M) {\n    vector&lt;int&gt; primes, divider(M+1, 0); //divider\u5b58\u6700\u5c0f\u8cea\u56e0\u6578\n    for (int n = 2; n &lt;= M; n++) {  //\u5c0d\u65bc\u6240\u6709\u7684\u6578\u5b57\n        //cout&lt;&lt;n&lt;&lt;\": \"&lt;&lt;nn;\n        if (divider[n] == 0) {  // \u5982\u679c\u662f\u8cea\u6578\n            primes.emplace_back(n), divider[n] = n;// prime\u8a18\u9304\u6240\u6709\u8cea\u6578\n        }\n        for (int j = 0; primes[j] * n &lt;= M; ++j) { // \u5c0d\u65bc\u5c0f\u65bcn\u7684\u6240\u6709\u8cea\u6578\uff0c\u5c07n\u4e58\u4ee5\u8cea\u6578\u5f97\u5230\u65b0\u6578\n            //cout&lt;&lt;primes[j]&lt;&lt;\" \"&lt;&lt;primes[j] * n&lt;&lt;nn;\n            divider[primes[j] * n] = primes[j]; //\u5c07n\u7684\u6700\u5c0f\u56e0\u6578\u7d66n\n            if (n % primes[j] == 0) break; //\u53ef\u4ee5\u6574\u9664\n        } \n    }\n    return primes;\n}\n\n\n\nvector&lt;int&gt; sieve(int N) { //\u7b2c\u4e8c\u7a2e\n    vector&lt;bool&gt; is_prime(N + 1, true);\n    is_prime[0] = is_prime[1] = false;\n    vector&lt;int&gt; primes;\n    for(int i = 2; i &lt;= N; i++) {\n        if(is_prime[i]) {\n            primes.push_back(i);\n        }\n        for(auto j : primes) {\n            if(i * j &gt; N) {\n                break;\n            }\n            is_prime[i * j] = false;\n            if(i % j == 0) {\n                break;\n            }\n        }\n    }\n    return primes;\n}\n\nsigned main(){io\n    int n=19;\n    vector&lt;int&gt; v=p(n);\n    for(int i:v){\n        cout&lt;&lt;i&lt;&lt;nn;\n    }\n}\n</code></pre>"},{"location":"%E8%B3%AA%E6%95%B8%E3%80%81%E6%89%BE%E8%B3%AA%E5%9B%A0%E6%95%B8%28%E5%9F%83%E5%BC%8F%E7%AF%A9%29/#-","title":"\u7c73\u52d2-\u62c9\u8cd3\u8cea\u6578\u5224\u5b9a\u6cd5","text":"<p>https://blog.csdn.net/Emm_Titan/article/details/121304016</p>"},{"location":"%E8%B3%AA%E6%95%B8%E3%80%81%E6%89%BE%E8%B3%AA%E5%9B%A0%E6%95%B8%28%E5%9F%83%E5%BC%8F%E7%AF%A9%29/#_6","title":"\u4f8b\u984c","text":""},{"location":"%E8%B3%AA%E6%95%B8%E3%80%81%E6%89%BE%E8%B3%AA%E5%9B%A0%E6%95%B8%28%E5%9F%83%E5%BC%8F%E7%AF%A9%29/#a007","title":"a007. \u5224\u65b7\u8cea\u6578","text":"<p>\u5927\u5e2b\u984c\u89e3</p> \u7a0b\u5f0f\u78bc \u7dda\u6027\u7be9  \u5148\u627e\u51fa $\\sqrt{2147483647}$ \u4ee5\u5167\u7684\u8cea\u6578\u3002\u5c0d\u65bc\u6bcf\u500b\u6578\u5b57 $n$\uff0c\u6aa2\u67e5\u662f\u5426\u6709\u8cea\u6578\u80fd\u6574\u9664\u5373\u53ef\u3002  \u56e0\u70ba\u6240\u6709\u548c\u6578\u4e00\u5b9a\u662f\u7531\u8cea\u6578\u7d44\u6210   <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define nn \"\\n\"\n#define io ios::sync_with_stdio(0);cin.tie(0);\n\n\n\nvector&lt;int&gt; p(const int M) {\n    vector&lt;int&gt; primes, divider(M+1, 0); //divider\u5b58\u6700\u5c0f\u8cea\u56e0\u6578\n    for (int n = 2; n &lt;= M; n++) {  //\u5c0d\u65bc\u6240\u6709\u7684\u6578\u5b57\n        //cout&lt;&lt;n&lt;&lt;\": \"&lt;&lt;nn;\n        if (divider[n] == 0) {  // \u5982\u679c\u662f\u8cea\u6578\n            primes.emplace_back(n), divider[n] = n;// prime\u8a18\u9304\u6240\u6709\u8cea\u6578\n        }\n        for (int j = 0; primes[j] * n &lt;= M; ++j) { // \u5c0d\u65bc\u5c0f\u65bcn\u7684\u6240\u6709\u8cea\u6578\uff0c\u5c07n\u4e58\u4ee5\u8cea\u6578\u5f97\u5230\u65b0\u6578\n            //cout&lt;&lt;primes[j]&lt;&lt;\" \"&lt;&lt;primes[j] * n&lt;&lt;nn;\n            divider[primes[j] * n] = primes[j]; //\u5c07n\u7684\u6700\u5c0f\u56e0\u6578\u7d66n\n            if (n % primes[j] == 0) break; //\u53ef\u4ee5\u6574\u9664\n        } \n    }\n    return primes;\n}\n\n\nsigned main(){io\n\n    //istringstream cin(\"13 14\");\n\n    int n=sqrt(2147483647);\n    vector&lt;int&gt; v=p(n);\n\n    int k;\n    while(cin&gt;&gt;k){\n        int is=1;\n        for(int i:v){\n            if(k%i==0){\n                if(i != k) {\n                    is = 0;\n                }\n                break;\n            }\n        }\n        if(is){\n            cout&lt;&lt;\"\u8cea\u6578\\n\";\n        }\n        else{\n            cout&lt;&lt;\"\u975e\u8cea\u6578\\n\";\n        }\n    }\n\n}\n</code></pre>"},{"location":"%E8%B7%B3%E8%BA%8D%E4%BA%8C%E5%88%86%E6%90%9C/","title":"\u8df3\u8e8d\u4e8c\u5206\u641c","text":""},{"location":"%E8%B7%B3%E8%BA%8D%E4%BA%8C%E5%88%86%E6%90%9C/#_1","title":"\u8df3\u8e8d\u4e8c\u5206\u641c","text":"\u6ce8\u610f!!! \u88e1\u9762\u662fwhile\u4e0d\u662fif  <p>\u9019\u662f\u6bd4\u8f03\u7279\u5225\u7684\u4e8c\u5206\u641c\u5c0b\uff0c\u7528\u4f86\u89e3\u6c7a\u4e00\u500b\u6578\u5217\u53ef\u4ee5\u5206\u5169\u534a\uff0c\u627e\u5230\u524d\u534a\u908a\u7684\u6700\u5f8c\u4e00\u9805(\u4f8b\u5982\uff1a\u5927\u65bc\u76ee\u6a19\u6578\u503c\u3001\u5c0f\u65bc\u76ee\u6a19\u6578\u503c)\u4ed6\u7684\u5c0d\u8c61\u4e5f\u662f\u5df2\u6392\u5e8f\u7684\u9663\u5217\uff0c\u4ee5\u4e8c\u5206\u641c\u627e\u51fa\u5c0f\u65bc\u6216\u662f\u5c0f\u65bc\u7b49\u65bc\u76ee\u6a19\u6578\u503c\u7684index</p> <p>\u6211\u5011\u4f86\u770b\u770b\u5b83\u7684\u904b\u4f5c\u904e\u7a0b\uff1a</p> <p>\u4ed6\u5148\u628a\u8df3\u8e8d\u7684\u8ddd\u96e2(junp)\u8a2d\u70ba\u7e3d\u5927\u5c0f\u7684\u4e00\u534a \u63a5\u8457\u78ba\u8a8d\u8df3\u4e86\u4e4b\u5f8c\u7684 v[junp] \u662f\u5426\u5c0f\u65bc\u76ee\u6a19 \u5982\u679c\u5c0f\u65bc\uff1a\u4ee3\u8868\u53ef\u4ee5\u8df3(\u5c07index\u52a0\u4e0ajunp) \u5982\u679c\u4e0d\u6703\uff1a\u90a3\u5c31\u628a\u8df3\u8e8d\u7684\u8ddd\u96e2\u9664\u4ee5\u4e8c\u76f4\u5230\u53ef\u4ee5\u8df3\uff0c\u6216\u662fjump=0\uff0c\u5982\u679c\u7b49\u65bc\u96f6 \u5c31\u4ee3\u8868\u5df2\u7d93\u627e\u5230\u4e86\u5c0f\u65bc\u76ee\u6a19\u6578\u503c\u7684\u6700\u5927\u503c \u8df3\u4e86\u7b2c\u4e00\u6b21\u4e4b\u5f8c\u5c31\u6703\u9047\u5230\u554f\u984c\uff1a\u6709\u53ef\u80fd\u6703\u8d85\u51fa\u9663\u5217\u7bc4\u570d\uff0c\u5c0e\u81f4\u7121\u6cd5\u627e\u5230v[index]\uff0c</p> <p>\u6240\u4ee5\u5224\u65b7\u53ef\u4ee5\u8df3\u7684\u689d\u4ef6\u70ba\uff1a 1.\u8df3\u4e86\u4e0d\u6703\u8d85\u51fa\u9663\u5217\u7bc4\u570d 2.\u8df3\u4e86\u4e4b\u5f8c\u80fd\u5920\u5c0f\u65bc\u76ee\u6a19\u6578\u503c </p> <p>\u5168\u90e8\u53ef\u5206\u70ba\u5169\u534a\uff1a\u5c0f\u65bc6\u3001\u5927\u65bc6 \u6211\u5011\u4f86\u770b\u627e\u5c0b\u5c0f\u65bc\u7269\u6a19\u6578\u503c(6)\u7684\u6700\u5927\u503c\u4f8b\u5b50\uff1a</p> <p>int v[10]={1,3,4,5,7,9,11,14,15,19};  //\u905e\u589e\u9663\u5217 int L=0,R=10;  //\u8d77\u9ede\u3001\u7d42\u9ede int x=6  //\u76ee\u6a19\u6578\u503c int index;  //\u4f4d\u7f6e</p> <p></p> <p>\u5099\u8a3b\uff1agif\u88fd\u4f5c</p> <p>\u7a0b\u5f0f\u78bc\uff1a <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define nn \"\\n\"\nint main(){\n    int v[10]={1,3,4,5,7,9,11,14,15,19};\n    int L=0,R=10;\n    int x=6;\n    int index=L;\n\n    for (int jump = (R-L)/2; jump ;jump/= 2) {\n        while (index+jump&lt;R &amp;&amp; v[index+jump]&lt;x){\n            index += jump;\n        }\n    }\n    cout&lt;&lt;nn&lt;&lt;index;\n}\n</code></pre> \u8f38\u51fa\uff1a <pre><code>3\n</code></pre></p> <p>\u5224\u65b7\u300c\u662f\u5426\u6709\u627e\u5230\u300d \u7a0b\u5f0f\u78bc\uff1a <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define nn \"\\n\"\n#define int long long\n\nint v[1000];   // index\nint n;\n\nint jumpfind(int x) { // find_the_last(&lt;=x)\n    int i = 0;\n    for (int j = n / 2; j &gt; 0; j &gt;&gt;= 1) {\n        while ((i + j &lt;n) &amp;&amp; (v[i + j] &lt;= x )) {\n            i += j;\n        }\n    }\n    // \u6aa2\u67e5\u662f\u5426\u627e\u5230\u7b26\u5408\u689d\u4ef6\u7684\u5143\u7d20\n    if (v[i] &lt;= x) {\n        return i;\n    } else {\n        return  n; // \u6c92\u627e\u5230\uff0c\u8fd4\u56den\n    }\n}\n\nsigned main() {\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n\n    istringstream cin(\"6 \\\n1 2 5 7 8 9\");\n\n    cin&gt;&gt;n;\n    for (int i = 0; i &lt; 6; i++) {\n        cin &gt;&gt; v[i];\n    }\n\n    int x = 8;\n    cout &lt;&lt; \"x: \" &lt;&lt; jumpfind(x) &lt;&lt; nn;\n\n    return 0;\n}\n</code></pre></p> <p>:::success \u524d\u9762\u63d0\u5230\u53ef\u5206\u70ba\u5169\u534a\uff0c\u5c0f\u65bc6\u3001\u5927\u65bc6 \u5728\u7b2c11\u884c\u7684<code>while (index+jump&lt;R &amp;&amp; v[index+jump]&lt;x){</code>\u4e2d\uff0c<code>v[index+jump]&lt;x</code>\u5c31\u662f\u7528\u4f86\u5206\u8fa8\u662f\u5426\u5c0f\u65bc6\u8981\u5982\u4f55\u601d\u8003\u5beb\u5927\u65bc6\u9084\u662f\u5c0f\u65bc6\u5462\uff1f \u8d77\u9ede\u4f4d\u7f6e\u5c0f\u65bc6\uff0c\u6240\u4ee5\u5c31\u662f\u5c0f\u65bc6</p> <p>\u8df3\u8e8d\u4e8c\u5206\u641c\u9069\u5408\u7528\u65bc\u6709\u55ae\u8abf\u6027\u7684\u984c\u76ee\u5594 :::</p> <p>\u5728\u8caa\u5fc3\u6f14\u7b97\u6cd5\u6709\u4e00\u984c\u300cP-4-9. \u57fa\u5730\u53f0 (APCS201703) \u300d\u53ef\u4ee5\u7df4\u7fd2\u770b\u770b</p>"},{"location":"%E8%BC%B8%E5%87%BA%E7%B5%90%E5%B0%BE%E7%A9%BA%E7%99%BD/","title":"\u8f38\u51fa\u7d50\u5c3e\u7a7a\u767d","text":"<p>\u5982\u679c\u8981\u8f38\u51fa\u4e00\u6bb5\u8cc7\u6599\uff0c\u4f46\u662f\u7d50\u5c3e\u4e0d\u9700\u8981\u4e2d\u9593\u5206\u9694\u7269\uff0c\u8a72\u5982\u4f55\u505a\u5462?</p> <p>\u773e\u6240\u5468\u77e5~ \u5728\u5ba3\u544a\u9663\u5217\u6642<code>char x[6]=\"12345\";</code>\u6642\uff0c\u7a0b\u5f0f\u5728\u4e4b\u5f8c\u9047\u5230<code>x</code>\u5c31\u6703\u56de\u50b3\u70ba<code>\"12345\"</code></p> <p>\u7a0b\u5f0f\u78bc\uff1a <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nint main(){\n    char x[6]=\"12345\";\n    cout&lt;&lt;x&lt;&lt;\"\\n\";\n    cout&lt;&lt;x[3];\n}\n</code></pre> \u8f38\u51fa\uff1a <pre><code>12345\n4\n</code></pre></p> <p>\u6240\u4ee5\u4e5f\u53ef\u4ee5\u76f4\u63a5\u628a<code>x</code>\u66ff\u4ee3\u6210<code>\"12345\"</code>\uff0c\u5982\u4e0b\uff1a</p> <p>\u7a0b\u5f0f\u78bc\uff1a <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nint main(){\n    char x[6]=\"12345\";\n    cout&lt;&lt;\"12345\"&lt;&lt;\"\\n\";\n    cout&lt;&lt;\"12345\"[3];\n}\n</code></pre> \u8f38\u51fa\uff1a <pre><code>12345\n4\n</code></pre></p> <p>\u90a3\u9ebc\u63a5\u4e0b\u4f86\u6211\u5011\u5c31\u53ef\u4ee5\u505a\u6709\u8da3\u7684\u4e8b\u60c5\u4e86</p> <p>\u7a0b\u5f0f\u78bc\uff1a <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nint main(){\n    char c[](\"12345\");\n    for(int i=0;i&lt;strlen(c);i++){\n        cout&lt;&lt;c[i]&lt;&lt;\"abcde\" [i];\n    }\n}\n</code></pre></p> <p>\u8f38\u51fa\uff1a <pre><code>1a2b3c4d5e\n</code></pre></p> <p>\u9019\u6bb5\u7a0b\u5f0f\u78bc\u5728\u8f38\u51fa\u82f1\u6587\u6642\u6839\u64da i \u8f38\u51fa\u4e0d\u540c\u82f1\u6587 \u63db\u500b\u65b9\u5411\uff0c\u8981\u653e\u5165\u5e03\u6797\u503c\u4e5f\u662f\u53ef\u4ee5\u7684</p> <p>\u7a0b\u5f0f\u78bc\uff1a <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nint main(){\n    char c[](\"12345\");\n    for(int i=0;i&lt;strlen(c);i++){\n        cout&lt;&lt;c[i]&lt;&lt;\";\" [i==strlen(c)-1];\n    }\n}\n</code></pre></p> <p>\u8f38\u51fa\uff1a <pre><code>1;2;3;4;5\n</code></pre></p>"},{"location":"%E9%81%9E%E8%BF%B4/","title":"\u905e\u8ff4","text":"<p>\u51fd\u6578\u547c\u53eb\u51fd\u6578</p>"},{"location":"%E9%81%9E%E8%BF%B4/#p-1-1-1","title":"\u4f8b\u984c P-1-1. \u5408\u6210\u51fd\u6578(1)","text":"<p>\u4ee4 f(x)=2x-1, g(x,y)=x+2y-3\u3002\u672c\u984c\u8981\u8a08\u7b97\u4e00\u500b\u5408\u6210\u51fd\u6578\u7684\u503c\uff0c\u4f8b\u5982 f(g(f(1),3))=f(g(1,3))=f(4)=7\u3002 </p> <p>Time limit: 1 \u79d2 </p> <p>\u8f38\u5165\u683c\u5f0f\uff1a\u8f38\u5165\u4e00\u884c\uff0c\u9577\u5ea6\u4e0d\u8d85\u904e 1000\uff0c\u5b83\u662f\u4e00\u500b f \u8207 g \u7684\u5408\u6210\u51fd\u6578\uff0c\u4f46\u6240\u6709\u7684\u62ec \u5f27\u8207\u9017\u865f\u90fd\u63db\u6210\u7a7a\u767d\u3002\u8f38\u5165\u7684\u6574\u6578\u7d55\u5c0d\u503c\u7686\u4e0d\u8d85\u904e 1000\u3002 </p> <p>\u8f38\u51fa\uff1a\u8f38\u51fa\u51fd\u6578\u503c\u3002\u6700\u5f8c\u7b54\u6848\u8207\u904b\u7b97\u904e\u7a0b\u4e0d\u6703\u8d85\u904e\u6b63\u8ca0 10 \u5104\u7684\u5340\u9593\u3002 </p> <p>\u7bc4\u4f8b\u8f38\u5165\uff1a f g f 1 3 </p> <p>\u7bc4\u4f8b\u8f38\u51fa\uff1a 7</p> <p>\u5229\u7528\u905e\u8ff4\u5f0f\u8655\u7406 1. \u8f38\u5165 2. \u53d6\u5f8c\u9762\u503c</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\n#define N 10000\nistream&amp; ss=cin;\n//stringstream ss(\"f g f 1 3\");\n\nint a(){\n    char s[N];\n    ss&gt;&gt;s;\n    if(s[0]=='f'){\n        return 2*a()-1;\n    }\n    else if(s[0]=='g'){\n        return a()+2*a()-3;\n    }\n    else{\n        return atoi(s);\n    }\n}\nint main(){\n    cout&lt;&lt;a();\n}\n</code></pre> \u7a0b\u5f0f\u78bc <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\n#define N 10000\nistream&amp; ss=cin;\n//stringstream ss(\"f g f 1 3\");\n\nint a(){\n    char s[N];\n    ss&gt;&gt;s;\n    if(s[0]=='f'){\n        return 2*a()-1;\n    }\n    else if(s[0]=='g'){\n        return a()+2*a()-3;\n    }\n    else{\n        return atoi(s);\n    }\n}\nint main(){\n    cout&lt;&lt;a();\n}\n</code></pre>"},{"location":"%E9%81%9E%E8%BF%B4/#q-1-2-2-apcs201902","title":"\u7fd2\u984c Q-1-2. \u5408\u6210\u51fd\u6578(2) (APCS201902)","text":"<p>\u4ee4 f(x)=2x\u20133\uff1bg(x,y)=2x+y\u20137\uff1bh(x,y,z)=3x\u20132y+z\u3002\u672c\u984c\u8981\u8a08\u7b97\u4e00\u500b\u5408\u6210\u51fd \u6578\u7684\u503c\uff0c\u4f8b\u5982 h(f(5),g(3,4),3)=h(7,3,3)=18\u3002 </p> <p>Time limit: 1 \u79d2 </p> <p>\u8f38\u5165\u683c\u5f0f\uff1a\u8f38\u5165\u4e00\u884c\uff0c\u9577\u5ea6\u4e0d\u8d85\u904e 1000\uff0c\u5b83\u662f\u4e00\u500b f, g, \u8207 h \u7684\u5408\u6210\u51fd\u6578\uff0c\u4f46\u6240\u6709\u7684\u62ec\u5f27\u8207\u9017\u865f\u90fd\u63db\u6210\u7a7a\u767d\u3002\u8f38\u5165\u7684\u6574\u6578\u7d55\u5c0d\u503c\u7686\u4e0d\u8d85\u904e 1000\u3002</p> <p>\u8f38\u51fa\uff1a\u8f38\u51fa\u51fd\u6578\u503c\u3002\u6700\u5f8c\u7b54\u6848\u8207\u904b\u7b97\u904e\u7a0b\u4e0d\u6703\u8d85\u904e\u6b63\u8ca0 10 \u5104\u7684\u5340\u9593\u3002 </p> <p>\u7bc4\u4f8b\u8f38\u5165\uff1a h f 5 g 3 4 3 </p> <p>\u7bc4\u4f8b\u8f38\u51fa\uff1a 18</p> \u7a0b\u5f0f\u78bc <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define nn \"\\n\"\n#define N 1001\n\nistream &amp; ss =cin;\n//stringstream ss(\"h f 5 g 3 4 3\");\n\n\nint a(){\n    char s[N];\n    ss&gt;&gt;s;\n    if(s[0]=='f'){\n        return 2*a()-3;\n    }\n    if(s[0]=='g'){\n        return 2*a()+a()-7;\n    }\n    if(s[0]=='h'){\n        return 3*a()-2*a()+a();\n    }\n    return atoi(s);\n}\n\n\n\nint main(){\n    cout&lt;&lt;a();\n}\n</code></pre>"},{"location":"%E9%81%9E%E8%BF%B4/#p-1-3","title":"\u4f8b\u984c P-1-3. \u68cd\u5b50\u4e2d\u9ede\u5207\u5272","text":"<p>\u6709\u4e00\u53f0\u5207\u5272\u68cd\u5b50\u7684\u6a5f\u5668\uff0c\u6bcf\u6b21\u5c07\u4e00\u6bb5\u68cd\u5b50\u6703\u9001\u5165\u6b64\u53f0\u6a5f\u5668\u6642\uff0c\u6a5f\u5668\u6703\u5075\u6e2c\u68cd\u5b50\u4e0a\u6a19\u793a \u7684\u53ef\u5207\u5272\u9ede\uff0c\u7136\u5f8c\u8a08\u7b97\u51fa\u6700\u63a5\u8fd1\u4e2d\u9ede\u7684\u5207\u5272\u9ede\uff0c\u4e26\u65bc\u6b64\u5207\u5272\u9ede\u5c07\u68cd\u5b50\u5207\u5272\u6210\u5169\u6bb5\uff0c\u5207 \u5272\u5f8c\u7684\u6bcf\u4e00\u6bb5\u68cd\u5b50\u90fd\u6703\u88ab\u7e7c\u7e8c\u9001\u5165\u6a5f\u5668\u9032\u884c\u5207\u5272\uff0c\u76f4\u5230\u6bcf\u4e00\u6bb5\u68cd\u5b50\u90fd\u6c92\u6709\u5207\u5272\u9ede\u70ba \u6b62\u3002\u8acb\u6ce8\u610f\uff0c\u5982\u679c\u6700\u63a5\u8fd1\u4e2d\u9ede\u7684\u5207\u5272\u9ede\u6709\u4e8c\uff0c\u5247\u6703\u9078\u64c7\u5ea7\u6a19\u8f03\u5c0f\u7684\u5207\u5272\u9ede\u3002\u6bcf\u4e00\u6bb5\u68cd \u5b50\u7684\u5207\u5272\u6210\u672c\u662f\u8a72\u6bb5\u68cd\u5b50\u7684\u9577\u5ea6\uff0c\u8f38\u5165\u4e00\u6839\u9577\u5ea6 L \u7684\u68cd\u5b50\u4e0a\u9762 N \u500b\u5207\u5272\u9ede\u4f4d\u7f6e\u7684\u5ea7 \u6a19\uff0c\u8acb\u8a08\u7b97\u51fa\u5207\u5272\u7e3d\u6210\u672c\u3002 </p> <p>Time limit: 1 \u79d2</p> <p>\u8f38\u5165\u683c\u5f0f\uff1a\u7b2c\u4e00\u884c\u6709\u5169\u500b\u6b63\u6574\u6578 N \u8207 L\u3002\u7b2c\u4e8c\u884c\u6709 N \u500b\u6b63\u6574\u6578\uff0c\u4f9d\u5e8f\u4ee3\u8868\u7531\u5c0f\u5230\u5927\u7684 \u5207\u5272\u9ede\u5ea7\u6a19 p[1]~p[N]\uff0c\u6578\u5b57\u9593\u4ee5\u7a7a\u767d\u9694\u958b\uff0c\u5ea7\u6a19\u7684\u6a19\u793a\u7684\u65b9\u5f0f\u662f\u4ee5\u68cd\u5b50\u5de6\u7aef\u70ba 0\uff0c \u800c\u53f3\u7aef\u70ba L\u3002N \uf0a3 5e4\uff0cL&lt; 1e9\u3002 </p> <p>\u8f38\u51fa\uff1a\u5207\u5272\u7e3d\u6210\u672c\u9ede\u3002 </p> <p>\u7bc4\u4f8b\u8f38\u5165\uff1a  4 10 1 2 4 6 </p> <p>\u7bc4\u4f8b\u8f38\u51fa\uff1a 22 </p> <p>\u7bc4\u4f8b\u8aaa\u660e\uff1a\u7b2c\u4e00\u6b21\u6703\u5207\u5272\u5728\u5ea7\u6a19 4 \u7684\u4f4d\u7f6e\uff0c\u5207\u6210\u5169\u6bb5 [0, 4], [4, 10]\uff0c\u6210\u672c 10\uff1b [0, 4] \u5207\u6210 [0, 2] \u8207 [2, 4]\uff0c\u6210\u672c 4\uff1b [4, 10] \u5207\u6210 [4, 6] \u8207 [6, 10]\uff0c\u6210\u672c 6\uff1b [0, 2] \u5207\u6210 [0, 1] \u8207 [1, 2]\uff1b\u6210\u672c 2\uff1b \u7e3d\u6210\u672c 10+4+6+2 = 22</p> <p>\u53ef\u4ee5\u5efa\u4e00\u500b\u9663\u5217</p> v v[0] v[1] v[2] v[3] v[4] v[5] value 0 1 2 4 6 10 \u7a0b\u5f0f\u78bc\uff1a\u7dda\u6027\u641c\u5c0b <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define N 50001\n#define nn \"\\n\"\n\nistream&amp; ss=cin;\n//stringstream ss(\"4 10 \\\n1 2 4 6\");\n\nlong long v[N];\nlong long cut(long long a,long long b){\n    long long len=v[b]-v[a];\n    long long m=(v[b]+v[a])/2;\n    if(b-a&lt;=1){\n        return 0;\n    }\n    long long w=a;\n    while(v[w]&lt;m){\n        w++;\n    }\n    if(v[w-1]-v[a]&gt;=v[b]-v[w]){\n        w--;\n    }\n    return len+cut(a,w)+cut(w,b);\n}\nint main(){\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n    long long n,m;\n    ss&gt;&gt;n&gt;&gt;m;\n    v[0]=0;\n    v[n+1]=m;\n    for(long long i=1;i&lt;=n;i++){\n        ss&gt;&gt;v[i];\n    }\n    cout&lt;&lt;cut(0,n+1);\n}\n</code></pre> \u7a0b\u5f0f\u78bc\uff1a\u8df3\u8e8d\u4e8c\u5206\u641c\u5c0b <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define N 50001\n#define nn \"\\n\"\n\nistream&amp; ss=cin;\n//stringstream ss(\"4 10 \\\n1 2 4 6\");\n\nlong long v[N];\nlong long cut(long long a,long long b){\n    if(b-a&lt;=1){\n        return 0;\n    }\n    long long m=(v[b]+v[a])/2;\n    long long w=a;\n\n    //jump-----------------------------------------------\n    for (int jump=(b-a)/2;jump&gt;0; jump&gt;&gt;=1) {\n        while (w+jump&lt;b &amp;&amp; v[w+jump]&lt;m){\n            w+=jump;\n        }\n    }\n    if (v[w]-v[a] &lt; v[b]-v[w+1]){\n        w++;\n    }\n    //jump-----------------------------------------------\n\n\n    return v[b]-v[a] +cut(a,w)+cut(w,b);\n}\nint main(){\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n    long long n,m;\n    ss&gt;&gt;n&gt;&gt;m;\n    v[0]=0;\n    v[n+1]=m;\n    for(long long i=1;i&lt;=n;i++){\n        ss&gt;&gt;v[i];\n    }\n    cout&lt;&lt;cut(0,n+1);\n}\n</code></pre> \u7a0b\u5f0f\u78bc\uff1alower_bound <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define N 50001\n#define nn \"\\n\"\n\nistream&amp; ss=cin;\n//stringstream ss(\"4 10 \\\n1 2 4 6\");\n\nlong long v[N];\n\n\nlong long cut(long long a,long long b){\n    long long len=v[b]-v[a];\n    long long k=(v[b]+v[a])/2;\n    if(b-a&lt;=1){\n        return 0;\n    }\n\n    //lower_bound---------------------------------------\n    long long m=lower_bound(v+a, v+b,k)-v;\n    if(v[m-1]-v[a]&gt;=v[b]-v[m]){\n        m--;\n    }\n    //lower_bound---------------------------------------\n\n    return len+cut(a,m)+cut(m,b);\n}\nint main(){\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n    long long n,m;\n    ss&gt;&gt;n&gt;&gt;m;\n    v[0]=0;\n    v[n+1]=m;\n    for(long long i=1;i&lt;=n;i++){\n        ss&gt;&gt;v[i];\n    }\n    cout&lt;&lt;cut(0,n+1);\n}\n</code></pre>"},{"location":"%E9%81%9E%E8%BF%B4/#q-1-4-apcs201802","title":"\u7fd2\u984cQ-1-4. \u652f\u9ede\u5207\u5272 (APCS201802) (@@)","text":"<p>\u8f38\u5165\u4e00\u500b\u5927\u5c0f\u70ba N \u7684\u4e00\u7dad\u6574\u6578\u9663\u5217 p[]\uff0c\u8981\u627e\u5176\u4e2d\u4e00\u500b\u6240\u8b02\u7684\u6700\u4f73\u5207\u9ede\u5c07\u9663\u5217\u5207\u6210 \u5de6\u53f3\u5169\u584a\uff0c\u7136\u5f8c\u91dd\u5c0d\u5de6\u53f3\u5169\u500b\u5b50\u9663\u5217\u7e7c\u7e8c\u5207\u5272\uff0c\u5207\u5272\u7684\u7d42\u6b62\u689d\u4ef6\u6709\u5169\u500b\uff1a\u5b50\u9663\u5217\u7bc4\u570d \u5c0f\u65bc 3 \u6216\u5207\u5230\u7d66\u5b9a\u7684\u5c64\u7d1a K \u5c31\u4e0d\u518d\u5207\u5272\u3002\u800c\u6240\u8b02\u6700\u4f73\u5207\u9ede\u7684\u8981\u6c42\u662f\u8b93\u5de6\u53f3\u5404\u9ede\u6578\u5b57 \u8207\u5230\u5207\u9ede\u8ddd\u96e2\u7684\u4e58\u7a4d\u7e3d\u548c\u5dee\u7570\u76e1\u53ef\u80fd\u7684\u5c0f\uff0c\u4f46\u4e0d\u53ef\u4ee5\u662f\u5169\u7aef\u9ede\uff0c\u4e5f\u5c31\u662f\u8aaa\uff0c\u82e5\u5340\u6bb5\u7684 \u7bc4\u570d\u662f[s,t]\uff0c\u5247\u8981\u627e\u51fa\u5207\u9ede m\u5c6c\u65bc[s+1,t-1]\uff0c\u4f7f\u5f97\u8d8a\u5c0f\u8d8a\u597d\uff0c\u5982\u679c\u6709\u5169\u500b\u6700\u4f73\u5207\u9ede\uff0c\u5247\u9078\u64c7\u7de8\u865f\u8f03\u5c0f\u7684\u3002\u6240\u8b02\u5207\u5272\u5c64\u7d1a\u7684\u9650\u5236\uff0c\u7b2c\u4e00\u6b21\u5207\u4ee5\u7b2c \u4e00\u5c64\u8a08\u7b97\u3002 </p> <p>Time limit: 1 \u79d2 </p> <p>\u8f38\u5165\u683c\u5f0f\uff1a\u7b2c\u4e00\u884c\u6709\u5169\u500b\u6b63\u6574\u6578 N \u8207 K\u3002\u7b2c\u4e8c\u884c\u6709 N \u500b\u6b63\u6574\u6578\uff0c\u4ee3\u8868\u9663\u5217\u5167\u5bb9 p[1] ~ p[N]\uff0c\u6578\u5b57\u9593\u4ee5\u7a7a\u767d\u9694\u958b\uff0c\u7e3d\u548c\u4e0d\u8d85\u904e 109\u3002N &lt;= 50000\uff0c\u5207\u5272\u5c64\u7d1a\u9650\u5236 K&lt;30\u3002 </p> <p>\u8f38\u51fa\uff1a\u6240\u6709\u5207\u9ede\u7684 p[ ]\u503c\u7e3d\u548c\u3002</p> <p>\u7bc4\u4f8b\u4e00\u8f38\u5165\uff1a  7 3  2 4 1 3 7 6 9 </p> <p>\u7bc4\u4f8b\u4e00\u8f38\u51fa\uff1a  11</p> <p>\u7bc4\u4f8b\u4e8c\u8f38\u5165\uff1a  5 1  1 2 3 4 100</p> <p>\u7bc4\u4f8b\u4e8c\u8f38\u51fa\uff1a  4</p> <p>\u7bc4\u4f8b\u4e00\u8aaa\u660e\uff1a\u7b2c\u4e00\u5c64\u5207\u5728 7\uff0c\u5207\u6210\u7b2c\u4e8c\u5c64\u7684[2,4,1,3]\u8207[6,9]\u3002\u5de6\u908a[2,4,1,3] \u5207\u5728 4 \u8207 1 \u90fd\u662f\u6700\u4f73\uff0c\u9078\u64c7 4 \u4f86\u5207\uff0c\u5207\u6210[2]\u8207[1,3]\uff0c\u53f3\u908a[6,9]\u4e0d\u5230 3 \u500b\u5c31\u4e0d\u5207 \u4e86\u3002\u7b2c\u4e09\u5c64\u90fd\u4e0d\u5230 3 \u500b\uff0c\u6240\u4ee5\u7d42\u6b62\u3002\u7e3d\u8a08\u5207\u5169\u500b\u4f4d\u7f6e 7+4=11\u3002 \u7bc4\u4f8b\u4e8c\u8aaa\u660e\uff1a</p> <p>\u7b2c\u4e00\u5c64\u5207\u5728 4(\u6ce8\u610f\u5207\u9ede\u4e0d\u53ef\u5728\u7aef\u9ede)\uff0c\u5207\u51fa[1,2,3]\u8207[100]\uff0c\u56e0\u70ba K=1\uff0c\u6240\u4ee5\u4e0d\u518d\u5207\u3002 \u63d0\u793a\uff1a\u8207 P_1_3 \u985e\u4f3c\uff0c\u53ea\u662f\u627e\u5207\u5272\u9ede\u7684\u5b9a\u7fa9\u4e0d\u540c\uff0c\u7d42\u7aef\u689d\u4ef6\u591a\u4e86\u4e00\u500b\u5207\u5272\u5c64\u7d1a\u3002</p> \u66b4\u529b\u89e3 TLE <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define nn \"\\n\"\n#define N 50000\nistream &amp; ss=cin;\n//stringstream ss(\"7 3 \\\n2 4 1 3 7 6 9\");\n\n\nlong long v[N];\nlong long n,k;\n\nlong long cut(long long x,long long y,long long z){\n\n    //cout&lt;&lt;v[x]&lt;&lt;\" \"&lt;&lt;v[y]&lt;&lt;\" \"&lt;&lt;z&lt;&lt;nn;\n    long long len=y-x;\n\n    if(y-x&lt;=1){\n        return 0;\n    }\n\n    if(len&lt;3){\n        return 0;\n    }\n    if(k==z){\n        return 0;\n    }\n\n    long long sum=100000000000;\n    long long sub_value=-1;\n\n    for(long long m=x+1;m&lt;=y-1;m++){\n        //cout&lt;&lt;\"m:\"&lt;&lt;m&lt;&lt;nn;\n        long long sub_sum=0;\n        for(long long i=x;i&lt;=y;i++){\n            sub_sum+=abs(v[i]*(i-m));\n        }\n        if(sub_sum&lt;sum){\n            //cout&lt;&lt;\"m:\"&lt;&lt;m&lt;&lt;\" sub_sum:\"&lt;&lt;sub_sum&lt;&lt;nn;\n            sum=sub_sum;\n            sub_value=m;\n            //cout&lt;&lt;\"M:\"&lt;&lt;m&lt;&lt;nn;\n        }\n    }\n\n    //cout&lt;&lt;nn&lt;&lt;sub_value&lt;&lt;nn;\n\n\n    return v[sub_value] + cut(x,sub_value-1,z+1) + cut(sub_value+1,y,z+1);\n}\n\n\nint main(){\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n\n\n\n    ss&gt;&gt;n&gt;&gt;k;\n\n    for(long long i=0;i&lt;n;i++){\n        ss&gt;&gt;v[i];\n    }\n\n    cout&lt;&lt;cut(0,n-1,0);\n\n}\n</code></pre>"},{"location":"%E9%81%9E%E8%BF%B4/#q-1-5-apcs201810","title":"\u7fd2\u984c Q-1-5. \u4e8c\u7dad\u9ed1\u767d\u5f71\u50cf\u7de8\u78bc (APCS201810)","text":"<p>ZJ\u7db2\u5740(\u984c\u76ee\u8f03\u8a73\u7d30)</p> <p>\u5047\u8a2d n \u662f 2 \u7684\u51aa\u6b21\uff0c\u4e5f\u5c31\u662f\u5b58\u5728\u67d0\u500b\u975e\u8ca0\u6574\u6578 k \u4f7f\u5f97 n = 2k \u3002\u5c07\u4e00\u500b n*n \u7684\u9ed1\u767d \u5f71\u50cf\u4ee5\u4e0b\u5217\u905e\u8ff4\u65b9\u5f0f\u7de8\u78bc\uff1a \u5982\u679c\u6bcf\u4e00\u683c\u50cf\u7d20\u90fd\u662f\u767d\u8272\uff0c\u6211\u5011\u7528 0 \u4f86\u8868\u793a\uff1b \u5982\u679c\u6bcf\u4e00\u683c\u50cf\u7d20\u90fd\u662f\u9ed1\u8272\uff0c\u6211\u5011\u7528 1 \u4f86\u8868\u793a\uff1b \u5426\u5247\uff0c\u4e26\u975e\u6bcf\u4e00\u683c\u50cf\u7d20\u90fd\u540c\u8272\uff0c\u5148\u5c07\u5f71\u50cf\u5747\u7b49\u5283\u5206\u70ba\u56db\u500b\u908a\u9577\u70ba n/2 \u7684\u5c0f\u6b63\u65b9\u5f62 \u5f8c\uff0c\u7136\u5f8c\u8868\u793a\u5982\u4e0b\uff1a\u5148\u5beb\u4e0b 2\uff0c\u4e4b\u5f8c\u4f9d\u7e8c\u63a5\u4e0a\u5de6\u4e0a\u3001\u53f3\u4e0a\u3001\u5de6\u4e0b\u3001\u53f3\u4e0b\u56db\u584a\u7684\u7de8\u78bc\u3002 \u8f38\u5165\u7de8\u78bc\u5b57\u4e32 S \u4ee5\u53ca\u5f71\u50cf\u5c3a\u5bf8 n\uff0c\u8acb\u8a08\u7b97\u539f\u59cb\u5f71\u50cf\u4e2d\u6709\u591a\u5c11\u500b\u50cf\u7d20\u662f 1\u3002 </p> <p>Time limit: 1 \u79d2</p> <p>\u8f38\u5165\u683c\u5f0f\uff1a\u7b2c\u4e00\u884c\u662f\u5f71\u50cf\u7684\u7de8\u78bc S\uff0c\u5b57\u4e32\u9577\u5ea6\u5c0f\u65bc 1,100,000\u3002\u7b2c\u4e8c\u884c\u70ba\u6b63\u6574\u6578 n\uff0c 1 &lt;= n &lt;= 1024\uff0c\u4e2d n \u5fc5\u70ba 2 \u7684\u51aa\u6b21\u3002 </p> <p>\u8f38\u51fa\u683c\u5f0f\uff1a\u8f38\u51fa\u6709\u591a\u5c11\u500b\u50cf\u7d20\u662f 1\u3002 </p> <p>\u7bc4\u4f8b\u8f38\u5165\uff1a  2020020100010  8 </p> <p>\u7bc4\u4f8b\u8f38\u51fa\uff1a  17</p> <p>\u9019\u984c\u60f3\u6cd5\u548c\u4f8b\u984c P-1-1. \u5408\u6210\u51fd\u6578(1)\u5dee\u4e0d\u591a\uff0c\u76f4\u63a5\u4e00\u500b\u5b57\u4e00\u500b\u5b57\u8655\u88e1\uff0c\u627e\u52302\u5c31\u5f80\u5f8c\u627e4\u500b\u6578\u5b57</p> \u7a0b\u5f0f\u78bc <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define N 11000000\n\nistream &amp; ss=cin;\n//stringstream ss(\"2020020100010 \\\n//8\");\n//stringstream ss(\"2200101020110 \\\n//4\");\n\nchar s[N];\nint n,ans;\nint i=-1;\n\nint a(int len){\n    i++;\n    if(s[i]=='2'){\n        return a(len/2) + a(len/2) + a(len/2) + a(len/2);\n    }\n    if(s[i]=='1'){\n        return len*len;\n    }\n    return 0;\n}\n\n\nint main(){\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n    ss&gt;&gt;s;\n    ss&gt;&gt;n;\n    cout&lt;&lt;a(n);\n}\n</code></pre>"},{"location":"%E9%81%9E%E8%BF%B4/#_2","title":"\u4ee5\u905e\u8ff4\u7aae\u8209\u66b4\u641c","text":""},{"location":"%E9%81%9E%E8%BF%B4/#p-2-11","title":"\u4f8b\u984c P-2-11. \u6700\u63a5\u8fd1\u7684\u5340\u9593\u548c (*)","text":"<p>\u5047\u8a2d\u9663\u5217 A[1..n]\u4e2d\u5b58\u653e\u8457\u67d0\u4e9b\u6574\u6578\uff0c\u53e6\u5916\u7d66\u4e86\u4e00\u500b\u6574\u6578 K\uff0c\u8acb\u8a08\u7b97\u54ea\u4e00\u500b\u9023\u7e8c\u5340 \u6bb5\u7684\u548c\u6700\u63a5\u8fd1 K \u800c\u4e0d\u8d85\u904e K\u3002 (\u9019\u500b\u554f\u984c\u6709\u66f4\u6709\u6548\u7387\u7684\u89e3\uff0c\u5728\u6b64\u6211\u5011\u5148\u8aaa\u660e\u7aae\u8209\u7684\u89e3\u6cd5\u3002)</p> <p>\u7bc4\u4f8b\u8f38\u5165 1 5 10 5 -5 8 -3 4</p> <p>\u7bc4\u4f8b\u8f38\u51fa 1 9</p> <p>\u7bc4\u4f8b\u8f38\u5165 2 1 1 -1</p> <p>\u7bc4\u4f8b\u8f38\u51fa 2 0</p> \u66b4\u529b\u89e3 \u300cNA (score:12%)\u300d <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define nn \"\\n\"\n#define N 100001\nint v[N];\nint main(){\n    int n,m,ans=0;\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=0;i&lt;n;i++){\n        cin&gt;&gt;v[i];\n    }\n    for(int i=0;i&lt;n;i++){\n        for(int j=0;j&lt;n;j++){\n            int sum=0;\n            for(int k=i;k&lt;=j;k++){\n                sum+=v[k];\n            }\n            if(sum&gt;ans &amp;&amp; sum&lt;=m){\n                ans=sum;\n            }\n        }\n    }\n    cout&lt;&lt;ans;\n}\n</code></pre> \u66b4\u529b\u89e3 + \u524d\u7db4 \u300cNA (score:37%)\u300d <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define nn \"\\n\"\n#define N 100001\nint v[N];\nint main(){\n    int n,m,ans=0;\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=0;i&lt;n;i++){\n        cin&gt;&gt;v[i];\n    }\n\n    //\u524d\u7db4\u548c-------------------------------\n    for(int i=1;i&lt;n;i++){\n        v[i]=v[i-1]+v[i];\n    }\n    //\u524d\u7db4\u548c-------------------------------\n\n    for(int i=0;i&lt;n-1;i++){\n        for(int j=i+1;j&lt;n;j++){\n            int sum=v[j]-v[i];\n            if(sum&gt;ans &amp;&amp; sum&lt;=m){\n                ans=sum;\n            }\n        }\n    }\n    cout&lt;&lt;ans;\n}\n</code></pre> \u524d\u7db4\u548c\u3001\u4e8c\u5206\u641c AC <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define nn \"\\n\"\n#define N 100011\n#define int  long long\n//---------------------------\n\n\n\n//---------------------------main\n#undef int\nint main(){\n#define int long long\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n//---------------------------main\n\n    //istringstream cin(\"5 10 \\\n5 -5 8 -3 4\");\n\n    set&lt;int&gt;s{0};\n    int n,k,ans=-LONG_LONG_MIN;\n    cin&gt;&gt;n&gt;&gt;k;\n    int p=0;\n    for(int i=0;i&lt;n;i++){\n        int x;\n        cin&gt;&gt;x;\n        p+=x;\n        auto it=s.lower_bound(p-k);\n        if(it!=s.end()){\n            ans=max(ans,p-*it);\n        }\n        s.insert(p);\n    }\n    cout&lt;&lt;ans;\n}\n</code></pre>"},{"location":"%E9%81%9E%E8%BF%B4/#p-1-7-","title":"\u4f8b\u984c P-1-7. \u5b50\u96c6\u5408\u4e58\u7a4d -","text":"<p>\u8f38\u5165 n \u500b\u6b63\u6574\u6578\uff0c\u8acb\u8a08\u7b97\u5176\u4e2d\u6709\u591a\u5c11\u7d44\u5408\u7684\u76f8\u4e58\u7a4d\u9664\u4ee5 P \u7684\u9918\u6578\u70ba 1\uff0c\u6bcf\u500b\u6578\u5b57\u53ef\u4ee5 \u9078\u53d6\u6216\u4e0d\u9078\u53d6\u4f46\u4e0d\u53ef\u91cd\u8907\u9078\uff0c\u8f38\u5165\u7684\u6578\u5b57\u53ef\u80fd\u91cd\u8907\u3002P=10009\uff0c0</p> <p>\u7bc4\u4f8b\u8f38\u5165 #1 3 1 1 2</p> <p>\u7bc4\u4f8b\u8f38\u51fa #1 3</p> \u4f4d\u5143\u7aae\u8209 \u300cNA (score:80%)(TLE)\u300d <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define nn \"\\n\"\n#define N 100001\n#define P 10009\n\nint v[N];\n\nint main(){\n    int n,ans=0;\n    cin&gt;&gt;n;\n\n    for(int i=0;i&lt;n;i++){\n        cin&gt;&gt;v[i];\n    }\n\n    for(int i=1;i&lt;(1&lt;&lt;n);i++){\n        int pow=1;\n        for(int j=0;j&lt;n;j++){\n            if(i &amp; 1&lt;&lt;j){\n                pow*=v[j];\n                pow%=P;\n            }\n        }\n        if(pow==1){\n            ans++;\n        }\n    }\n    cout&lt;&lt;ans;\n}\n</code></pre> <p>\u5beb\u905e\u8ff4\u7684\u8a71\u5c31\u662f\u76f4\u63a5\u60f3\u50cf\u6a39\u72c0\u5716\uff0c\u6bcf\u4e00\u500b\u6578\u5b57\u6709\u5169\u500b\u9078\u64c7\uff1a\u9078\u3001\u4e0d\u9078 \u6240\u4ee5\u662f\uff1a </p> <p>\u524d\u4e00\u500b\u6578\u5b57 | |------------\u9078\u4e0b\u4e00\u500b\u6578\u5b57(\u52a0\u5165\u8a08\u7b97) | | |------------\u4e0d\u9078\u4e0b\u4e00\u500b\u6578\u5b57(\u4e0d\u52a0\u5165\u8a08\u7b97)</p> \u905e\u8ff4 \u300cAC (1/10  s, 304KB)\u300d <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define nn \"\\n\"\n#define N 100001\n#define P 10009\n\nint v[N],ans=0;\nint n;\n\n\nint a(int i,int p){\n    if(i&gt;=n){//\u8dd1\u5b8c\u5168\u90e8\n        if(p==1){\n            ans++;\n        }\n        return 0;\n    }\n    a(i+1,(v[i]*p)%P);\n    a(i+1,p);\n    return 0;\n}\n\n\nint main(){\n    cin&gt;&gt;n;\n    for(int i=0;i&lt;n;i++){\n        cin&gt;&gt;v[i];\n    }\n    a(0,1);\n    cout&lt;&lt;ans-1;//\u6e1b\u53bb\u7a7a\u5b57\u4e32\n}\n</code></pre>"},{"location":"%E9%81%9E%E8%BF%B4/#q-1-8-apcs201810-subtask","title":"\u7fd2\u984c Q-1-8. \u5b50\u96c6\u5408\u7684\u548c (APCS201810, subtask)","text":"<p>\u8f38\u5165 n \u500b\u6b63\u6574\u6578\uff0c\u8acb\u8a08\u7b97\u5404\u7a2e\u7d44\u5408\u4e2d\uff0c\u5176\u548c\u6700\u63a5\u8fd1 P \u4f46\u4e0d\u8d85\u904e P \u7684\u548c\u662f\u591a\u5c11\u3002\u6bcf\u500b\u5143 \u7d20\u53ef\u4ee5\u9078\u53d6\u6216\u4e0d\u9078\u53d6\u4f46\u4e0d\u53ef\u91cd\u8907\u9078\uff0c\u8f38\u5165\u7684\u6578\u5b57\u53ef\u80fd\u91cd\u8907\u3002P&lt;=1000000009\uff0c0 &lt; n &lt; 26\u3002 </p> <p>Time limit: 1 \u79d2 </p> <p>\u8f38\u5165\u683c\u5f0f\uff1a\u7b2c\u4e00\u884c\u662f n \u8207 P\uff0c\u7b2c\u4e8c\u884c\u662f n \u500b\u53ef\u6311\u9078\u7684\u6b63\u6574\u6578\uff0c\u5927\u5c0f\u4e0d\u6703\u8d85\u904e P\uff0c\u540c\u884c \u6578\u5b57\u4ee5\u7a7a\u767d\u9593\u9694\u3002 </p> <p>\u8f38\u51fa\u683c\u5f0f\uff1a\u6700\u63a5\u8fd1 P \u4f46\u4e0d\u8d85\u904e P \u7684\u548c\u3002 </p> <p>\u7bc4\u4f8b\u8f38\u5165\uff1a  5 17  5 5 8 3 10</p> <p>\u7bc4\u4f8b\u8f38\u51fa\uff1a  16</p> dp(MLE (64MB)) <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define nn \"\\n\"\n//#define int long long\n\n\n//#undef int\nint main(){\n//#define int long long\n\n\n    //istringstream cin(\"5 17 \\\n5 5 8 3 10\");\n    int n,k,ans=0;\n    cin&gt;&gt;n&gt;&gt;k;\n\n\n    int v[30];\n    for(int i=0;i&lt;n;i++){\n        cin&gt;&gt;v[i];\n    }\n\n    //int dp[100000100]={0};//\u7e3d\u5927\u5c0f\u70bai\u7684\u65b9\u6cd5\u6578\n\n    unordered_map&lt;int,int&gt;mp;\n\n    for(int i=0;i&lt;n;i++){//\u5546\u54c1\u6578v[i]\u70ba\u5546\u54c1\u50f9\u9322\n        for(int j=k;j&gt;=0;j--){//17~0\n            if(j-v[i]&gt;=0){\n                mp[j]=max(mp[j],mp[j-v[i]]+v[i]);\n            }\n        }\n    }\n    cout&lt;&lt;mp[k];\n}\n</code></pre> bit\u89e3 O(2^n*m) WA(60%) <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\n#define N 100\n\nint v[N];\n\nint main(){\n    int n,m,ans=0;\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=0;i&lt;n;i++){\n        cin&gt;&gt;v[i];\n    }\n\n\n\n    for(int i=0;i&lt;(1&lt;&lt;n);i++){\n        int sum=0;\n        for(int j=0;j&lt;n;j++){\n            if(i &amp; (1&lt;&lt;j)){\n                sum+=v[j];\n            }\n            if(sum&gt;ans &amp;&amp; sum&lt;=m){\n                ans=sum;\n            }\n        }\n    }\n\n    cout&lt;&lt;ans;\n}\n</code></pre> \u905e\u8ff4\u89e3 O(2^n) AC <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\n#define N 100\n\nint v[N];\n\nint n,m,ans=0;\n\nint a(int i,int sum){\n    if(i&gt;=n){\n        if(sum&gt;ans &amp;&amp; sum&lt;m){\n            ans=sum;\n        }\n        return 0;\n    }\n    a(i+1,sum+v[i]);\n    a(i+1,sum);\n\n    return 0;\n}\n\n\n\nint main(){\n\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=0;i&lt;n;i++){\n        cin&gt;&gt;v[i];\n    }\n    a(0,0);\n    cout&lt;&lt;ans;\n}\n</code></pre>"},{"location":"%E9%81%9E%E8%BF%B4/#n","title":"n\u7687\u540e\u554f\u984c","text":"\u905e\u8ff4 <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\n\nint col, uldr, dlur; // \u5c07 int \u7528\u4e8c\u9032\u4f4d\u7684\u89d2\u5ea6\u53bb\u7dad\u8b77\u76f4\u7dda\u3001\u659c\u7dda\u4e0a\u6709\u6c92\u6709\u7687\u540e\nint queen(int r, int n)\n{\n    if(r == 0) return 1;\n    int sum = 0;\n    for(int c = 1; c &lt;= n; c++)\n    {\n        if((col&gt;&gt;c)&amp;1 || (uldr&gt;&gt;(r+c))&amp;1 || (dlur&gt;&gt;(r-c+n))&amp;1) continue;\n        col |= (1&lt;&lt;c), uldr |= (1&lt;&lt;(r+c)), dlur |= (1&lt;&lt;(r-c+n));\n        sum += queen(r-1, n);\n        col &amp;= ~(1&lt;&lt;c), uldr &amp;= ~(1&lt;&lt;(r+c)), dlur &amp;= ~(1&lt;&lt;(r-c+n));\n    }\n    return sum;\n}\n\nint main(){\n\n\n    stringstream cin(\"5\");\n\n\n\n    int n; cin &gt;&gt; n;\n    col = uldr = dlur = 0;\n    cout &lt;&lt; queen(n, n) &lt;&lt; endl;\n}\n</code></pre>"},{"location":"%E9%8F%88%E7%B5%90%E7%B5%90%E6%A7%8B/","title":"\u93c8\u7d50\u7d50\u69cb","text":"<p>\u522a\u9664\u901f\u5ea6\u5feb\uff0c\u8fed\u4ee3\u901f\u5ea6\u6162</p>"},{"location":"%E9%8F%88%E7%B5%90%E7%B5%90%E6%A7%8B/#_2","title":"\u5167\u5efa","text":"<p>\u5ba3\u544a\uff1a</p> <pre><code>list&lt;int&gt; v;\n</code></pre> <p>\u8907\u88fd\uff1a</p> <pre><code>int v[9]={1,2,3,4,5,6,7,8,9};   \nlist&lt;int&gt; a(v,v+9);\n</code></pre> <p>\u63d2\u5165\u8a9e\u6cd5\uff1a</p> <ol> <li>\u4e32\u5217\u540d\u7a31.insert(\u8fed\u4ee3\u5668 , \u503c) \u6703\u5728\u8fed\u4ee3\u5668\u6240\u6307\u7684\u4f4d\u5740\u4e0a\uff0c\u52a0\u5165\u6b64\u503c\u5143\u7d20\uff0c\u4e26\u56de\u50b3\u6b64\u65b0\u5143\u7d20\u4f4d\u5740\u7684\u8fed\u4ee3\u5668\u3002</li> <li>\u4e32\u5217\u540d\u7a31.insert(\u8fed\u4ee3\u5668 , \u975e\u8ca0\u6574\u6578N , \u503c) \u6703\u5728\u8fed\u4ee3\u5668\u6240\u6307\u7684\u4f4d\u5740\u4e0a\uff0c\u52a0\u5165N\u500b\u6b64\u503c\u5143\u7d20\u3002(\u5728\u540c\u500b\u4f4d\u7f6e\u653e\u5165\u591a\u500b\u91cd\u8907\u7684)</li> <li>\u4e32\u5217\u540d\u7a31.insert(\u8fed\u4ee3\u56681 , \u8fed\u4ee3\u56682, \u8fed\u4ee3\u56683) \u6703\u5c07\u8a72\u4e32\u5217\u5f9e\u8fed\u4ee3\u56682\u5230\u8fed\u4ee3\u56683\u4e4b\u9593\u7684\u5143\u7d20\u8907\u88fd\u4e26\u4e14\u63d2\u5165\u8fed\u4ee3\u56681\u7684\u4f4d\u5740\u3002</li> </ol> <p>\u522a\u9664\u8a9e\u6cd5\uff1a 1. \u4e32\u5217\u540d\u7a31.remove(\u8cc7\u6599\u503c) \u6703\u628a\u4e32\u5217\u4e2d\u7b26\u5408\u6b64\u503c\u7684\u8cc7\u6599\u90fd\u79fb\u9664\u6389\u3002 2. \u4e32\u5217\u540d\u7a31.remove_if(\u51fd\u6578) \u6703\u628a\u4e32\u5217\u4e2d\u7684\u503c\u4ee3\u5165\u6b64\u51fd\u6578\uff0c\u7b26\u5408\u6b64\u51fd\u6578\u7684\u8cc7\u6599\u90fd\u79fb\u9664\u6389 3. \u4e32\u5217\u540d\u7a31.erase(\u8fed\u4ee3\u5668) \u6703\u628a\u8fed\u4ee3\u5668\u6240\u6307\u7684\u5143\u7d20\u7d66\u522a\u9664\uff0c\u4e26\u56de\u50b3\u88ab\u79fb\u9664\u5143\u7d20\u5f8c\u4e00\u500b\u7bc0\u9ede\u4f4d\u5740\u7684\u8fed\u4ee3\u5668\u3002</p> <p>\u7d22\u5f15\u8a9e\u6cd5\uff1a 1. \u4e32\u5217\u540d\u7a31.begin(); \u56de\u50b3\u958b\u982d 2. \u4e32\u5217\u540d\u7a31.rbegin(); \u56de\u50b3\u6700\u5f8c\u4e00\u500b\u8cc7\u6599</p> <p>\u64cd\u4f5c\u8a9e\u6cd5\uff1a 1. \u4e32\u5217\u540d\u7a31.sort(); \u6392\u5e8f\uff0c\u53ef\u653ecmp\uff0c\u4e0d\u53ef\u9078\u64c7\u5340\u9593</p>"},{"location":"%E9%8F%88%E7%B5%90%E7%B5%90%E6%A7%8B/#_3","title":"\u81ea\u88fd","text":"<p>\u88fd\u4f5c\u4e00\u500bstruct\u9663\u5217</p> <pre><code>struct st{\n    int V=0,L=-1,R=-1;\n};\n</code></pre> <p>V\u70ba\u6578\u503c\uff0cL\u70ba\u524d\u4e00\u500b\u4eba\u7684index\uff0cR\u70ba\u5f8c\u4e00\u500b\u4eba\u7684index</p> <p>\u7a0b\u5f0f\u78bc <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\nint n;\n\nstruct st{\n    int V=0,L=-1,R=-1;\n};\nst v[10];\nint out(){  //\u8f38\u51fa\n    int w=0;\n    while(1){\n        cout&lt;&lt;v[w].V&lt;&lt;\" \";\n        w=v[w].R;\n        if(w==n)break;\n    }cout&lt;&lt;endl;\n}\nint de(int i){ //\u522a\u9664\n    int Lindex=v[i].L;\n    int Rindex=v[i].R;\n    v[Lindex].R=Rindex;\n    v[Rindex].L=Lindex;\n    v[i].L=-1;\n    v[i].R=-1;\n}\nint main(){\n    istringstream cin(\"5    1 4 9 16\");\n    cin&gt;&gt;n;\n    v[0].R=1;\n    for(int i=1;i&lt;n;i++){\n        cin&gt;&gt;v[i].V;\n        v[i].L=i-1;\n        v[i].R=i+1;\n    }\n    out();\n    de(2);\n    de(3);\n    out();\n}\n</code></pre> \u8f38\u51fa\uff1a <pre><code>0 1 4 9 16 \n0 1 16 \n</code></pre></p>"},{"location":"%E9%8F%88%E7%B5%90%E7%B5%90%E6%A7%8B/#_4","title":"\u7bc4\u4f8b\uff1a","text":"<p>https://hackmd.io/@peicpp/SkGJC1-mC#%E5%85%88%E5%8A%A0%E5%BE%8C%E4%B9%98%E8%88%87%E5%87%BD%E6%95%B8</p>"},{"location":"%E9%8F%88%E7%B5%90%E7%B5%90%E6%A7%8B/#_5","title":"\u81ea\u88fd\u93c8\u7d50\uff0c\u5982\u679c\u53ea\u9700\u8981\u522a\u9664\u4e0d\u9700\u8981\u63d2\u5165","text":"<p>\u67e5\u627e O(1)  \u522a\u9664 O(1)  \u63d2\u5165 O(1) \u53ea\u80fd\u5728\u6700\u5f8c</p> <p>code\uff1a <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define nn \"\\n\"\n\n// \u5ba3\u544a\u7d50\u69cb\nstruct li{\n    int L;\n    int R;\n    int value;\n};\n\n\n//\u5ba3\u544a\u578b\u614b\nvector &lt;li&gt; lis;\nmap&lt;int,int&gt;index;\nint n;\n\n\n//\u8f38\u51fa\u5168\u90e8\nvoid output_all(){\n    int it=0;\n    while(it!=-1){\n        cout&lt;&lt;lis[it].value&lt;&lt;\" \";\n        it=lis[it].R;\n    }\n    cout&lt;&lt;nn;\n    return;\n}\n\n//\u522a\u9664\u67d0\u6578\u5230\u67d0\u6578\nvoid del(int x,int y){\n    //L=x.l  R=x.r\n    int LL=lis[index[x]].L;\n    int RR=lis[index[y]].R;\n    lis[LL].R=RR;\n    lis[RR].L=LL;\n}\n\n\n//\u63d2\u5165\u5728\u67d0\u6578\u524d\u9762(\u67d0\u6578,\u5728\u67d0\u6578\u4e4b\u524d)\n//void inse(int m,int x){\n//    n+=1;\n//    index[m]=lis.size();\n//    lis[index[x]].L=lis.size();\n//\n//}\n\n\n//\u4e3b\u7a0b\u5f0f\nint main(){\n\n    istringstream cin(\"10  \\\n10 20 50 60 80 90 100 120 150 190\");\n\n    cin&gt;&gt;n;\n    for(int i=0;i&lt;n;i++){\n        int x;\n        cin&gt;&gt;x;\n        index[x]=i;//map\u5c0d\u61c9\u503c\n        lis.push_back({i-1,i+1,x});//list \u7684\u5de6\u53f3\u3001index\n    }\n    lis[n-1].R=-1;\n\n\n    //\u8f38\u51fa\u5168\u90e8\n    output_all();\n\n    //\u522a\u966420~120\n    del(20,120);\n\n    //\u8f38\u51fa\u5168\u90e8\n    output_all();\n\n}\n</code></pre> output <pre><code>10 20 50 60 80 90 100 120 150 190\n10 150 190\n</code></pre></p>"},{"location":"%E9%9B%A2%E6%95%A3%E5%8C%96/","title":"\u96e2\u6563\u5316","text":""},{"location":"%E9%9B%A2%E6%95%A3%E5%8C%96/#_1","title":"\u96e2\u6563\u5316","text":"<p>\u5982\u679c\u8cc7\u6599\u8981\u5b58\u5165\u9663\u5217\uff0c\u8cc7\u6599\u6578\u5b57\u7bc4\u570d\u6975\u5927\uff0c\u4f46\u4e26\u975e\u9023\u7e8c\u3002 \u4e5f\u5c31\u662f\u8aaa </p>"},{"location":"%E9%9B%A2%E6%95%A3%E5%8C%96/#p-2-2-sort","title":"P-2-2. \u96e2\u6563\u5316 \u2013 sort","text":"<p>\u984c\u76ee\uff1ahttps://zerojudge.cchs.chc.edu.tw/ShowProblem?problemid=a140</p> <pre><code>//IONC\u505a\u6cd5\n#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nvoid dis_bs(vector&lt;int&gt;&amp; arr) {\n    vector&lt;int&gt; tmp = arr;\n\n    // \u5c0dtmp\u4e2d\u7684\u5143\u7d20\u9032\u884c\u6392\u5e8f\n    sort(tmp.begin(), tmp.end());\n\n    // \u53bb\u9664tmp\u4e2d\u7684\u91cd\u8907\u5143\u7d20\n    tmp.resize(unique(tmp.begin(), tmp.end()) - tmp.begin());\n\n    // \u5c0darr\u4e2d\u7684\u6bcf\u500b\u5143\u7d20\u9032\u884c\u64cd\u4f5c\n    for(int i = 0; i &lt; arr.size(); i++)\n        // \u4f7f\u7528lower_bound\u627e\u5230arr[i]\u5728tmp\u4e2d\u7684\u4f4d\u7f6e\uff0c\u4e26\u5c07\u5176\u8f49\u63db\u70ba\u96e2\u6563\u5316\u5f8c\u7684\u503c\n        arr[i] = lower_bound(tmp.begin(), tmp.end(), arr[i]) - tmp.begin() ;\n}\n\nint main() {\n\n    int n;\n    cin&gt;&gt;n;\n    vector&lt;int&gt; arr(n);\n    for(int &amp;i:arr){\n        cin&gt;&gt;i;\n    }\n    dis_bs(arr);\n\n    // \u8f38\u51fa\u96e2\u6563\u5316\u5f8c\u7684\u7d50\u679c\n    for(int i = 0; i &lt; arr.size(); i++) {\n        cout &lt;&lt; arr[i] &lt;&lt; \" \";\n    }\n    cout &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre> <p>\u5047\u8a2d\u6709 N \u500b\u6574\u6578\u8981\u88ab\u8b80\u5230\u4e00\u500b\u9663\u5217\u4e2d\uff0c\u6211\u5011\u60f3\u8981\u5c07\u9019\u4e9b\u6574\u6578\u7f6e\u63db\u6210\u5f9e 0 \u958b\u59cb\u4f9d\u5e8f\u6392\u5217\u7684\u6574\u6578\u4e26\u4e14\u7dad\u6301\u5b83\u5011\u539f\u4f86\u7684\u5927\u5c0f\u95dc\u4fc2\uff0c\u4f8b\u5982\u8f38\u5165\u7684\u6574\u6578\u5e8f\u5217\u662f (5, 3, 9, 3, 15, 9, 8, 9)\uff0c\u9019\u4e9b\u6578\u5982\u5f9e\u5c0f\u5230\u5927\u6392\u662f ( 3, 3, 5, 8, 9, 9, 9, 15)\uff0c\u53bb \u9664\u91cd\u8907\u8005\u5f8c\u70ba(3, 5, 8, 9, 15)\uff0c\u6240\u4ee5\u6211\u5011\u8981\u66ff\u63db\u7684\u662f\uff1a  3 \u2192 0  5 \u2192 1 8 \u2192 2  9 \u2192 3  15 \u2192 4</p> <p>\u6240\u4ee5\u539f\u5148\u7684\u5e8f\u5217\u5c31\u6703\u8b8a\u6210(1, 0, 3, 0, 4, 3, 2, 3)\u3002  Time limit: 1 \u79d2  \u8f38\u5165\u683c\u5f0f\uff1a\u8f38\u5165\u5169\u884c\uff0c\u7b2c\u4e00\u884c\u662f\u6b63\u6574\u6578 N\uff0cN \u4e0d\u8d85\u904e 10 \u842c\uff0c\u7b2c\u4e8c\u884c\u662f N \u500b\u6574\u6578\uff0c\u5927 \u5c0f\u4e0d\u8d85\u904e 109\uff0c\u4ee5\u7a7a\u767d\u9593\u9694\u3002  \u8f38\u51fa\uff1a\u8f38\u51fa\u7f6e\u63db\u5f8c\u7684\u5e8f\u5217\uff0c\u5169\u6578\u4e4b\u9593\u4ee5\u4e00\u500b\u7a7a\u767d\u9593\u9694\u3002 </p> <p>\u7bc4\u4f8b\u8f38\u5165\uff1a 7 0 3 9 3 3 -1 0  \u7bc4\u4f8b\u8f38\u51fa\uff1a 1 2 3 2 2 0 1</p>"},{"location":"%E9%9B%A2%E6%95%A3%E5%8C%96/#1","title":"1.\u7d14\u9663\u5217\u6cd5","text":"<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define pii pair&lt;int,int&gt;\n#define all(x) x.begin(),x.end()\n#define nn \"\\n\"\n\nbool cmp(pii a, pii b){\n    return a.first&lt;b.first;\n}\n\nint main(){\n    //istringstream cin(\"7 \\\n0 3 9 3 3 -1 0\");\n\n    vector&lt;pii&gt;v;\n\n    int n;\n    cin&gt;&gt;n;\n    v.resize(n);//0~6\n    for(int i=0;i&lt;n;i++){\n        cin&gt;&gt;v[i].first;\n        v[i].second=i;\n    }\n\n    // for(pii i:v){\n    //     cout&lt;&lt;i.first&lt;&lt;\" \";\n    // }cout&lt;&lt;nn;\n\n    sort(all(v),cmp);\n\n\n    // for(pii i:v){\n    //     cout&lt;&lt;i.first&lt;&lt;\" \";\n    // }cout&lt;&lt;nn;\n\n    vector&lt;int&gt;ans(n);\n\n    int it=-1;\n    int pr=INT_MAX;\n    for(int i=0;i&lt;n;i++){\n        if(v[i].first!=pr){\n            pr=v[i].first;\n            it++;\n        }\n        ans[v[i].second]=it;\n    }\n    for(int i:ans){\n        cout&lt;&lt;i&lt;&lt;\" \";\n    }\n}\n</code></pre>"},{"location":"%E9%9B%A2%E6%95%A3%E5%8C%96/#2map","title":"2.\u904b\u7528map","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define N 100001\n\nint main(){\n    int n;\n    cin&gt;&gt;n;\n    int v[N];\n    map&lt;int,int&gt;mp;\n\n    //\u5b58v\u3001\u5728mp\u4e2d\u653e\u7f6e\n    for(int i=0;i&lt;n;i++){\n        cin&gt;&gt;v[i];\n        mp[v[i]];\n    }\n\n    //\u70bamp\u7684\u6bcf\u500bsecond\u91cd\u65b0\u7de8\u865f\n    int w=0;\n    for(auto &amp;it:mp){\n        it.second=w;\n        w++;\n    }\n\n    //\u4f9d\u7167\u6bcf\u500bv[i]\u8f38\u51fa\n    for(int i=0;i&lt;n;i++){\n        cout&lt;&lt;mp[v[i]]&lt;&lt;\" \";\n    }\n}\n</code></pre> <p>\u770b\u5b8c\u5169\u7a2e\u89e3\u6cd5 \u8ab0\u6bd4\u8f03\u5feb\u5462\uff1f</p> <p>\u7d14\u9663\u5217\u6cd5\u8f03\u5feb\uff0c\u56e0\u70ba\u6392\u5e8f\u901f\u5ea6\u4e00\u6a23\uff0c\u800c\u904d\u6b77\u9663\u5217\u6bd4set\u4f86\u7684\u5feb</p>"},{"location":"%E5%85%83%E7%B4%A0/%E8%B2%BB%E9%A6%AC%E5%B0%8F%E5%AE%9A%E7%90%86/","title":"\u55ae\u4f4d\u5143\u7d20","text":"<p>\u5728\u6578\u5b78\u4e2d\uff0c\u55ae\u4f4d\u5143\u7d20\u662f\u4e00\u500b\u5728\u67d0\u7a2e\u904b\u7b97\u4e0b\u4fdd\u6301\u5176\u4ed6\u5143\u7d20\u4e0d\u8b8a\u7684\u5143\u7d20\u3002\u9019\u610f\u5473\u8457\u5982\u679c\u4f60\u6709\u4e00\u500b\u96c6\u5408\u548c\u4e00\u500b\u4e8c\u5143\u904b\u7b97\uff08\u6bd4\u5982\u52a0\u6cd5\u6216\u4e58\u6cd5\uff09\uff0c\u55ae\u4f4d\u5143\u7d20\u5728\u9019\u500b\u904b\u7b97\u4e0b\u8207\u4efb\u4f55\u96c6\u5408\u5167\u7684\u5143\u7d20\u7d50\u5408\u90fd\u4e0d\u6703\u6539\u8b8a\u90a3\u500b\u5143\u7d20\u3002\u8209\u4f8b\u4f86\u8aaa\uff1a</p> <ol> <li>\u5728\u52a0\u3001\u6e1b\u6cd5\u4e2d\uff0c$0$ \u662f\u52a0\u6cd5\u7684\u55ae\u4f4d\u5143\u7d20\uff0c\u56e0\u70ba\u4efb\u4f55\u6578\u5b57\u52a0 $0$ \u90fd\u4fdd\u6301\u4e0d\u8b8a\uff08\u5982 $a + 0 = a$\uff09\u3002</li> <li>\u5728\u4e58\u3001\u9664\u6cd5\u4e2d\uff0c$1$ \u662f\u4e58\u6cd5\u7684\u55ae\u4f4d\u5143\u7d20\uff0c\u56e0\u70ba\u4efb\u4f55\u6578\u5b57\u4e58\u4ee5 $1$ \u90fd\u4fdd\u6301\u4e0d\u8b8a\uff08\u5982 $a \\times 1 = a$\uff09\u3002</li> </ol> <p>\u6b64\u5916\uff0c\u9019\u500b\u6982\u5ff5\u4e5f\u53ef\u4ee5\u64f4\u5c55\u5230\u5176\u4ed6\u6578\u5b78\u7d50\u69cb\u4e2d\uff0c\u4f8b\u5982\u5728\u77e9\u9663\u904b\u7b97\u4e2d\uff0c\u55ae\u4f4d\u77e9\u9663\uff08\u5c0d\u89d2\u7dda\u4e0a\u90fd\u662f $1$\uff0c\u5176\u4ed6\u5730\u65b9\u90fd\u662f $0$ \u7684\u77e9\u9663\uff09\u662f\u4e58\u6cd5\u7684\u55ae\u4f4d\u5143\u7d20\u3002</p>"},{"location":"%E5%85%83%E7%B4%A0/%E8%B2%BB%E9%A6%AC%E5%B0%8F%E5%AE%9A%E7%90%86/#_2","title":"\u53cd\u5143\u7d20","text":"<p>\u4efb\u610f\u6578\u8207\u53cd\u5143\u7d20\u9032\u884c\u904b\u7b97\u5f8c\u6703\u5f97\u5230\u55ae\u4f4d\u5143\u7d20</p> <p>\u95dc\u4fc2\uff1a  \u300c\u4efb\u610f\u6578\u300d(\u7b26\u865f)\u300c\u53cd\u5143\u7d20\u300d=\u300c\u55ae\u4f4d\u5143\u7d20\u300d</p> <ol> <li>\u52a0\u6e1b\u6cd5\u7684\u53cd\u5143\u7d20\u70ba\u300c\u76f8\u53cd\u6578\u300d\uff0c\u5982 $a+(-a)=0$ \u3002</li> <li>\u4e58\u9664\u6cd5\u7684\u53cd\u5143\u7d20\u70ba\u300c\u5012\u6578\u300d\uff0c\u5982 $a\\times\\frac{1}{a}=1$ \u3001 $a\\div \\frac{1}{a}=1$ \u3002</li> <li>\u6a21\u904b\u7b97\u53cd\u5143\u7d20\u65bc\u4e0b\u8b1b\u89e3</li> </ol>"},{"location":"%E5%85%83%E7%B4%A0/%E8%B2%BB%E9%A6%AC%E5%B0%8F%E5%AE%9A%E7%90%86/#_3","title":"\u6a21\u53cd\u5143\u7d20","text":"<p>\u5728\u6578\u5b78\u4e2d\uff0c\u300c\u6a21\u53cd\u5143\u7d20\u300d\u662f\u6307\u5728\u6a21\u7b97\u8853\uff08Modular arithmetic\uff09\u4e2d\u4e00\u500b\u6578\u7684\u9006\u5143\u3002\u7d66\u5b9a\u4e00\u500b\u6b63\u6574\u6578 $P$ \u548c\u4e00\u500b\u8207 $P$ \u4e92\u8cea\u7684\u6574\u6578 $a$\uff0c$a$ \u7684\u6a21 $P$ \u9006\u5143\u662f\u6307\u4e00\u500b\u6574\u6578 $b$\uff0c\u4f7f\u5f97 $a \\times b \\equiv 1 \\pmod{P}$\uff0c\u6b64\u6642 $b$ \u4e5f\u53ef\u8a18\u4f5c $a^{-1}$\u3002\u63db\u53e5\u8a71\u8aaa\uff0c\u7576 $a$ \u548c $b$ \u76f8\u4e58\u5f8c\u9664\u4ee5 $P$ \u7684\u9918\u6578\u70ba 1\uff0c\u4e5f\u5c31\u662f$(a\\times b) \\% P=1$\u3002</p> <p>\u70ba\u4f55\u662f\u4e58\u6cd5\u4e0d\u662f\u52a0\u6e1b\u6cd5\u5462? \u56e0\u70ba\u5728\u505a\u6a21\u904b\u7b97\u7684\u6642\u5019 \u52a0\u6cd5\u00a0\u6e1b\u6cd5\u00a0\u4e58\u6cd5\u90fd\u80fd\u6b63\u5e38\u904b\u4f5c </p> <p>$(8 + 7) \\% 5 = \\left[(8 \\% 5) + (7 \\% 5)\\right] \\% 5$</p> <p>$(8 - 7) \\% 5 = \\left[(8 \\% 5) - (7 \\% 5)\\right] \\% 5$</p> <p>$(8 \\times 7) \\% 5 = \\left[(8 \\% 5) \\times (7 \\% 5)\\right] \\% 5$</p> <p>\u63db\u6210\u9664\u6cd5\u6642\uff0c\u5c31\u7121\u6cd5\u6b63\u5e38\u6210\u7acb\uff0c\u300c\u6a21\u53cd\u5143\u7d20\u300d\u5c31\u662f\u70ba\u6b64\u5b58\u5728\u7684</p> <p>\u554f\u984c\uff1a\u6211\u5011\u8981\u8a08\u7b97$(56/7)\\%5$\u6642\u8a72\u600e\u9ebc\u505a?</p> <p>\u4e00\u3001\u6211\u5011\u77e5\u9053\u8981\u8a08\u7b97 $a/b=c$ \u6642\u5982\u679c\u60f3\u63db\u6210\u4e58\u6cd5\uff0c\u5c31\u662f\u8b93 $a$ \u4e58\u4e0a $b$ \u7684\u4e58\u6cd5\u53cd\u5143\u7d20 $k$ ($b\\times k=1$)\uff0c\u4e5f\u5c31\u662f $\\frac{1}{b}$ \uff1a $a/b=a\\times k =a\\times\\frac{1}{b}=c$\uff0c$b\\times k=1$</p> <p>\u4e8c\u3001\u90a3\u9ebc\u6211\u5011\u77e5\u9053\u8981\u8a08\u7b97 $(a/b)\\%P=c$ \u6642\u5982\u679c\u60f3\u63db\u6210\u4e58\u6cd5\uff0c\u5c31\u662f\u8b93 $a$ \u4e58\u4e0a $b$ \u6a21 $P$ \u7684\u6a21\u53cd\u5143\u7d20 $k$ ($(b\\times k)\\%P=1$)\uff1a $(a/b)\\%P=(a\\times k)\\%P =c$\uff0c$(b\\times k)\\%P=1$</p> <p>\u4e09\u3001\u56de\u5230\u554f\u984c\uff0c\u6240\u4ee5\u8981\u6c42$(56/7)\\%5$\u6642\uff0c\u6211\u5011\u60f3\u8981\u63db\u6210$(56\\times k)\\%5$\u7684\u8a71(\u56e0\u70ba\u4e58\u6cd5\u624d\u53ef\u4ee5\u5c55\u958b)\uff0c\u5c31\u8981\u5148\u6c42$(7\\times k)\\%5=1$\uff0c\u7d93\u904e\u904b\u7b97(\u5148\u76f4\u63a5\u63a8\u7684\u8a71)\uff0c\u53ef\u4ee5\u5f97\u5230$k=3$ \uff0c\u56e0\u70ba$(7\\times 3)\\%5=(21)\\%5=1$\uff0c\u6240\u4ee5 $(56/7)\\%5$ \u53ef\u4ee5\u63db\u6210 $(56\\times 3)\\%5$\uff1a</p> <p>\u00a0\u00a0\u00a0 $(56/7)\\%5$ $=(56\\times 3)\\%5$ $=(56\\%5\\times 3\\%5)\\%5$ $=(1\\times 3)\\%5$ $=3$</p>"},{"location":"%E5%85%83%E7%B4%A0/%E8%B2%BB%E9%A6%AC%E5%B0%8F%E5%AE%9A%E7%90%86/#_4","title":"\u6c42\u6a21\u53cd\u5143\u7d20","text":"<p>\u6211\u5011\u5148\u8a66\u8a66\u66b4\u529b\u627e\u6cd5</p> <p>code: <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define nn \"\\n\"\nint _find(int a,int c){\n    int b=1;\n    for(int i=0;i&lt;c;i++){\n        if((a*i)%5==1){\n            return i;\n        }\n    }\n    return -1;\n}\n\nint main(){\n    int b;\n    //\u8a08\u7b97(56/7)%5;\n    //(7*k)%5=1\n    b=_find(7,5);\n    cout&lt;&lt;\"\u8a08\u7b97(56/7)%5\"&lt;&lt;nn;\n    cout&lt;&lt;\"\u53cd\u5143\u7d20\uff1a \"&lt;&lt;b&lt;&lt;nn;\n    cout&lt;&lt;\"\u7b54\u6848\uff1a \"&lt;&lt;(56/b)%5;\n}\n</code></pre> output: <pre><code>\u8a08\u7b97 (56/7)%5 \u70ba (a*b)%c\n\u53cd\u5143\u7d20b=3\n\u7b54\u6848=3\n</code></pre> \u8907\u96dc\u5ea6\u70baO(P)\u4e5f\u5c31\u662fO(n)\uff0c\u592a\u6162\u4e86\u3002 \u8981\u5982\u4f55\u66f4\u5feb\u627e\u5230\u7b54\u6848\u5462\uff1f \u9019\u6642\u5019\u8981\u7528\u5230\u8cbb\u99ac\u5c0f\u5b9a\u7406\u3002</p>"},{"location":"%E5%85%83%E7%B4%A0/%E8%B2%BB%E9%A6%AC%E5%B0%8F%E5%AE%9A%E7%90%86/#_5","title":"\u8cbb\u99ac\u5c0f\u5b9a\u7406","text":"<p>\u8cbb\u99ac\u5c0f\u5b9a\u7406\u63d0\u5230(\u8a73\u7d30\u8b49\u660e\u6b64\u7bc7\u4e0d\u63d0) \u5982\u679c\u6709\u4e00\u500b\u300c\u6574\u6578\u300d$a$ \u548c\u4e00\u500b\u300c\u8cea\u6578\u300d$p$ \u90a3\u9ebc $a^p \\equiv a \\pmod{p}$ \u6709\u4e9b\u5730\u65b9\u4e5f\u6703\u5beb\u6210 $a^p-a \\equiv 0 \\pmod{p}$ \u4e5f\u5c31\u662f $a^p-a$ \u70ba p \u7684\u500d\u6578</p> <p>\u5c07\u6307\u6578\u62c6\u958b\u5f97\u5230</p> <p>$a^{p-2}\u00a0*\u00a0a^2\u00a0\\equiv\u00a0a^{-1}\u00a0*\u00a0a^2\u00a0 \\pmod{p}$</p> <p>\u63a5\u8457\u6839\u64da\u540c\u9918\u6027\u8cea\u5f97\u5230</p> <p>$a^{p-2}\u00a0\\equiv\u00a0a^{-1}\u00a0 \\pmod{p}$</p> <p>\u7531\u4e0a\u5f0f\u5b50\u53ef\u77e5\u5728$\\pmod{p}$ \u6642\uff0c\u6c42 $a^{p-2}$ \u5c31\u53ef\u4ee5\u5f97\u5230 $a^{-1}$ \u4e5f\u5c31\u662f\u5f97\u5230\u6a21\u9006\u5143</p> <p>\u4fbf\u53ef\u5f97\u5230\u6700\u5f8c\u7d50\u8ad6\uff1a</p> <p>\u8cbb\u99ac\u5c0f\u5b9a\u7406\uff1a\u300c\u82e5 $P$ \u70ba\u8cea\u6578\uff0c\u5c0d\u4efb\u610f\u6b63\u6574\u6578 $a$ \uff0c $(a^{P-2} \\% P)$ \u662f $a$ \u5728 $[1, P-1]$ \u5340\u9593\u7684\u552f\u4e00\u4e58\u6cd5\u53cd\u5143\u7d20\u3002\u300d</p> <p>\u518d\u56de\u5230\u524d\u9762\u4f8b\u5b50\uff1a$(56/7)\\%5$ \u8981\u6c42 $7\\%5$ \u7684\u6a21\u9006\u5143 \u5c31\u662f\u6c42 $7^{5-2}\\%5=343\\%5=3$</p> <p>\u5b8c\u6574\u904b\u7b97\u5f0f\uff1a \u00a0\u00a0\u00a0\u00a0$(56/7)\\%5$ $=(56 \\times (7^{5-2}\\%5))\\%5$ $=(56 \\times (343\\%5))\\%5$ $=(56 \\times 3)\\%5$ $=(56\\%5\\times 3\\%5)\\%5$ $=(1\\times 3)\\%5$ $=3$</p> <p>\u63a5\u4e0b\u4f86\u8981\u601d\u8003\u5982\u4f55\u6c42 $a^{p-2}$ \uff0c\u5982\u679c\u6162\u6162\u4e58\u4e0a\u53bb\uff0c\u8907\u96dc\u5ea6\u70baO(P)\uff0c\u592a\u6162\u4e86\uff0c\u60c5\u6cc1\u4e26\u6c92\u6709\u6539\u5584\u3002</p> <p>\u6240\u4ee5\u8981\u6211\u5011\u53ef\u4ee5\u4f7f\u7528\u5feb\u901f\u5e42\uff0c\u5c31\u80fd\u5920\u7528O(log(P)) \u5c31\u8a08\u7b97\u51fa\u6a21\u9006\u5143</p> <p>code: <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define nn \"\\n\"\n\nint A,P;\n\nint mod(int a,int p){\n    if(p==0){\n        return 1;\n    }\n    else if(p%2==0){//2\n        return (mod(a,p/2))%P*(mod(a,p/2))%P;\n    }\n    else{//1\n        return (mod(a,p-1))%P*(a)%P;\n    }\n}\n\nint main(){\n    istringstream cin(\"7 5\");\n    cin&gt;&gt;A&gt;&gt;P;\n    cout&lt;&lt;mod(A,P-2);//to a^(p-2)\n}\n</code></pre> output: <pre><code>3\n</code></pre></p>"}]}